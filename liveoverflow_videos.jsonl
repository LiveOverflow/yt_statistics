{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "DFAdG9o0sTw", "thumbnail": "https://i.ytimg.com/vi/DFAdG9o0sTw/hqdefault.jpg", "date": "2023-03-11T17:06:38Z", "views": "31503", "tags": ["vscode", "language server", "vscode extension", "typesdcript", "typescript", "javascript", "json rpc", "jsonrpc", "wireshark", "python", "python3", "http pipelining", "malicious script", "security research", "failed research"], "title": "Attacking Language Server JSON RPC", "description": "While auditing a VSCode Extension + Language Server I noticed something interesting. This turned into the research question \"can we attack the extension from the browser?\". After a bit of preliminary research I decided to do it again on stream, and eventually made this video. This is how security research can look like.\nWhat is a Server? https://www.youtube.com/watch?v=VXmvM2QtuMU\nWhat is a Protoc"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3HSnDsfkJT8", "thumbnail": "https://i.ytimg.com/vi/3HSnDsfkJT8/hqdefault.jpg", "date": "2023-03-03T18:00:09Z", "views": "23034", "tags": ["minecraft hacked", "reach hack", "teleport exploit", "minecraft cheating", "cheat client", "client mod", "mixin", "teleportation", "fly hack"], "title": "Stealing Cheats from Cheaters (Teleport Hack)", "description": "There exists a pretty cool teleport hack that I couldn't discover myself. So I decided to steal it and share it with you all!\nMinecraft:HACKED Playlist https://www.youtube.com/playlist?list=PLhixgUqwRTjwvBI-hmbZ2rpkAl4lutnJG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "32KKwgF67Ho", "thumbnail": "https://i.ytimg.com/vi/32KKwgF67Ho/hqdefault.jpg", "date": "2023-02-17T15:13:16Z", "views": "35547", "tags": ["secure tunnel", "vpn", "openvpn", "tun/tap", "tun tap", "proxy", "wireguard", "secure proxy", "encryption", "layers", "tcp", "tcp/ip", "networking", "network packets", "physical layer", "encapsulation"], "title": "VPNs, Proxies and Secure Tunnels Explained (Deepdive)", "description": "What is a secure \"tunnel\"? When I started to learn about computers the name confused me. I couldn't imagine how it works on a technical level. In this video we build upon knowledge from the previous videos, to develop an intuition for what a tunnel, VPN or proxy is."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "9CS3q0uG1LI", "thumbnail": "https://i.ytimg.com/vi/9CS3q0uG1LI/hqdefault.jpg", "date": "2023-01-12T23:26:26Z", "views": "21717", "tags": [], "title": "I\u2019m moving, no videos sorry", "description": ""}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6G14NrjekLQ", "thumbnail": "https://i.ytimg.com/vi/6G14NrjekLQ/hqdefault.jpg", "date": "2023-01-01T17:30:08Z", "views": "71692", "tags": ["osi model", "layers", "osi layer model", "computer networking", "ip layer", "tcp layer", "physical layer", "explained with paper", "this is text", "send data", "socket programming", "sockets in c", "linux kernel", "tcp socket", "port number", "blackboxes"], "title": "Computer Networking (Deepdive)", "description": "In this video I try to explain computer networking with pieces of paper. This hopefully explains why in some universities the OSi layer model is taught. While I find the OSI model kinda useless, \"thinking in layers\" is extremely important. Blackboxes of layers allow us to focus on what matters, and ignore anything else."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TAUrzkOYLUk", "thumbnail": "https://i.ytimg.com/vi/TAUrzkOYLUk/hqdefault.jpg", "date": "2022-12-23T14:44:59Z", "views": "55897", "tags": ["minecraft", "2b2t", "cat coordinate", "tamed animal exploit", "2b2t coordinates", "taming animals", "coordinate exploit", "leashed cats", "dog coordinates", "2b2t dogs", "dogs leak location", "cats leaking location"], "title": "Revisiting 2b2t Tamed Animal Coordinate Exploit", "description": "Everybody told me the cat coordinate exploit/leak was already known. However this does not seem to be true, I tested it by logging packets."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "SJbuSXO4xs0", "thumbnail": "https://i.ytimg.com/vi/SJbuSXO4xs0/hqdefault.jpg", "date": "2022-12-18T10:46:38Z", "views": "15430", "tags": ["rsi", "pain", "hand pain", "finger pain", "Repetitive strain injury"], "title": "Pain in your Hand (RSI)?", "description": "Sitting in front of the computer all day, do you have problem with Repetitive strain injury (RSI)?"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "d-zn-wv4Di8", "thumbnail": "https://i.ytimg.com/vi/d-zn-wv4Di8/hqdefault.jpg", "date": "2022-12-13T17:06:16Z", "views": "104804", "tags": ["what is a protocol", "protocol explained", "what is tcp", "http", "udp", "uart", "rfc", "deepdive"], "title": "What is a Protocol? (Deepdive)", "description": "The term \"protocol\" can be really confusing. In this video I try to explain to my former self what it means to have a protocol."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2sy6aIaoI64", "thumbnail": "https://i.ytimg.com/vi/2sy6aIaoI64/hqdefault.jpg", "date": "2022-12-07T03:05:14Z", "views": "451015", "tags": ["chatgpt", "openai", "gpt-3", "prompt engineering", "chatgpt vs. google", "security research", "ping vulnerability"], "title": "Google vs. ChatGPT for Hackers #shorts", "description": "On stream we looked into the ping vulnerability and I had to look up some structs. With ChatGPT it was so simple compared to googling it."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qPsxbFdCO8k", "thumbnail": "https://i.ytimg.com/vi/qPsxbFdCO8k/hqdefault.jpg", "date": "2022-11-28T15:35:34Z", "views": "82444", "tags": ["reach hack", "reach attack", "minecraft protocol", "mc hacking", "hacked client", "meteor client", "bleach hack", "tp aura", "infaura", "infinite aura", "teleport aura"], "title": "Minecraft Reach Hack", "description": "Let's talk about how we can implement a reach hack in minecraft. After knowing how it works, it seems so obvious. But it took me over 14h to figure out myself :D\nMinecraft Protocol: https://wiki.vg/Protocol#Set_Player_Position"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Gi2PPBCEHuM", "thumbnail": "https://i.ytimg.com/vi/Gi2PPBCEHuM/hqdefault.jpg", "date": "2022-11-20T16:45:11Z", "views": "53007", "tags": ["minecraft hacked", "hacking minecraft", "meteor client", "fabric mod", "modding", "mc hacking", "liveoverflow server", "ahappypixel", "pixelpro", "tp-overflow", "tp overflow", "new base", "bedrock pattern", "minecraft cats"], "title": "Cat Coordinate Exploit 1.19.2", "description": "I tried to hide a new base far away, but players quickly found it. Let me tell you how they did it.\nShoutout to TP-Overflow: P1x3lPro (found cat exploit), Overlord2036, Enderkill98, 7H3, MonkeySaint, 19MisterX98"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VXmvM2QtuMU", "thumbnail": "https://i.ytimg.com/vi/VXmvM2QtuMU/hqdefault.jpg", "date": "2022-11-10T17:32:55Z", "views": "96357", "tags": ["server", "what is a server", "game server", "web server", "webserver", "server software", "server explained", "what does server stand for", "what does server mean", "serverside", "client-server model", "master and slave", "primary and secondary", "controller", "port", "sockets", "ipc", "role", "purpose", "tutorial"], "title": "What is a Server? (Deepdive)", "description": "With this video I explain my ~17y/o self what a \"Server\" is. We look at server software and servers in datacenters to understand how the word is used."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "V4_5x4QtHVg", "thumbnail": "https://i.ytimg.com/vi/V4_5x4QtHVg/hqdefault.jpg", "date": "2022-10-31T17:00:07Z", "views": "63547", "tags": ["minecraft", "hacking", "hacked client", "noobbot", "n00bbot", "liveoverflow server", "minecraft server", "masscan", "scanning server", "1.18.2", "1.19.2", "coordinage cracking", "texture rotation", "griefing", "server griefed", "spawn", "fly hack", "xray", "sodium", "xray mod", "fabric mod", "mixin", "bruteforce", "utility mod"], "title": "Server Griefed and New Beginnings ...", "description": "I was bullied and kicked out. So I traveled very very far away to establish a new base. In the process I moved the world from 1.18.2 to 1.19.2, forcing everybody to upgrade their hacks and find the new IP. But can you also find my new base?\nEpisode 9 Seedcracking: https://www.youtube.com/watch?v=gSxcDYCK_lY&list=PLhixgUqwRTjwvBI-hmbZ2rpkAl4lutnJG&index=11"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "MS7WRuzNYDc", "thumbnail": "https://i.ytimg.com/vi/MS7WRuzNYDc/hqdefault.jpg", "date": "2022-10-21T15:55:18Z", "views": "260530", "tags": ["ip address", "leak", "ip leak", "ipv4", "ipv6", "nat", "cgn", "carrier-grade nat", "packets", "source ip", "geolocate ip", "geoip", "ipinfo", "threat model", "vpn", "vpn ads", "vpn hide ip"], "title": "I Leaked My IP Address!", "description": "How bad is it to leak your IP address? VPN providers want us to believe it is dangerous, but I wanted to share my thoughts on the matter."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RDkWagIW6gw", "thumbnail": "https://i.ytimg.com/vi/RDkWagIW6gw/hqdefault.jpg", "date": "2022-10-12T17:00:12Z", "views": "126985", "tags": ["minecraft", "hacking", "cheat client", "teleport", "fly hack", "anti fly bypass", "worlguard exploit", "0day", "world guard", "protection plugin", "region protection", "noentry", "block entry", "code review", "java", "server plugin", "paper", "onMoveEvent", "onPlayerMove", "move event", "plugin event system", "eventless flight", "packetfly", "wg", "region", "paper server"], "title": "WorldGuard Bypass", "description": "Telling the story how code review lead to the discovery of a common mistake plugin developers make. It also affects worldguard. However is it really worth fixing?"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "mKAWpFdVcPY", "thumbnail": "https://i.ytimg.com/vi/mKAWpFdVcPY/hqdefault.jpg", "date": "2022-10-03T15:41:42Z", "views": "40258", "tags": ["xss", "css", "cross-site scripting", "cross site scripting", "microsoft", "ie5", "georgi guninski", "ie4", "internet explorer", "netscape", "jscript", "javascript", "cross-domain", "cross frame", "cert", "advisory"], "title": "The Origin of Cross-Site Scripting (XSS) - Hacker Etymology", "description": "Why is it called \"XSS\"? Where does it come from and who influenced this type of website vulnerability?\nFull Playlist \"The History of XSS\": https://www.youtube.com/playlist?list=PLhixgUqwRTjyakFK7puB3fHVfXMinqMSi"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gVblb-QhZa4", "thumbnail": "https://i.ytimg.com/vi/gVblb-QhZa4/hqdefault.jpg", "date": "2022-09-23T16:41:37Z", "views": "45875", "tags": ["xss", "jscript", "javascript", "ecmascript", "1996", "windows 95", "windows 98", "internet explorer", "netscape", "cross-frame policy", "cross-site scripting", "xss vulnerability", "uxss", "universal xss", "georgi guninski"], "title": "The Age of Universal XSS", "description": "In August 1996, Internet Explorer joined the JavaScript security scene after they added JScript. During this era from around 1996-2000, tons of bugs were found what we would call today \"Universal Cross-site Scripting\". I find this word confusing, but looking back at the history, we can try to make sense of it.\nJabadoo Security Hole in Explorer 4.0: https://seclists.org/bugtraq/1997/Oct/85\nAleph On"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "WEMOCFe4EFE", "thumbnail": "https://i.ytimg.com/vi/WEMOCFe4EFE/hqdefault.jpg", "date": "2022-09-13T15:15:10Z", "views": "124694", "tags": ["minecraft", "hacked client", "server plugins", "bukkit", "sponge", "paper", "java", "mod", "fabric", "mixin", "player move event", "ender dragon", "herobrine", "hacking minecraft", "fly hack", "hacker server", "2b2t"], "title": "The End Of Humans In Minecraft", "description": "Hackers keep finding my server and ruin everything. Maybe it's time to end it.\nWatch full series: https://www.youtube.com/playlist?list=PLhixgUqwRTjwvBI-hmbZ2rpkAl4lutnJG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VtcA58555lY", "thumbnail": "https://i.ytimg.com/vi/VtcA58555lY/hqdefault.jpg", "date": "2022-09-04T14:32:41Z", "views": "51239", "tags": ["xss", "javascript", "livescript", "ecmascript", "xss legends", "legendary", "loverso", "weston", "tennyson", "read dir", "netscape", "windows 95", "internet explorer", "1996", "1995", "java script", "tbtf"], "title": "The Three JavaScript Hacking Legends", "description": "In this video we talk about the first JavaScript vulnerabilities in 1997, and how the field was dominated by three \"XSS\" legends.\nBugtraq 1997 - LoVerso: https://seclists.org/bugtraq/1997/Jun/88\nLoVerso Website: https://web.archive.org/web/19970607122219/http://www.osf.org/~loverso/javascript/\nLoVerso dir.html PoC: https://web.archive.org/web/19970607185809/http://www.osf.org/~loverso/javascript/d"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3_e4t3l8fgY", "thumbnail": "https://i.ytimg.com/vi/3_e4t3l8fgY/hqdefault.jpg", "date": "2022-08-25T17:30:10Z", "views": "233497", "tags": ["minecraft hacked", "minecraft client", "custom client", "hacked client", "herobrine", "forceop", "force-op", "force op", "operator", "admin", "plugin", "xss", "0day", "cross-site scripting", "alert(1)", "aes", "aes/cfb8", "cfb8", "encryption", "network protocol", "vktec"], "title": "Minecraft Force-OP Exploit!", "description": "We investigate how Herobrine got OP on my server and we look back at the network protocol vulnerability I reported in march.\nvktec: https://www.youtube.com/c/vktec/videos\nMinecraft Protocol Vulnerability: https://www.youtube.com/watch?v=i-2UgCDdhpM\nMinecraft:HACKED Playlist: https://www.youtube.com/watch?v=Ekcseve-mOg&list=PLhixgUqwRTjwvBI-hmbZ2rpkAl4lutnJG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "x_R1DeZxGc0", "thumbnail": "https://i.ytimg.com/vi/x_R1DeZxGc0/hqdefault.jpg", "date": "2022-08-11T15:15:04Z", "views": "106456", "tags": ["out-of-order", "transient execution", "ridl", "spectr", "meltdown", "specter", "cpu vulnerabilities", "cpu vulns", "intel CPUs", "hacking CPUs", "side channel attacks", "sidechannel leaks"], "title": "Discover Vulnerabilities in Intel CPUs!", "description": "In this video we explore the basic ideas behind CPU vulnerabilities and have a closer look at RIDL.\nThis video is sponsored by Intel and their Project Circuit Breaker: https://www.projectcircuitbreaker.com/\nHow to Benchmark Code Execution Times: https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/ia-32-ia-64-benchmark-code-execution-paper.pdf\nAnders Fogh: https://cyber.wtf/20"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "e0X8xPl4YDk", "thumbnail": "https://i.ytimg.com/vi/e0X8xPl4YDk/hqdefault.jpg", "date": "2022-08-07T18:15:12Z", "views": "96387", "tags": [], "title": "Code Review vs. Dynamic Testing explained with Minecraft", "description": "Maybe you are wondering how people can figure out crazy stuff in Minecraft. Generally there are two techniques: dynamic testing or reading code. So which method is better?\n2No2Name (original finder) Zombie AI: https://www.youtube.com/watch?v=0HvXMFwaYss\ndocm77: https://www.youtube.com/watch?v=BoVMWNeVLf4&t=2148s"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gPsYkV7-yJk", "thumbnail": "https://i.ytimg.com/vi/gPsYkV7-yJk/hqdefault.jpg", "date": "2022-07-31T13:07:01Z", "views": "219491", "tags": ["reverse engineering", "reversing", "self-learning", "self education", "x86", "arm", "mips", "x64", "64bit vs 32bit", "intel assembly", "godbold", "dogbolt", "compiler", "decompiler", "binary ninja", "ida", "idapro", "ida pro", "ghidra", "decompile"], "title": "Self-Learning Reverse Engineering in 2022", "description": "There exist some awesome tools nowadays to accelerate your self-education for reverse engineering. godbolt and dogbolt are amazing to quickly learn basic assembly and reversing.\nCompiler Explorer: https://godbolt.org/\nDecompiler Explorer: https://dogbolt.org/\nC code example: https://github.com/LiveOverflow/liveoverflow_youtube/blob/master/0x05_simple_crackme_intro_assembler/license_1.c\nIntroducing"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bSJm8-zJTzQ", "thumbnail": "https://i.ytimg.com/vi/bSJm8-zJTzQ/hqdefault.jpg", "date": "2022-07-23T14:45:22Z", "views": "89228", "tags": ["sop", "same origin policy", "netscape", "navigator", "netscape 2.0", "2.02", "xss", "cross-site scripting", "cross-origin", "cross domain", "frameset", "frame", "livescript"], "title": "The Same Origin Policy - Hacker History", "description": "In 1995 Netscape invented JavaScript (LiveScript) and it marked the start of client-side web security issues. In this video we explore this history and learn about the same origin policy (SOP).\nCookies Explained: https://web.archive.org/web/19970605224124/http://help.netscape.com/kb/client/970226-2.html\nNetscape 2.0b1 LiveScript: https://web.archive.org/web/20021212124306/http://wp.netscape.com:80"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gSxcDYCK_lY", "thumbnail": "https://i.ytimg.com/vi/gSxcDYCK_lY/hqdefault.jpg", "date": "2022-07-13T17:00:13Z", "views": "82375", "tags": ["server", "minecraft server", "bedrock", "java edition", "seed cracking", "random seed", "seedcracking", "1.18", "1.19", "java random", "lfg", "generator", "nextRand", "nextInt", "nextLong", "random.nextLong", "minecraft seed", "rng", "random number generator", "19MisterX98", "world seed", "text seed", "decorator seed"], "title": "They Cracked My Server!", "description": "Some players found my server and imprisoned me...\nSeedcrackerX: https://github.com/19MisterX98/SeedcrackerX\nTexture Rotation: https://github.com/19MisterX98/TextureRotations\nMathew Bolan Seedcracking: https://www.youtube.com/watch?v=8CKh4x4iK38&list=PLke4P_1UHlmB8sB1oGdcea4SeBH0yZy5B"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Q5kIdpPIVuY", "thumbnail": "https://i.ytimg.com/vi/Q5kIdpPIVuY/hqdefault.jpg", "date": "2022-07-03T16:22:05Z", "views": "107655", "tags": ["strafrecht", "hacking is illegal", "hacking not a crime", "legal hacking", "ethical hacker", "ethics", "cybercrime", "cyber crime", "cyber security", "is hacking allowed", "jailed hacker", "stgb", "202a", "202b", "202c", "303a", "303b", "anwalt", "Hacker paragraph"], "title": "A Deeper Look at Hacking Laws", "description": "A deeper look into the german hacking laws to see what kind of actions are illegal. There are some surprising edge cases and lots of room for debates.\nObviously this video is not legal advice."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "QradKmQ27JY", "thumbnail": "https://i.ytimg.com/vi/QradKmQ27JY/hqdefault.jpg", "date": "2022-06-24T17:30:12Z", "views": "61540", "tags": ["minecraft", "minecraft hacked", "hacking minecraft", "cheating", "minecraft cheat client", "finding bugs", "code review", "super fast build", "buildmode", "goodtimeswithscar", "resource pack", "datapack", "club mate", "key axe", "herobrine", "timberforge"], "title": "Are Resource Packs Safe?", "description": "Let's explore how Minecraft can be customized. The knowledge we gain from that is very useful to identify interesting attack surface.\nTimber Forge: https://www.youtube.com/channel/UC606Jh3yjNj40dcVuMwtUCw\nMcMakistein: https://www.youtube.com/user/McMakistein\nInformation leak in Minecraft 1.8: https://blog.punkeel.com/2018/09/12/minecraft-18-info-leak/\nFuzzing Java: https://www.youtube.com/watch?v="}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "QhNmb42nF-I", "thumbnail": "https://i.ytimg.com/vi/QhNmb42nF-I/hqdefault.jpg", "date": "2022-06-12T17:15:08Z", "views": "60987", "tags": ["minecraft", "minecraft hacked", "hacking minecraft", "cheat client", "hacked client", "villagers", "spider farm", "log4shell", "log4j", "mc log4shell", "shockbyte", "minecraft hosting", "unlimited ram", "log4j research", "internet scanning"], "title": "The State of log4shell in Minecraft Months Later", "description": "Laws are complicated and internet wide scanning is a bit of a grey area. So I wonder, what is ethical? Did I cross a line? What do you think?\nLog4shell explained: https://www.youtube.com/watch?v=w2F67LbEtnk\nLog4j in Minecraft by John Hammond: https://www.youtube.com/watch?v=7qoPDq41xhQ\nlimited ldap server by leonjza: https://github.com/leonjza/log4jpwn/blob/master/pwn.py"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "GvO2Xtx8p9w", "thumbnail": "https://i.ytimg.com/vi/GvO2Xtx8p9w/hqdefault.jpg", "date": "2022-06-03T19:49:00Z", "views": "122098", "tags": ["google cloud", "gcp prize", "gcp prize 2021", "hacking into google", "hacking google cloud", "google cloud platform", "cloudsql", "anthos service mesh", "google dataflow", "compute engine", "cloud run", "identity aware proxy", "IAP", "anthony weems"], "title": "Could I Hack into Google Cloud?", "description": "Google announced the Google Cloud Platform (GCP) Prize 2021 - 133.337$ for the best bug bounty report for the Google Cloud Platform. Reading writeups is important to stay up to date and learn about different attacks. In this video I go over the 6 winners and share my thoughts.\nThis video is sponsored by Google."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VIy_YbfAKqo", "thumbnail": "https://i.ytimg.com/vi/VIy_YbfAKqo/hqdefault.jpg", "date": "2022-05-19T17:00:15Z", "views": "64035", "tags": [], "title": "Scanning The Internet for Minecraft Servers", "description": "I want to show you another Minecraft related project of mine. I tried to scan the whole internet for servers. For what? Well.... you will see.\nDid 2b2t Griefers Just Do The Impossible? https://www.youtube.com/watch?v=fvbVnT-RW-U\nGriefing Jeb's Private Server w/ Babbaj, orsond, Zetrax, and _Aaron_ https://www.youtube.com/watch?v=vrjf33A2Vkc\nMaybe jeb_ server grief was fake? https://www.youtube.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "i-2UgCDdhpM", "thumbnail": "https://i.ytimg.com/vi/i-2UgCDdhpM/hqdefault.jpg", "date": "2022-05-08T17:45:09Z", "views": "113481", "tags": ["minecraft", "minecraft hacked", "0day in minecraft", "protocol vulnerability", "minecraft protocol", "wiki.vg", "aes", "AES encryption", "AES/CFB", "Counter Feedback Mode", "AES vulnerability", "let's play", "xray mod", "mod tutorial", "mojang", "minecraft bug", "protocol analysis"], "title": "Crafting a Minecraft 0day...", "description": "In this video I show off my new XRay mod, we go mining, almost die in the Nether and discover a vulnerability in the Minecraft Protocol. Just another normal Minecraft:HACKED episode!\nCheckout ilmango: https://www.youtube.com/c/ilmango\nSciCraft: https://twitter.com/scicraft_"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Hmmr1oLt-V8", "thumbnail": "https://i.ytimg.com/vi/Hmmr1oLt-V8/hqdefault.jpg", "date": "2022-04-20T14:30:11Z", "views": "74664", "tags": ["minecraft", "hermitcraft", "modding", "minecraft mod", "fabric mod", "example mod", "sponge", "spongepowered", "mixin", "asm", "java bytecode", "java class", "minecraft hacking", "hacked client", "hacks", "teleport hack"], "title": "Modding is Hacking...", "description": "In this episode of Minecraft Hacked we are going to look into client mods and talk about cheating in general.\nFabric Example Mod: https://github.com/FabricMC/fabric-example-mod\nMixin Examples: https://fabricmc.net/wiki/tutorial:mixin_examples\nMixin Wiki: https://github.com/SpongePowered/Mixin/wiki\nShulker Dupe mod by 0x3C50: https://github.com/Coderx-Gamer/shulker-dupe\nFredOverflow: https://www.yo"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "E9kz6RQu9Oc", "thumbnail": "https://i.ytimg.com/vi/E9kz6RQu9Oc/hqdefault.jpg", "date": "2022-04-16T17:41:19Z", "views": "30243", "tags": ["nullcon", "null con berlin", "goa", "ctf", "vlog", "ctf vlog", "security conference", "hacking con", "conference vlog", "vlogging", "ctf vlogging", "nullcon2022", "hacker travel", "security con", "nullcon 2022", "pandemic vlog"], "title": "Awkward VLOG at Nullcon Berlin 2022", "description": "I attended Nullcon berlin 2022 in Berlin. Finally met a lot of people I haven't seen in a long time, and also met lots of new people.\nNullcon: https://nullcon.net/berlin-2022\nCard game: https://thecodeck.com/\nMagic Word Writeup: https://ctftime.org/writeup/33233"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Ekcseve-mOg", "thumbnail": "https://i.ytimg.com/vi/Ekcseve-mOg/hqdefault.jpg", "date": "2022-04-01T14:15:10Z", "views": "202593", "tags": ["minecraft", "hacking", "cheats", "cheat client", "minecraft hacked", "mineoverflow", "minecraft pwnadventure", "game hacking", "netty", "network protocol", "minecraft java", "minecraft protocol", "minecraft modding", "python", "wiki.vg", "protocol reversing", "teleport hack", "fly hack", "flying", "minecraft:hacked", "2b2t", "anarchy server", "day 100", "100 days", "let's play", "minecraft let's play", "minecraft let's hack"], "title": "I Spent 100 Days Hacking Minecraft", "description": "I got addicted to Minecraft, so I decided to hack it.\nI know this is a weird video for this channel, but it was really fun to combine Minecraft storytelling with technical tutorials. The result is a very unique hacking tutorial that hopefully can reach lots of new people. I hope you enjoy it!\nGame Hacking Pwn Adventure Series: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwg"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "BFMmSJ3PRZM", "thumbnail": "https://i.ytimg.com/vi/BFMmSJ3PRZM/hqdefault.jpg", "date": "2022-03-24T15:33:21Z", "views": "57050", "tags": ["capture the flag", "ctf", "speedrung", "ctf speedrun", "stripe-ctf", "stripe ctf", "stripectf", "walkthrough", "tutorial", "buffer overflow", "path variable", "linux basics", "ssh", "io smashthestack", "io netgarage", "wargame", "wargames", "timing attack", "cscg", "cyber security challenge", "ecsc", "european cyber security", "cybersecurity", "nfits", "level01", "10 year anniversary", "hacking anniversary", "celebrate", "celebration"], "title": "I've been Hacking for 10 Years! (Stripe CTF Speedrun)", "description": "Celebrating my 10 years of hacking and my 7 years on YouTube!\nIn 2012 I came across my first hacking CTF. Stripe organized a Capture the Flag competition with 6 levels to learn about different vulnerabilities. This is what it all started for me.\nCyber Security Challenge Germany: https://cscg.live\nNFITS donations: https://nfits.de/spenden/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "064yDG7Rz80", "thumbnail": "https://i.ytimg.com/vi/064yDG7Rz80/hqdefault.jpg", "date": "2022-03-16T19:18:31Z", "views": "115843", "tags": ["bug bounty", "http headers", "security headers", "csp", "cors", "cors misconfiguration", "withcredentials", "xss", "csrf", "hsts", "missing security headers", "bug bounty impact", "google vrp", "google bug bounty", "bugbounty"], "title": "Missing HTTP Security Headers - Bug Bounty Tips", "description": "In this video we talk about various HTTP headers that can improve or weaken the security of a site. And we discuss how serious they are in the context of Google's bug bounty program.\nFind the full playlist with videos for Google here: https://www.youtube.com/playlist?list=PLY-vqlMAnJ9bGoI82H1BB8BE4A8H2OCA-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "yrCXamnX9No", "thumbnail": "https://i.ytimg.com/vi/yrCXamnX9No/hqdefault.jpg", "date": "2022-03-07T16:09:43Z", "views": "79941", "tags": ["0day", "0-day", "zero day", "zeroday", "ctf", "capture the flag", "real world", "pentest", "realistic ctf", "real world ctf", "realworld ctf", "web hacking", "microservices", "api key", "admin api", "ssrf", "server side request forgery", "x-real-ip", "http header", "bug", "vulnerability", "security research"], "title": "Finding 0day in Apache APISIX During CTF (CVE-2022-24112)", "description": "In this video we perform a code audit of Api6 and discover a default configuration that can be escalated to remote code execution. \nCVE-2022-24112: https://seclists.org/oss-sec/2022/q1/133\nGitLab: https://liveoverflow.com/gitlab-11-4-7-remote-code-execution-real-world-ctf-2018/\nChallenge files: https://github.com/chaitin/Real-World-CTF-4th-Challenge-Attachments/tree/master/API6"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qA8KB6KndrE", "thumbnail": "https://i.ytimg.com/vi/qA8KB6KndrE/hqdefault.jpg", "date": "2022-02-24T16:44:36Z", "views": "81373", "tags": ["real world ctf", "realworld ctf", "jsp shell", "web shell", "tomcat", "ROOT.war", "web.xml", "ctf", "capture the flag", "desperate cat", "md5", "java", "jdk", "jvm", "docker"], "title": "Exploiting Java Tomcat With a Crazy JSP Web Shell - Real World CTF 2022", "description": "This was a hard web CTF challenge involving a JSP file upload with very restricted character sets. We had to use the Expression Language (EL) to construct useful primitives and upload an ascii-only .jar file.\nAlternative writeups: https://github.com/voidfyoo/rwctf-4th-desperate-cat/tree/main/writeup\nFuzzing log4j with Jazzer: https://www.youtube.com/watch?v=kvREvOvSWt4"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ZDVxFk_T9vU", "thumbnail": "https://i.ytimg.com/vi/ZDVxFk_T9vU/hqdefault.jpg", "date": "2022-02-12T18:54:33Z", "views": "89259", "tags": [], "title": "Sudo Exploit for (old) Ubuntu 20.04 LTS", "description": "This is the end. We finally develop a working sudoedit exploit for Ubuntu 20.04.\nGrab the files: https://github.com/LiveOverflow/pwnedit\nGrab the iso: https://old-releases.ubuntu.com/releases/20.04/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kvREvOvSWt4", "thumbnail": "https://i.ytimg.com/vi/kvREvOvSWt4/hqdefault.jpg", "date": "2022-02-01T16:37:53Z", "views": "52992", "tags": [], "title": "Fuzzing Java to Find Log4j Vulnerability - CVE-2021-45046", "description": "After the log4shell (CVE-2021-44228) vulnerability was patched with version 2.15, another CVE was filed. Apparently log4j was still vulnerable in some cases to a denial of service. However it turned out that on some systems, the issue can still lead to a remote code execution. In this video we use the Java fuzzer Jazzer to find a bypass.\nJazzer Java Fuzzer: https://github.com/CodeIntelligenceTesti"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "IEyK1VayvM4", "thumbnail": "https://i.ytimg.com/vi/IEyK1VayvM4/hqdefault.jpg", "date": "2022-01-18T23:00:06Z", "views": "35685", "tags": [], "title": "Debugging The Failing sudoedit Exploit | Ep.16", "description": "Our exploit doesn't work as the user. So now we need to investigate and figure out  how we can make it work. We explore three options and implement additional code, but nothing seems to work.\nGrab the files: https://github.com/LiveOverflow/pwnedit"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "UsteKcPiGbA", "thumbnail": "https://i.ytimg.com/vi/UsteKcPiGbA/hqdefault.jpg", "date": "2022-01-11T15:00:16Z", "views": "65799", "tags": [], "title": "Creating The First (Failed) Sudoedit Exploit | Ep. 15", "description": "WE CREATED OUR FIRST EXPLOIT! In this video we were able to control the loading of a malicious library. This can be used to execute our own code as root! But it only works when executing it as root  Executing it as a regular user doesn't work...\nGrab the files: https://github.com/LiveOverflow/pwnedit\ndlopen man page: https://man7.org/linux/man-pages/man3/dlopen.3.html\nComplete playlist: https://st"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0ti-YgB2iR4", "thumbnail": "https://i.ytimg.com/vi/0ti-YgB2iR4/hqdefault.jpg", "date": "2022-01-03T15:00:00Z", "views": "35566", "tags": ["sudo", "nss", "dlopen", "bane servuce switch", "nssconf", "nsswitch.conf", "passwd", "shadow", "group", "sudoedit", "pwnedit", "baron samedit", "memory corruption", "heap overflow", "gdb", "binary exploitation", "buffer overflow", "exploit strategy"], "title": "Learning about nss (Linux Name Service Switch) During Sudo Exploitation | Ep. 14", "description": "To understand a crash in nss_load_function() better, we have to look at the libc source code. While doing this we find a very interesting exploit strategy using dlopen.\nGrab the files: https://github.com/LiveOverflow/pwnedit\nRead libc Code: https://elixir.bootlin.com/glibc/glibc-2.31/source"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "iI9Dz3zN4d8", "thumbnail": "https://i.ytimg.com/vi/iI9Dz3zN4d8/hqdefault.jpg", "date": "2021-12-24T15:45:35Z", "views": "65503", "tags": ["log4j", "log4shell", "java logging", "logger", "object serialization", "java deserialization", "serialisation", "remote class loading", "jndi", "java", "jvm", "enterprise java", "upgrade", "update", "cve-2021-44228", "CVE", "walkthrough", "exploit walkthrough", "in-depth", "minecraft", "blog", "writeup", "vulnerability", "maven", "rmi", "ldap", "ldap server", "ladps", "${java:ldap://liveoverflow.com}", "zero day", "log4j rce", "log4shell demo", "exploit demo", "internals", "debugging", "intellij"], "title": "Log4j Lookups in Depth // Log4Shell CVE-2021-44228 - Part 2", "description": "In this video we dig a layer deeper into Log4j. We get a quick overview how Log4j is parsing lookup strings and find the functions used in WAF bypasses. Then we bridge the gap to format string vulnerabilities and figure out why the noLookups mitigation has flaws.\nPart 1 - Hackers vs. Developers // CVE-2021-44228 Log4Shell: https://www.youtube.com/watch?v=w2F67LbEtnk"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "w2F67LbEtnk", "thumbnail": "https://i.ytimg.com/vi/w2F67LbEtnk/hqdefault.jpg", "date": "2021-12-17T16:04:35Z", "views": "256918", "tags": ["enterprise java", "exploit", "exploit tutorial", "exploit walkthrough", "hacking tutorial", "how to hack", "in-depth", "java", "java deserialization", "java logging", "javaee", "jndi", "jvm", "ladps", "ldap", "ldap server", "liveoverflow", "log4j", "log4j rce", "log4j2", "log4shell", "log4shell demo", "logger", "maven", "minecraft", "objctstream", "object serialization", "remote class loading", "rmi", "serialisation", "update", "upgrade", "vulnerability", "walkthrough", "writeup", "zero day"], "title": "Log4j Vulnerability (Log4Shell) Explained // CVE-2021-44228", "description": "Let's try to make sense of the Log4j vulnerability called Log4Shell. First we look at the Log4j features and JNDI, and then we explore the history of the recent log4shell vulnerability.  This is part 1 of a two part series into log4j.\nLog4j Issues:\n2013: https://issues.apache.org/jira/browse/LOG4J2-313\n2014: https://issues.apache.org/jira/browse/LOG4J2-905\n2017: https://issues.apache.org/jira/brow"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Y8qljlUjEEM", "thumbnail": "https://i.ytimg.com/vi/Y8qljlUjEEM/hqdefault.jpg", "date": "2021-12-14T14:53:44Z", "views": "29639", "tags": [], "title": "Can We Find a New Exploit Strategy? | Ep. 13", "description": "We are still looking for an exploit strategy for the sudo heap overflow. In this episode we look at a few crashes and decide to look into one particular case more deeply.\nComplete Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx\nGrab the files: https://github.com/LiveOverflow/pwnedit (sorry, repo is a bit behind the videos)"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "hmJKUQlcGAc", "thumbnail": "https://i.ytimg.com/vi/hmJKUQlcGAc/hqdefault.jpg", "date": "2021-12-02T15:00:22Z", "views": "42480", "tags": ["auth", "auth vs auth", "authentication", "authorization", "auth differences", "what does it mean", "vs", "versus", "bug bounty", "auth bugs", "bugbounty"], "title": "Authorization vs. Authentication (Google Bug Bounty)", "description": "Authorization and Authentication can be confusing. In this video we look at their differences, and then focus on valid and invalid authorization bugs.\nadvertisement: this video was commissioned by the Google Vulnerablity Rewards Program for their site https://bughunters.google.com"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "tzUrYsQRHfs", "thumbnail": "https://i.ytimg.com/vi/tzUrYsQRHfs/hqdefault.jpg", "date": "2021-11-18T15:31:03Z", "views": "38187", "tags": ["heap", "gdb script", "gdb extension", "gef extension", "debugging", "heap analysis", "heap allocation", "malloc", "free", "breakpoints", "exploitation", "memory corruption", "segfault", "scripting", "python", "sudo", "sudoedit", "sudo samedit", "information security course", "heap overflow", "how to exploit the heap", "heap overflow vs stack overflow", "heap overflow tutorial", "security research"], "title": "Developing GDB Extension for Heap Exploitation | Ep. 12", "description": "We aren't getting anywhere... So we write a new tool to analyse the heap objects located after our overflowing buffer.\nComplete Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx\nGrab the files: https://github.com/LiveOverflow/pwnedit (sorry, repo is a bit behind the videos)"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8C7ouESJyfM", "thumbnail": "https://i.ytimg.com/vi/8C7ouESJyfM/hqdefault.jpg", "date": "2021-11-04T15:55:52Z", "views": "117405", "tags": ["0day", "zero day", "pegasus", "malware", "trojan", "hacking", "hack every device", "state sponsored", "security research", "vulnerability research", "iOS", "iPhone", "android", "chrome", "firefox", "safari", "webkit", "browser exploitation", "jailbreak"], "title": "Can Hackers Get Into Every Device?", "description": "Have you ever heard the sentence that every device can be hacked? I have talked to several security researchers who have experience in hacking Browsers, iPhones and more, to figure out if this is true. And if it's true, should you be worried?\nYou should worry more about Phishing: https://www.youtube.com/watch?v=NWtm4X6L_Cs"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "v784VBx9w8g", "thumbnail": "https://i.ytimg.com/vi/v784VBx9w8g/hqdefault.jpg", "date": "2021-10-26T14:13:55Z", "views": "30406", "tags": ["cryptowaf", "web application firewall", "waf bypass", "crypto", "cryptography", "encryption", "decryption", "design flaw", "logic flaw", "bug bounty", "ctf", "capture the flag", "sql injection", "sqlmap", "code audit", "security audit", "realistic ctf", "alles!", "alles ctf"], "title": "Design Flaw in Security Product - ALLES! CTF 2021", "description": "In this video we are exploring a theoretical security product that automagically encrypts user data securely. But it has a fundamental design flaw which can be exploited.\nChallenge Files: https://github.com/LiveOverflow/ctf-cryptowaf"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "CYWoJ6EYo84", "thumbnail": "https://i.ytimg.com/vi/CYWoJ6EYo84/hqdefault.jpg", "date": "2021-10-17T15:55:30Z", "views": "24326", "tags": ["pwnedit", "sudoedit", "sudo samedit", "heap", "heap overflow", "buffer overflow", "memory corruption", "heap research", "heap allocations", "fengshui", "feng shui", "heap grooming", "scripting", "python", "fuzzing"], "title": "Fuzzing Heap Layout to Overflow Function Pointers | Ep. 11", "description": "After we found some function pointers we could use for exploitation, we instructed sudo to find their heap locations. And then we are developing a script to find a heap layout usable for exploitation. \nComplete Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx\nGrab the files: https://github.com/LiveOverflow/pwnedit"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "UFyTksTXFTA", "thumbnail": "https://i.ytimg.com/vi/UFyTksTXFTA/hqdefault.jpg", "date": "2021-09-19T15:11:19Z", "views": "32756", "tags": [], "title": "Developing a Tool to Find Function Pointers on The Heap | Ep. 10", "description": "We develop a helper script to find function pointers we could maybe overwrite with our heap overflow. This is another episode in the sudo series.\nComplete playlist:\nhttps://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx\nGrab the files: https://github.com/LiveOverflow/pwnedit"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "c2Qi7traPls", "thumbnail": "https://i.ytimg.com/vi/c2Qi7traPls/hqdefault.jpg", "date": "2021-09-04T14:15:04Z", "views": "28500", "tags": ["sudo", "pwnedit", "heap overflow", "heap exploitation", "dlmalloc", "malloc", "free", "heap exploit", "buffer overflow", "exploit strategy", "heap metadata", "overwrite", "baron samedit"], "title": "Discussing Heap Exploit Strategies for sudo - Ep. 09", "description": "We have a heap buffer overflow, but how can we exploit this now? Let's discuss some of the possible strategies.\nGrab the files: https://github.com/LiveOverflow/pwnedit"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "FCjMoPpOPYI", "thumbnail": "https://i.ytimg.com/vi/FCjMoPpOPYI/hqdefault.jpg", "date": "2021-08-19T15:38:07Z", "views": "145204", "tags": ["ctf", "cscg", "capture the flag", "cyber security challenge", "germany", "ecsc", "european cyber", "cybersecurity", "web hacking", "bug bounty", "headless chrome", "docker", "container", "internal service", "ssrf", "self-xss", "flask", "jinja2", "template engine", "chaining bugs", "chain bugs", "walkthrough", "solution", "hacking tutorial 2021", "ethical hacking", "bug bounty hunting", "self-xss attack"], "title": "can you hack this screenshot service?? - CSCG 2021", "description": "I made a web hacking challenge for the Cyber Security Challenge Germany (cscg) 2021. \nGrab the files: https://github.com/LiveOverflow/ctf-screenshotter\nCyber Security Challenge Germany: https://www.cscg.de/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RZiGBjrOLY8", "thumbnail": "https://i.ytimg.com/vi/RZiGBjrOLY8/hqdefault.jpg", "date": "2021-08-11T15:50:09Z", "views": "28273", "tags": ["sudo", "pwnedit", "sudoedit", "sudo baron samedit", "qualys", "code review", "c code", "security code", "secure code", "strcmp", "strcpy", "strlen", "code audit", "binary exploitation", "security research"], "title": "C Code Review - Reaching Vulnerable Code in sudo | Ep. 08", "description": "A bit more code review of sudo to understand why it's vulnerable and what the conditions are to get there.\nFull Playlist: https://www.youtube.com/watch?v=TLa2VqcGGEQ&list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KHwVjzWei1c", "thumbnail": "https://i.ytimg.com/vi/KHwVjzWei1c/hqdefault.jpg", "date": "2021-07-31T15:04:58Z", "views": "140268", "tags": ["bug bounty", "google vrp", "bug report", "alert(1)", "xss", "cross site scripting", "window.location", "document.origin", "bugbountytips", "#bugbountytips", "bug hunter", "web security", "client-side security", "ethical hacking", "sandbox domain", "sandboxed domain", "cross-site scripting"], "title": "DO NOT USE alert(1) for XSS", "description": "... and use alert(document.domain) or alert(window.origin) instead.\nBlog post: https://liveoverflow.com/do-not-use-alert-1-in-xss/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "zdzcTh9kUrc", "thumbnail": "https://i.ytimg.com/vi/zdzcTh9kUrc/hqdefault.jpg", "date": "2021-07-24T15:17:17Z", "views": "52655", "tags": ["sudo", "pwnedit", "gef", "pointers", "pointer magic", "pointer in c", "pointer arithmetic", "c++", "copy loop", "vulnerability", "heap overflow", "asan", "address sanitizer", "security research", "binary exploitation"], "title": "Understanding C Pointer Magic Arithmetic | Ep. 07", "description": "We debug the line that causes the heap overflow. And it's a great opportunity to understand pointers in C.\nThe full playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "NWtm4X6L_Cs", "thumbnail": "https://i.ytimg.com/vi/NWtm4X6L_Cs/hqdefault.jpg", "date": "2021-07-17T15:57:55Z", "views": "154379", "tags": ["phishing awarness", "cyber security", "ethical hacking", "phishing attacks", "spear phishing meaning", "ethical hacking tutorial", "phishing attack website", "phishing awareness", "phishing awareness training", "security awareness phishing", "steam", "2fa", "two factor", "authentication", "password", "url bar", "chrome", "firefox", "safari"], "title": "Crazy Steam Phishing Page", "description": "This is a phishing security awareness video where I am showing you how to identify a trustworthy site. Spoiler alert: the browser address bar is the only trustworthy security indicator\nPhishing Quiz: https://phishingquiz.withgoogle.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "StQ_6juJlZY", "thumbnail": "https://i.ytimg.com/vi/StQ_6juJlZY/hqdefault.jpg", "date": "2021-07-10T14:35:25Z", "views": "127565", "tags": ["firefox", "bug bounty", "mozilla", "browser sandbox", "IPC", "inter process communication", "seccompt", "linux", "browser security", "exploit kit", "sandbox escape", "prompt:open", "browser 0day", "zero day", "CVE", "security research", "freddyb", "firefox nightly", "mozilla firefox", "firefox security", "google chrome", "zerodium", "pwn2own"], "title": "What is a Browser Security Sandbox?! (Learn to Hack Firefox)", "description": "It's surprisingly easy to do security research on Firefox trying to find sandbox escapes. You should give it a try!\nLong video version (stream Q&A): https://www.youtube.com/watch?v=VEaoDFdq95g"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "_W3D_0erZ00", "thumbnail": "https://i.ytimg.com/vi/_W3D_0erZ00/hqdefault.jpg", "date": "2021-07-02T17:16:45Z", "views": "27400", "tags": ["afl tutorial", "american fuzzy lop", "asan output", "buffer overflow", "bug", "bug bounty", "capture the flag", "crash analysis", "crash triaging", "debug output", "exploit tutorial", "fuzzer", "fuzzing", "guided fuzzing", "hacking class", "hacking tutorial", "heap overflow", "how to hack", "liveoverflow", "privilege escalation", "root cause", "security research", "triage"], "title": "Root Cause Analysis With AddressSanitizer (ASan) | Ep. 06", "description": "Now that we found a crash and got a minimal testcase last episode, we can now try to find the true location of the overflow. ASan is an invaluable tool for that.\nFuzzing Project: https://fuzzing-project.org/tutorial2.html\nGrab the files: https://github.com/LiveOverflow/pwnedit\nFull Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjy0gMuT4C3bmjeZjuNQyqdx"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "YeEGDfPqR0E", "thumbnail": "https://i.ytimg.com/vi/YeEGDfPqR0E/hqdefault.jpg", "date": "2021-06-25T17:30:35Z", "views": "23063", "tags": ["sudo", "sudoedit", "afl", "american fuzzy lop", "fuzzing", "fuzzer", "afl-tmin", "afl-pymin", "minimizing", "minimization", "minimizer", "testcases", "crashes", "crash analysis", "guided fuzzing", "security research", "pwnedit", "course", "courses", "hacking class", "tutorial", "afl tutorial"], "title": "Found a Crash Through Fuzzing? Minimize AFL Testcases! | Ep. 05", "description": "One fuzzer found a crash. Now we need to investigate if it's a 0day or if we found the known bug. To do that we first minimize the testcase, and then perform various tests and sanity checks.\nLong version with Q&A: https://www.youtube.com/watch?v=uDSbYM5g-1M"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "lKzsNp4AveY", "thumbnail": "https://i.ytimg.com/vi/lKzsNp4AveY/hqdefault.jpg", "date": "2021-06-18T17:12:40Z", "views": "35304", "tags": ["risk management", "vulnerability", "bug bounty", "ssh password auth", "risky", "vuln", "vuln vs risk", "bug vs. vuln", "versus", "non-issues", "low impact", "no impact", "security a", "security absolutist"], "title": "Understand Security Risk vs. Security Vulnerability!", "description": "What is the difference between a security vulnerability and a security risk?\nWhat is a Vulnerability: https://www.youtube.com/watch?v=866olNIzbrk\nSecuring Linux Servers: https://www.youtube.com/watch?v=fKuqYQdqRIs\nTop 25 Open Redirects: https://corneacristian.medium.com/top-25-open-redirect-bug-bounty-reports-5ffe11788794"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Do1Ri8TCF0Q", "thumbnail": "https://i.ytimg.com/vi/Do1Ri8TCF0Q/hqdefault.jpg", "date": "2021-06-11T17:25:58Z", "views": "40559", "tags": ["afl", "aflpp", "afl++", "american fuzzy lop", "fuzzing", "fuzzer", "investigate crash", "gdb", "debugging", "crashes", "segfault", "buffer overflow", "fix bufferoverflow", "stack smashing", "exploit development", "security research", "binary exploitation", "memory corruption"], "title": "Finding Buffer Overflow with Fuzzing | Ep. 04", "description": "AFL helped us to find a buffer overflow. Did we find a real crash in sudo? Let's investigate it.\nFiles on GitHub: https://github.com/LiveOverflow/pwnedit/tree/main/episode04\nBlog Post: https://liveoverflow.com/finding-buffer-overflow-with-fuzzing/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ErgIWeP6dXQ", "thumbnail": "https://i.ytimg.com/vi/ErgIWeP6dXQ/hqdefault.jpg", "date": "2021-06-04T17:35:57Z", "views": "39984", "tags": ["meritocracy", "brogrammer", "merit", "success", "succesful", "career", "career advice", "networking", "social media", "personal brand", "certificates", "certification", "hacker career", "it security consulting", "jealousy", "jealous", "money", "influence", "political power", "influencer", "intelligence", "intelligent", "philosophy"], "title": "Hacker Culture Meritocracy?", "description": "Is hacking a meritocracy? Who is not good enough? Successful people are the most skilled? Am I just jealous?\nThe Hacker Mind Podcast EP 22: Hacking Social Media  https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkLnBvZGJlYW4uY29tL3RoZWhhY2tlcm1pbmQvZmVlZC54bWw/episode/dGhlaGFja2VybWluZC5wb2RiZWFuLmNvbS9lNmE1NWNmZS05ODY5LTM3YzYtYTU1YS1lZTY4ZmMxODgxOWQ"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "W2kZnmchJhI", "thumbnail": "https://i.ytimg.com/vi/W2kZnmchJhI/hqdefault.jpg", "date": "2021-05-22T17:24:08Z", "views": "21047", "tags": ["afl", "aflplusplus", "sudo", "sudoedit", "pwnedit", "baron samedit", "security research", "fuzzing", "fuzzer", "out of memory", "no cpu", "guided fuzzing", "coverage guided fuzzer", "american fuzzy lop", "system error", "memory corruption", "afl trick", "parallel fuzzing", "setuid"], "title": "Troubleshooting AFL Fuzzing Problems | Ep. 03", "description": "We are using afl to fuzz the sudo binary, but we run into a lot more issues. In this video we are troubleshooting some issues and come up with solutions.\nArticle version: https://liveoverflow.com/troubleshooting-afl-fuzzing-problems/\nGrab the files: https://github.com/LiveOverflow/pwnedit"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sXThugPk_zA", "thumbnail": "https://i.ytimg.com/vi/sXThugPk_zA/hqdefault.jpg", "date": "2021-05-15T18:19:04Z", "views": "75339", "tags": ["pen testing", "bug bounty", "bugbounties", "pentesting", "penetration tester", "hacking", "appsec", "application security", "app sec", "code audit", "corporate", "enterprise", "business", "metasploit", "nessus", "burp", "what is hacking", "hacking jobs", "work as hacker", "different security jobs", "it security industry", "itsec", "hacker jobs"], "title": "Pentesting vs. Bug Bounty vs. Pentesting ???", "description": "What is the difference between Pentesting and Pentesting? There are different jobs that can be described as \"pentesting\" and I want to talk a bit about it. This should also help you to better organize your own learning, as you better understand your goal.\nBlog: https://liveoverflow.com/pentesting-vs-pentesting-vs-bug-bounty/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "COHUWuLTbdk", "thumbnail": "https://i.ytimg.com/vi/COHUWuLTbdk/hqdefault.jpg", "date": "2021-05-08T16:20:08Z", "views": "42404", "tags": ["sudo", "sudo edit", "afl", "fuzzing", "fuzzer", "afl_maybe_log", "__afl_maybe_log", "afl-fuzz", "sudoedit", "pwnedit", "baron samedit", "cve", "root explit", "priviledge escalation", "buffer overflow", "heap overflow", "crash", "heap malloc", "memory corruption", "fuzzing harness", "american fuzzy lop", "afl++", "aflplusplus", "doas"], "title": "How Fuzzing with AFL works! | Ep. 02", "description": "Let's investigate some issues we have fuzzing sudo with afl. And also explain how AFL works. After improving our fuzzing setup even more, we are finally read to start fuzzing sudo for real. Can we find the vulnerability now?\nhttps://liveoverflow.com/support/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "uj1FTiczJSE", "thumbnail": "https://i.ytimg.com/vi/uj1FTiczJSE/hqdefault.jpg", "date": "2021-04-29T16:45:14Z", "views": "44113", "tags": ["sudo", "CVE-2021-3156", "Sudo Baron Samedit", "pwnedit", "security research", "binary exploitation", "afl", "fuzzing", "afl++", "aflplusplus", "fuzzer", "argv", "linux"], "title": "Why Pick sudo as Research Target? | Ep. 01", "description": "Recently a serious vulnerability in sudo was announced. But how can people even find these kind of bugs? Let's talk about why we would want to look for vulnerabilities in sudo, and how we could do that. We then try to setup afl, but fail... well... this will take a while\nhttps://liveoverflow.com/support"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TLa2VqcGGEQ", "thumbnail": "https://i.ytimg.com/vi/TLa2VqcGGEQ/hqdefault.jpg", "date": "2021-04-22T15:42:39Z", "views": "181032", "tags": ["sudo", "buffer overflow", "heap overflow", "sudoedit", "CVE-2021-3156", "baron samedit", "root exploit", "privilege escalation", "local root", "heap feng shui", "malloc", "free", "bug analysis", "bruteforce", "fuzzing", "afl", "fuzzer", "critical sudo", "vulnerability walkthrough", "heap-based overfllow"], "title": "How SUDO on Linux was HACKED! // CVE-2021-3156", "description": "The most comprehensive video covering the sudo vulnerability CVE-2021-3156 Baron Samedit. I spent two weeks on rediscovering, analysing and exploitation of the sudoedit heap overflow. We will talk about fuzzing, code review, exploit strategies, heap feng shui and developing the exploit.\nhttps://liveoverflow.com/support"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "fKuqYQdqRIs", "thumbnail": "https://i.ytimg.com/vi/fKuqYQdqRIs/hqdefault.jpg", "date": "2021-04-15T15:40:29Z", "views": "260599", "tags": ["firewall tutorial", "hardening ssh", "how to secure", "how to secure web server", "how to secure web server from hackers", "iptables", "linode", "linux server hardening", "linux web server", "protect from hackers", "protect server", "root", "secure apache server", "secure linux", "secure linux server", "secure nginx", "secure shell", "secure ssh", "secure ubuntu", "secure web server", "server harden", "sshd", "sudo", "tips to secure", "ufw"], "title": "How To Protect Your Linux Server From Hackers!", "description": "Do you have a linux server and do you know how to prevent getting hacked? In this video we will critically discuss a few best practices. The video can be summarized as: \"a lot of fluff, not much use\".\nPrefer to read? Blog article version: https://liveoverflow.com/protect-linux-server-from-hackers/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LMFY3NvNITY", "thumbnail": "https://i.ytimg.com/vi/LMFY3NvNITY/hqdefault.jpg", "date": "2021-04-07T17:07:06Z", "views": "52712", "tags": ["lack of creativity", "running out of ideas", "every video made", "completed", "no ideas", "done everything", "anniversary", "300 videos", "6 years", "600.000 subscribers", "playlists", "introduction", "channel overview", "channel trailer"], "title": "Running Out Of Hacking Video Ideas", "description": "I made every video I ever wanted to make... At least that's how I feel. I feel like \"Everything I know I have shared in my over 300 videos\". I recently celebrated 6 years on YouTube, and it made me think about the state of the channel and the struggle of finding new video ideas.\nWebsite: https://liveoverflow.com/\nAll Playlists: https://www.youtube.com/c/LiveOverflowCTF/playlists?view=1&sort=dd&she"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "EEZ2T5UodVY", "thumbnail": "https://i.ytimg.com/vi/EEZ2T5UodVY/hqdefault.jpg", "date": "2021-04-05T23:45:57Z", "views": "24713", "tags": [], "title": "New Challenges Released for CSCG 2021 (including mine) #shorts", "description": "We are in the 2nd month of the Cyber Security Challenge Germany 2021. Checkout the new challenges, including `screenshotter` which I made:\nhttps://cscg.de\nScreenshotter Challenge: https://earth.cscg.live/tasks/screenshotter"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "GSraDuD4ziQ", "thumbnail": "https://i.ytimg.com/vi/GSraDuD4ziQ/hqdefault.jpg", "date": "2021-04-01T14:15:13Z", "views": "44434", "tags": ["youtuber drama", "blocklist", "security youtube"], "title": "Security YouTuber Drama...", "description": "I don't even know what this video is about.\n\ud83d\uded1 Put these chan\u0334\u031a\u033e\u0308\u0315\u030b\u031c\u0331nels on yo\u0338\u0310\u033aur b\u0337\u034b\u0342\u0317loc\u0336\u0306\u0353kl\u0334\u0308\u0322\u032fi\u0335\u033d\u033d\u0322\u033cs\u0336\u0302\u034c\u035c\u0322t\u0338\u0314\u0345\u0331!\u0336\u035d\u0320\u031e \ud83d\uded1"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "g-JgA1hvJzA", "thumbnail": "https://i.ytimg.com/vi/g-JgA1hvJzA/hqdefault.jpg", "date": "2021-03-17T18:24:40Z", "views": "1037707", "tags": ["google", "bns address", "gslb", "google cloud platform", "app engine", "deployment manager", "type provider", "google cloud", "gcloud", "appengine", "dogfood", "bug bounty", "bugbounty", "1337", "google vrp", "vulnerability reward"], "title": "Hacking into Google's Network for $133,337", "description": "In this video we hear the story how Ezequiel Pereira found a critical vulnerability in Google Cloud and was awarded $164,674 in total. This is a crazy bug, because it requires so much knowledge about Google internals. We will learn about Google's Global Software Load Balancer, BNS addresses and other Google secret tricks!\nThis video was sponsored by the Google Vulnerability Rewards Program:\nhttps:"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "F6UerHkVdLA", "thumbnail": "https://i.ytimg.com/vi/F6UerHkVdLA/hqdefault.jpg", "date": "2021-02-25T18:15:01Z", "views": "59630", "tags": ["pwnable", "format string", "binary exploitation", "john hammond", "format vuln", "printf", "leaking stack", "help", "mentor", "guidance", "tutorial"], "title": "Format String Exploit Troubleshooting Over Twitter - bin 0x11 b", "description": "Helping somebody with a simple format string exploit via twitter. Getting stuck with problems is one of the most frustrating but best ways to learn. That's why I like to help people figure out their own issues, rather than just telling them.\nhttps://exploit.education/protostar/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "1hpqiWKFGQs", "thumbnail": "https://i.ytimg.com/vi/1hpqiWKFGQs/hqdefault.jpg", "date": "2021-02-14T18:03:06Z", "views": "89154", "tags": ["serenityOS", "privilege escalation", "privesc", "in out", "arduino", "mmio", "port mapped io", "i/o", "input output", "hardware access", "peripherals", "x86", "avr", "ports", "bus"], "title": "How CPUs Access Hardware - Another SerenityOS Exploit", "description": "When I looked at another SerenityOS exploit, I learned something new! The hack is very creative and directly interacts with hardware. I never really understood how modern CPUs interact with peripherals, so this was very interesting to me.\nPrevious SerenityOS videos:\nhttps://www.youtube.com/watch?v=qUh507Na9nk\nhttps://www.youtube.com/watch?v=oIAP1_NrSbY"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "wv2YhT89LDU", "thumbnail": "https://i.ytimg.com/vi/wv2YhT89LDU/hqdefault.jpg", "date": "2021-02-05T21:18:35Z", "views": "165417", "tags": ["Serenityos", "Serenity", "Coding", "Programming", "Python", "C++", "Exploitation", "Binary", "Bug bounty", "Pentester", "Tools"], "title": "Does Hacking Require Programming Skills?", "description": "When I saw how easy it is for Andreas to find bugs in his own code, and even write exploits for it, I thought about the relationship between hacking and coding skills. And it's not surprising that decades of programming experience can easily transferred to hacking skills!\nLiveOverflow Playlists: https://www.youtube.com/c/LiveOverflowCTF/playlists\nAndreas Kling: https://www.youtube.com/channel/UC3t"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "oIAP1_NrSbY", "thumbnail": "https://i.ytimg.com/vi/oIAP1_NrSbY/hqdefault.jpg", "date": "2021-01-22T18:15:04Z", "views": "114410", "tags": [], "title": "Reading Kernel Source Code - Analysis of an Exploit", "description": "Last video we looked at a kernel exploit against SerenityOS Kernel. This video we dig deep into the sources to find out why the vulnerability exists. After that we even attempt to find our own exploit.\nPart 1 - The Kernel Exploit: https://www.youtube.com/watch?v=qUh507Na9nk"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qUh507Na9nk", "thumbnail": "https://i.ytimg.com/vi/qUh507Na9nk/hqdefault.jpg", "date": "2021-01-10T18:15:03Z", "views": "89589", "tags": ["OSCP", "privesc", "priviledge escalation", "privilege escalation", "local root exploit", "ptrace", "kernel", "freebsd", "openbsd", "serenityos", "linux", "xnu", "darwin", "macos", "syscall", "syscalls", "unveil", "execve", "shellcode", "payload", "race condition", "racecondition", "vulnerability", "proof of concept", "exploit code", "walkthrough", "cve", "userland"], "title": "Kernel Root Exploit via a ptrace() and execve() Race Condition", "description": "Let's have a look at a recent kernel local privilege escalation exploit!\nExploit Source: https://hxp.io/blog/79/hxp-CTF-2020-wisdom2/\nKernel Developer Walkthrough: https://www.youtube.com/watch?v=LORxdO1XUjY"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Oc8QQxyzjjQ", "thumbnail": "https://i.ytimg.com/vi/Oc8QQxyzjjQ/hqdefault.jpg", "date": "2020-12-24T18:00:13Z", "views": "106789", "tags": ["it security career", "cybersecurity", "cyber security", "programmer", "programming", "developer", "pentester", "bugbounty", "bug hunter"], "title": "IT Security Career Advice", "description": "How can I get a job as a pentester? Should I go to university or self-study? Do I need certifications?\nMy Life in Shirt Stories: https://www.youtube.com/playlist?list=PLhixgUqwRTjwy6HCzLfwNzdrSrcrLOM4d\nBogotter's Life Journey: https://www.youtube.com/playlist?list=PLMgOinWh2Y7GEkkDhFOQB1afVw6TNdCJc"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "thbZwi6WwIE", "thumbnail": "https://i.ytimg.com/vi/thbZwi6WwIE/hqdefault.jpg", "date": "2020-11-26T18:06:00Z", "views": "131897", "tags": ["linear algebra", "math", "crypto", "nintendo hire me", "NERD", "cryptography", "gf2", "zmod 2", "matrix math", "system of equations", "ctf", "capture the flag", "solve_right", "matrix inverse", "bruteforce", "keygen", "license key", "algorithm", "reverse", "recursive", "jupyter notebook", "sage math", "mathematics", "algebra", "equation"], "title": "Solving Nintendo HireMe!!! with \"Basic\" Math", "description": "We are going to solve the Nintendo HireMe.cpp challenge with some \"basic\" math. I call it basic, because linear algebra is taught pretty early in school. But I know it is not so easy to figure out that it can be used here. Also the trick with GF2 is math that you would only learn at university. But if you would watch my videos, you would have know it from the software_update video writeup  )\nWatch"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6sHSDoJ5a1s", "thumbnail": "https://i.ytimg.com/vi/6sHSDoJ5a1s/hqdefault.jpg", "date": "2020-11-19T18:23:28Z", "views": "666794", "tags": ["NERD", "Nintendo", "research development", "keygen", "license key", "math", "crypto", "hash", "algorithm", "analysis", "failed challenge", "ctf", "capture the flag", "programming challenge", "nerds", "hireme", "hire me", "job application", "security", "it sec", "hireme.cpp", "crypto chall"], "title": "Nintendo Hire me!!!!!!!!", "description": "Difficult programming and reverse-engineering challenge by Nintendo European Research & Development (NERD). In this first part I have a first look at the challenge and try different stuff. In the next video we talk about the solution.\nPS: I'm not looking for a job. Just used a clickbait title based on the challenge name."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VVdmmN0su6E", "thumbnail": "https://i.ytimg.com/vi/VVdmmN0su6E/hqdefault.jpg", "date": "2020-10-26T18:05:52Z", "views": "166167", "tags": ["file formats", "010 editor", "fileformat", "what is a file", "funky file formats", "file tricks", "polyglots", "steganography", "ctf", "capture the flag", "mitra", "corkami", "ange albertini", "julia wolf", "berlinsides", "conference", "zip files", "pdf", "hide zip", "hide pdf", "challenge"], "title": "What is a File Format?", "description": "Let's explore what a file format is, and provide a different view on it. We dive into polyglots, file format research and the impact on security.\nFunky File Formats Talk: https://www.youtube.com/watch?v=hdCs6bPM4is\ncorkami/mitra tool: https://github.com/corkami/mitra"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "L1RvK1443Yw", "thumbnail": "https://i.ytimg.com/vi/L1RvK1443Yw/hqdefault.jpg", "date": "2020-10-18T19:18:10Z", "views": "59755", "tags": ["guessing", "bug bounty", "ctf", "capture the flag", "knowing", "bag of tricks", "hacking techniques", "window.name", "XSS challenge", "steganography", "bugbounty", "whitebox", "blackbox", "scanning", "dirbuster"], "title": "Guessing vs. Not Knowing in Hacking and CTFs", "description": "I really hate it when I have to guess stuff. This applies to CTFs, but also to my real-world work in penetration testing. It is incredibly frustrating to bruteforce or guess something, that could just be read in the source code. I much rather focus on technical details, tricks and techniques.\nTry the XSS challenge: https://hacking.app/xss/xss_chall1.html#welcome"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "UGtrpXk6QVU", "thumbnail": "https://i.ytimg.com/vi/UGtrpXk6QVU/hqdefault.jpg", "date": "2020-10-08T17:23:26Z", "views": "25802", "tags": ["google ctf", "capture the flag", "all the little things", "csp", "iframe", "csp bypass", "script gadget", "xss", "csrf", "dom clobbering", "srcdoc", "pasteurize", "cross site scripting"], "title": "Chaining Script Gadgets to Full XSS - All The Little Things 2/2 (web) Google CTF 2020", "description": "In the second part we are building on top of what we have learned. We figure out how to craft something special out of a very limited script gadget. Eventually we can use it to leak the secret notes ID and notes content.\nPart 1: https://www.youtube.com/watch?v=dZXaQKEE3A8\nChallenge: https://capturetheflag.withgoogle.com/challenges/web-littlethings\nPasteurize: https://www.youtube.com/watch?v=Tw7ucd"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "dZXaQKEE3A8", "thumbnail": "https://i.ytimg.com/vi/dZXaQKEE3A8/hqdefault.jpg", "date": "2020-09-28T19:39:32Z", "views": "27691", "tags": ["google ctf", "all the little things", "xss", "csrf", "csp", "dom clobbering", "dom xss", "debug", "javascript", "walkthrough", "writeup", "video writeup", "recon", "reading code", "code walk", "source code", "jsonp", "prototype"], "title": "Failed DOM Clobbering Research - All The Little Things 1/2 (web) Google CTF 2020", "description": "All The Little Things was a pretty hard web challenge from the Google CTF 2020. In this video we do some initial recon and research and try to find an angle to attack. Part 1/2.\nChallenge: https://capturetheflag.withgoogle.com/challenges/web-littlethings\nPasteurize: https://www.youtube.com/watch?v=Tw7ucd2lKBk"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "9ecv6ILXrZo", "thumbnail": "https://i.ytimg.com/vi/9ecv6ILXrZo/hqdefault.jpg", "date": "2020-09-18T15:51:45Z", "views": "49714", "tags": ["google ctf", "capture the flag", "tech support", "web challenge", "xss", "cors", "cross domain", "self-xss", "bug bounty", "cross site scripting", "cross-site scripting", "CSRF", "cookies", "cookie domain", "steal flag", "captcha", "recaptcha", "googlectf", "login csrf", "cross-site", "same origin policy", "sop", "caching", "fetch"], "title": "XSS on the Wrong Domain T_T - Tech Support (web) Google CTF 2020", "description": "Try chatting with tech support about getting a flag. There is a very easy XSS in the support chat, but the problem is, the XSS is on the wrong domain. So we can't easily grab the flag.\nChallenge: https://capturetheflag.withgoogle.com/challenges/web-typeselfsub\nTech Support: https://typeselfsub.web.ctfcompetition.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Tw7ucd2lKBk", "thumbnail": "https://i.ytimg.com/vi/Tw7ucd2lKBk/hqdefault.jpg", "date": "2020-09-09T15:53:03Z", "views": "59931", "tags": ["google ctf", "google capture the flag", "pasteurize", "paste service", "xss", "cross site scripting", "express.js", "nodejs", "javascript", "json", "query parameter", "extended parameters", "ctf", "capture-the-flag", "web security", "bug bounty", "bug hunting", "websec", "browser security", "code review"], "title": "XSS a Paste Service - Pasteurize (web) Google CTF 2020", "description": "Easy web challenge from the Google CTF. XSS a paste service.\nJohn Hammond: https://www.youtube.com/watch?v=voO6wu_58Ew\nGynvael part 1: https://www.youtube.com/watch?v=0wUDA0oh8sQ\nGynvael part 2: https://www.youtube.com/watch?v=OYP9hvy4MHQ"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bknybcgfjAk", "thumbnail": "https://i.ytimg.com/vi/bknybcgfjAk/hqdefault.jpg", "date": "2020-09-01T17:00:14Z", "views": "434141", "tags": ["megafavnumber", "megafavnumbers", "favorite number", "0x41414141", "41414141", "1094795585", "hex", "decimal", "binary", "gdb", "debugger", "cpu", "hacking", "hacker", "binary exploitation", "buffer overflow", "phrack", "aleph one", "segmentation fault", "singingbanana", "3Blue1Brown", "ascii", "register", "rip", "eip", "instruction pointer"], "title": "Why Hackers Love the Number 1,094,795,585", "description": "It turns out, I have a favorite number over 1 million! Let me show you why 1094795585 is special to me and to many hackers.\nBinary Exploitation Course Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN\nexploit.education: https://exploit.education/protostar/\nExample Buffer Overflow Challenge: https://www.youtube.com/watch?v=lE6ke7pqCNY"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "PBvthC7soS4", "thumbnail": "https://i.ytimg.com/vi/PBvthC7soS4/hqdefault.jpg", "date": "2020-08-12T17:03:43Z", "views": "286877", "tags": ["google ctf", "capture the flag", "ctf finals", "google hq", "london", "google london", "john hammond", "ctf challenge", "vlog", "hacker vlog", "hacking vlog"], "title": "Google CTF Finals 2019!", "description": "A vlog about my experience at the Google CTF Finals 2019 in London. It was great to see so many talented hackers competing!\nGoogle CTF Finals Challenges: http://gctf-2019.appspot.com/\nChallenge Sources (and solutions): https://github.com/google/google-ctf/tree/master/2019/finals"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "aCexqB9qi70", "thumbnail": "https://i.ytimg.com/vi/aCexqB9qi70/hqdefault.jpg", "date": "2020-07-31T17:00:12Z", "views": "136483", "tags": ["google xss", "gdocs", "google docs", "cross site scripting", "cross-site scripting", "xss", "stylesheet", "sheets", "walkthrough", "javascript gadgets", "SOP", "iframe", "DOMxss", "postmessage", "jsonp sandbox", "jsonp", "charts", "chart api", "vulnerability", "bug bounty", "vrp", "bugbounty", "bug bounties", "vrp grant", "thisisqa", "thisisqa.com", "quality assurance", "reverse engineering"], "title": "Script Gadgets! Google Docs XSS Vulnerability Walkthrough", "description": "A very interesting Cross-site Scripting Issue in gDocs Spreadsheets. I get a chance to talk to the bug hunter Nick, as well as Google engineers to understand both sides. How did he find it? And why did this vulnerability exist in the first place?\nNickolay: https://thisisqa.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "k4MnqaYZIY4", "thumbnail": "https://i.ytimg.com/vi/k4MnqaYZIY4/hqdefault.jpg", "date": "2020-07-21T16:45:01Z", "views": "184906", "tags": ["vlc", "player", "easteregg", "easter egg", "reverse engineering", "open source", "kill bill", "killbill", "yellow cone", "vlc cone", "very large cone"], "title": "VLC Kill Bill: Easter Egg Reverse Engineering", "description": "This was a fun little project - hunting down an easter egg in the open source code of VLC.\nI made this video in 2018.\n@StereoBucket: https://twitter.com/StereoBucket/status/1005842783893155840"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "BRfzYNBpIpg", "thumbnail": "https://i.ytimg.com/vi/BRfzYNBpIpg/hqdefault.jpg", "date": "2020-07-08T16:51:44Z", "views": "64243", "tags": ["unity", "il2cpp", "il2cppdumper", "cheatengine", "cheat engine", "c++", "c#", "dnspy", "unity game hacking", "mmo game hacks", "mmorpg hacking", "cheating", "online game", "pwnadventure", "pwn adventure", "pwn3", "pwn adventure 3", "teleport", "server client", "udp traffic", "flags", "ctf", "capture the flag"], "title": "MMO Hacking Game Design in Unity (IL2CPP) - Game Devlog #4", "description": "To make a hackable MMO game, I had to think a lot about the unique game design. So we are going over challenges as well as level design and how the game evolved.\n00:00 - Intro\n00:37 - 1. Level Design\n04:05 - 5. Player Character Design\n05:14 - 3. Soft Release\n06:00 - 4. Tower (Challenge)\n07:10 - 5. Lava (Challenge)\n08:32 - 6. Emoji (Challenge)\n11:03 - 7. Reverse Engineerling IL2Cpp\n13:04 - 8. Playe"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0RJQVkavFIA", "thumbnail": "https://i.ytimg.com/vi/0RJQVkavFIA/hqdefault.jpg", "date": "2020-06-30T21:07:59Z", "views": "86722", "tags": ["tcp server", "mmorpg server", "mmo server", "private server", "coding server", "emulating server", "C# UDP", "python UDP", "asyncio server", "async coding", "redis server", "redis for MMO", "mmo game dev", "devlog", "gaming", "game development", "server architecture", "multiplayer server", "multiplayer unity", "mmorpg server architecture", "devops", "massive multiplayer", "online game"], "title": "Unity Multiplayer/MMO Game - Game Devlog #3", "description": "My technical thoughts on building a MMO Game. I have no professional experience in this area, and try to come up with an architecture that is simple to implement but also scalable enough for my needs.\n00:00 - Intro\n01:00 - 1. Using a Networking Provider?\n02:19 - 2. Language for Game Server\n03:29 - 3. Server Architecture\n08:01 - 4. UDP vs. TCP\n09:50 - 7. The Network Protocol\n10:25 - 8. Position Pac"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "f5LRrPPC09o", "thumbnail": "https://i.ytimg.com/vi/f5LRrPPC09o/hqdefault.jpg", "date": "2020-06-24T08:20:59Z", "views": "46632", "tags": ["unity 2020", "getting started gamedev", "gamedev as programmer", "experienced programmer gamedev", "game development", "what engine", "synty assets", "assetstore", "how to learn gamedev", "unity tutorial", "character controller", "crest water", "mmorpg", "making of game", "indie dev", "indie game", "polygon style", "swimming", "maximo", "falling animation", "courses", "devlog", "datamining", "game design", "game plan", "creativity", "creative game", "game story", "writing", "coding"], "title": "Igniting Creativity for a (Hacking) Game - Game Devlog #2", "description": "How to be creative and get ideas for making a (hacking) game? In the last video I talked about how I got started with gamdev in in Unity. This video I share the game design aspect and what I do to be creative. \nThe first game I made has two hacking challenges: Fall Damage and Datamining"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LTlBElDPDDM", "thumbnail": "https://i.ytimg.com/vi/LTlBElDPDDM/hqdefault.jpg", "date": "2020-06-17T20:00:12Z", "views": "106861", "tags": ["unity 2020", "getting started gamedev", "gamedev as programmer", "experienced programmer gamedev", "game development", "unity vs unreal", "what engine", "game engine difference", "synty studio", "synty assets", "assetstore", "how to learn gamedev", "unity tutorial", "character controller", "crest water", "URP LWRP HDRP", "mmorpg", "making of game", "indie dev", "indie game", "polygon style", "swimming", "maximo", "falling animation", "gravity", "slopes", "courses", "devlog"], "title": "How To Learn Something New? - Game Devlog #1", "description": "I made a game that is intended to be hacked! But I have never made a game before, so I had to learn game development first. In this devlog I talk about my journey into gamedev with Unity. Hope it helps if you want to learn something new.\n00:00 - Introduction\n01:18 - 1. The Motivation\n03:08 - 2. My IT Background\n05:54 - 3. What Game Engine?\n07:50 - 4. Learning Resources\n11:00 - 5. Game Assets\n13:46"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "L2C8rVO2lAg", "thumbnail": "https://i.ytimg.com/vi/L2C8rVO2lAg/hqdefault.jpg", "date": "2020-05-31T13:13:07Z", "views": "78626", "tags": ["ctf", "capture the flag", "capture-the-flag", "hacking competition", "ctfs", "ctfs are awesome", "ctfs are terrible", "cts are awful", "ctfs are bad", "ctfs are good", "ctf rocks", "learn hacking", "ctf tutorials", "bad challenges"], "title": "CTFs are AWESOME!", "description": "Learn Hacking? A one-sided video why CTFs are awesome to learn hacking and various IT security skills.\nCTFs are TERRIBLE: https://www.youtube.com/watch?v=lxJpKUoX-6E\nCTF Guidelines: https://docs.google.com/document/d/1QBhColOjT8vVeyQxM1qNE-pczqeNSJiWOEiZQF2SSh8/preview#"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "lxJpKUoX-6E", "thumbnail": "https://i.ytimg.com/vi/lxJpKUoX-6E/hqdefault.jpg", "date": "2020-05-31T13:12:55Z", "views": "96418", "tags": ["ctf", "capture the flag", "capture-the-flag", "hacking competition", "ctfs", "ctfs are awesome", "ctfs are terrible", "cts are awful", "ctfs are bad", "ctfs are good", "ctf rocks", "learn hacking", "ctf tutorials", "bad challenges"], "title": "CTFs are TERRIBLE!", "description": "Learn Hacking? Let's explore the one-sided arguments why CTFs are terrible to learn hacking and doing IT security work.\nCTFs are AWESOME: https://www.youtube.com/watch?v=L2C8rVO2lAg\nDiscussion on Twitter: https://twitter.com/LiveOverflow/status/1265562734772584449\nCTF Guidelines: https://docs.google.com/document/d/1QBhColOjT8vVeyQxM1qNE-pczqeNSJiWOEiZQF2SSh8/preview#"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bxzrtU7VtPU", "thumbnail": "https://i.ytimg.com/vi/bxzrtU7VtPU/hqdefault.jpg", "date": "2020-05-11T16:42:27Z", "views": "169412", "tags": ["gameboy", "glitch", "hacking tutorial", "how to hack", "item duplication", "liveoverflow", "master ball", "mew", "missingno", "multiply items", "poke", "pokemon", "pokemon blue", "pokemons", "rare candy", "red blue", "shore tile", "tentacool"], "title": "Why MissingNo Multiplies Items!", "description": "In this part two we investigate how encountering a glitch pokemon will cause the 6th item to multiply. For this we are using Ghidra and SameBoy to debug and reverse engineer the code.\nPart 1: https://www.youtube.com/watch?v=p8OBktd42GI"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "p8OBktd42GI", "thumbnail": "https://i.ytimg.com/vi/p8OBktd42GI/hqdefault.jpg", "date": "2020-05-02T21:31:50Z", "views": "486213", "tags": [], "title": "Researching MissingNo Glitch in Pokemon", "description": "We are using an emulator to research what triggers MissingNo and come up with a hypothetical story how one could have found and analyzed this glitch.\nGameBoy Hacking Playlist: https://www.youtube.com/watch?v=ix5yZm4fwFQ&list=PLniOzp3l9V82onKsktyyKlIenAAUj45Mk"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8Z1D64qfrxM", "thumbnail": "https://i.ytimg.com/vi/8Z1D64qfrxM/hqdefault.jpg", "date": "2020-04-24T19:40:51Z", "views": "84694", "tags": ["pwnadventure", "pwn3", "pwn adventure 3", "fly hack", "ddl injection", "dll injection", "guided hacking", "game hacks", "cheat engine", "c++", "quaternions", "camera position", "pointer paths", "wall hack", "emotional", "piano music", "noclip", "1337", "keyboard asmr", "cheatengine", "cheats", "cheating", "vanguard", "battle eye", "elite hacking", "ethical game hacking", "easy anticheat", "how to hack fortnite"], "title": "DLL Injection to Create a Fly Hack - Pwn Adventure 3", "description": "We finally managed to make a fly hack to zoom around the map and we learned a lot about Windows game hacking in the process. This is the last video in the PwnAdventure game hacking series. \nFull playlist watch here: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VVbRe7wr3G4", "thumbnail": "https://i.ytimg.com/vi/VVbRe7wr3G4/hqdefault.jpg", "date": "2020-04-15T15:16:52Z", "views": "226657", "tags": [], "title": "Dissecting Pokemon Red Savegame", "description": "Reverse engineering the savegame data of Pokemon Red for the GameBoy. Let's learn something about the GameBoy hardware and how Cartridges are special.\nstacksmashing: https://www.youtube.com/channel/UC3S8vxwRfqLBdIhgRlDRVzw"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "f-FbcobQQb8", "thumbnail": "https://i.ytimg.com/vi/f-FbcobQQb8/hqdefault.jpg", "date": "2020-04-01T11:00:33Z", "views": "92118", "tags": ["security.txt", "securitytxt", "edoverflow", "ed overflow", "rfc", "standards", "bug hunter", "bugbounty", "hackernull", "security contact", "report vulnerability", "responsible disclosure", "security program", "bug bounty program", "bug bounty recon", "bug bounty live", "bug hunter live", "bug bounty methodology", "responsible disclosure india", "information security program"], "title": "Security.txt - My Awesome Invention for Security Researchers", "description": "As it is well-known, I invented security.txt. And I'm really proud about it. And I want to tell everybody.\nCheck it out here: https://securitytxt.org/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "28JHPOUZvDw", "thumbnail": "https://i.ytimg.com/vi/28JHPOUZvDw/hqdefault.jpg", "date": "2020-03-25T17:26:42Z", "views": "51798", "tags": [], "title": "Reverse Engineering Introduction Walkthrough - intro_rev/rev1 CSCG 2020", "description": "Introduction video for the intro to reversing challenges of CSCG 2020: https://www.cscg.de/cscg/teilnehmen/\nChallenge intro_rev/rev1: https://earth.2020.cscg.de/tasks/Intro%20to%20Reversing%201"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "hhu7vhmuISY", "thumbnail": "https://i.ytimg.com/vi/hhu7vhmuISY/hqdefault.jpg", "date": "2020-03-18T18:02:05Z", "views": "37541", "tags": ["cscg", "cscg2020", "cyber security challenge", "ecsc", "ecsc2020", "nfits", "nfits.de", "nachwuchsf\u00fcorderung", "it-seicherheit", "mindmap", "mind map", "mind mapping", "thought process", "thinking", "pwnable", "exploitation", "aslr", "checksec", "pwndbg", "gdb", "debugger", "python", "pwntools", "docker"], "title": "Mindmapping a Pwnable Challenge - intro_pwn/pwn1 CSCG 2020", "description": "Solving the part 1 of the intro pwnable challenges of our CTF. After this try part 2 and part 3 yourself!\nInternational players: https://earth.2020.cscg.de/\nCSCG 2020 (german): https://www.cscg.de/cscg/teilnehmen/\nIntroduction to docker workflow: https://www.youtube.com/watch?v=cPGZMt4cJ0I\nBasic pwnable challenge: https://www.youtube.com/watch?v=OqTpc_ljPYk"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "J2icGMocQds", "thumbnail": "https://i.ytimg.com/vi/J2icGMocQds/hqdefault.jpg", "date": "2020-03-11T13:01:44Z", "views": "54102", "tags": ["Google Cloud Platform", "GCP", "bug bounty", "bugbounty", "bug hunting", "bug hunters", "writeup", "writeups", "write-up", "csrf", "xss", "cswsh", "cross-site", "request forgery", "websockets", "websocket", "wss", "https", "obmi", "wtm", "wouter", "psi", "hall of fame", "rce", "file upload", "multipart", "javascript", "fetch", "xmlhttprequest"], "title": "$100k Hacking Prize - Security Bugs in Google Cloud Platform", "description": "This video is sponsored by Google.\nIn 2019, Google announced the GCP Prize. 100.000$ for the best bug bounty report for the Google Cloud Platform. Today we will have a look at the nominations! \nBlog: https://security.googleblog.com/2020/03/announcing-our-first-gcp-vrp-prize.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kLZdnvvQRKY", "thumbnail": "https://i.ytimg.com/vi/kLZdnvvQRKY/hqdefault.jpg", "date": "2020-03-04T17:30:00Z", "views": "23911", "tags": [], "title": "We are Organizing a CTF! - CSCG Announcement", "description": "We founded a new association to organise CTF competitions and more to support young it security talents. This years qualification round for the Cyber Security Challenge Germany is starting now.\nTeilnehmen (deutsch): https://www.cscg.de/cscg/teilnehmen/\r\nInternational players: https://earth.2020.cscg.de\nParticipate in other European Countries: https://ecsc.eu/2020-challenge"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "OqTpc_ljPYk", "thumbnail": "https://i.ytimg.com/vi/OqTpc_ljPYk/hqdefault.jpg", "date": "2020-02-29T18:03:30Z", "views": "55829", "tags": ["binary exploitation", "docker workflow", "buffer overflow", "strcmp", "tutorial", "system", "backdoor", "CTF", "capture the flag", "challenge", "containers", "netcat", "gdb", "pwndbg", "PIE", "address", "return pointer", "cscg2020", "cscg", "cyber security challenge"], "title": "Solving Pwnable CTF Challenge With Docker Workflow", "description": "A very simple pwnable challenge to checkout the docker workflow.\npwn_docker_example: https://github.com/LiveOverflow/pwn_docker_example"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sHp0Q3rvamk", "thumbnail": "https://i.ytimg.com/vi/sHp0Q3rvamk/hqdefault.jpg", "date": "2020-02-26T20:13:40Z", "views": "40676", "tags": ["docker", "nsenter", "docker exec", "kernel sources", "linux kernel", "namespaces", "namespace", "pid", "utc", "mount", "overlayfs", "syscall", "getpid", "containers", "container"], "title": "Deepdive Containers - Kernel Sources and nsenter", "description": "Let's play around with Docker a bit more. We learn about the nsenter command, how kernel code execution allows escaping from docker and we look at Linux Kernel source code of getpid().\nDaniel Mitre's blog: https://medium.com/@flag_seeker/linux-container-from-scratch-339c3ba0411d\r\nbocker: https://github.com/p8952/bocker/\nElixir: https://elixir.bootlin.com/linux/latest/source/kernel/sys.c#L891\nDenis"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "-YnMr1lj4Z8", "thumbnail": "https://i.ytimg.com/vi/-YnMr1lj4Z8/hqdefault.jpg", "date": "2020-02-21T17:30:31Z", "views": "134588", "tags": ["docker", "runc", "containerd", "dockerd", "containers", "container", "namespaces", "pid namespace", "kernel feature", "strace", "deep dive", "under the hood", "how it works", "tutorial", "mount", "network", "docker exec", "docker run"], "title": "How Docker Works - Intro to Namespaces", "description": "Let's figure out how Docker works! We will investigate docker by tracing the syscalls to find the Linux Kernel feature called Namespaces. We also learn about the different ones like process id, network or mount namespaces.\ndocker \u2192 dockerd \u2192 containerd \u2192 runC \u2192 unshare syscall"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "cPGZMt4cJ0I", "thumbnail": "https://i.ytimg.com/vi/cPGZMt4cJ0I/hqdefault.jpg", "date": "2020-02-14T18:55:58Z", "views": "112137", "tags": ["docker", "ctf", "capture the flag", "capture-the-flag", "vm", "virtual machine", "containers", "container", "kubernetes", "dockerfile", "docker-compose", "install docker", "ubuntu", "docker for mac", "docker for windows", "docker security", "namespaces", "namespace", "hacking competition", "workflow", "setup", "create challenge", "host challenge", "host with docker"], "title": "Introduction to Docker for CTFs", "description": "I'm using docker more often for CTFs, but it's also useful to host challenges. More CTFs share Dockerfiles to run it locally, so I figured it's time to give an introduction to docker. If you have some other tips or tricks about your workflow, please share it below!\nExample challenge and CTF container: https://github.com/LiveOverflow/pwn_docker_example\r\nDigitalOcean*: https://m.do.co/c/826f195e2288"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kMesRjygnRM", "thumbnail": "https://i.ytimg.com/vi/kMesRjygnRM/hqdefault.jpg", "date": "2019-12-24T11:00:10Z", "views": "25220", "tags": [], "title": "The End Of Haxember - See You In 2020!", "description": "This was a mistake. The full playlist is here: https://www.youtube.com/playlist?list=PLhixgUqwRTjzTvVyL_8H-DJBf8VT3uiu2\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "QNZfdqTAvYM", "thumbnail": "https://i.ytimg.com/vi/QNZfdqTAvYM/hqdefault.jpg", "date": "2019-12-20T11:00:06Z", "views": "28234", "tags": ["escal8", "google", "bug hunter", "bug swat", "initg", "google ctf", "hacker vlog", "vlogging", "hacking vlogs", "bug bounty", "bugbounty", "bletchley park", "enigma machine", "john hammond", "travel vlog"], "title": "Traveling to London for Escal8 and Google CTF", "description": "Actual first vlog! It's part 1 of traveling to London for the Google CTF. In this video I cover my arrival and the first day trip with bug hunters to Bletchley Park to learn more about the Enigma machine.\n\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "5g137gsB9Wk", "thumbnail": "https://i.ytimg.com/vi/5g137gsB9Wk/hqdefault.jpg", "date": "2019-12-18T11:00:01Z", "views": "43398", "tags": ["race condition", "race-condition", "syscall", "renameat", "rename", "swap files", "linux paths", "procfs", "proc filesystem", "symlink", "symlinks", "race file paths", "file paths racing", "filedescriptor", "fd", "fstat", "stat", "open"], "title": "File Path Race Condition & How To Prevent It - bin 0x31", "description": "In this video we look at a typical race condition involving file paths. We learn about the renameat syscall to exploit it and also how to fix it.\nSource  code: https://gist.github.com/LiveOverflow/590edaf5cf3adeea31c73e303692dec0\r\n\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Xvh8FkczNUc", "thumbnail": "https://i.ytimg.com/vi/Xvh8FkczNUc/hqdefault.jpg", "date": "2019-12-16T11:00:08Z", "views": "32415", "tags": ["corrupted shellcode", "segmentation fault", "segfault", "sigsegv", "shellcoding", "buffer overflow", "exploit education", "binary exploitation", "memory corruption", "rip", "eip", "return pointer", "stack overflow", "code execution", "pitfall", "doesn't work", "problem", "typical errors", "beginner", "getting started"], "title": "Exploit Dev Pitfall Corrupted Shellcode", "description": "In this video we see two more common pitfalls that you want to avoid when you get started with binary exploitation.\r\n\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3xIj8Xyx1TU", "thumbnail": "https://i.ytimg.com/vi/3xIj8Xyx1TU/hqdefault.jpg", "date": "2019-12-15T11:00:00Z", "views": "40205", "tags": ["linux command line", "cli", "shell", "bash", "bash scripting", "command line", "commands", "unix cmds", "shell redirection", "man pages"], "title": "New to Linux? Need Help Understanding Shell Commands?", "description": "The website explainshell.com is a really neat tool that can make learning the basics easier.\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "j70AA9arThc", "thumbnail": "https://i.ytimg.com/vi/j70AA9arThc/hqdefault.jpg", "date": "2019-12-14T11:00:17Z", "views": "943359", "tags": ["random numbers", "random id", "unique id", "prediction", "predicting", "break random", "randomness", "base64", "self-aware", "selfaware", "video contains id", "video contains own id"], "title": "Self-aware Video: it knows its own YouTube Video ID?", "description": "This video contains its own Video ID. \nAfter I uploaded the video I found out it has been done before:\nhttps://www.youtube.com/watch?v=sLsVCNlWJTQ\nhttps://www.youtube.com/watch?v=YHuStFJR1_A"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LyNyf3UM9Yc", "thumbnail": "https://i.ytimg.com/vi/LyNyf3UM9Yc/hqdefault.jpg", "date": "2019-12-13T11:00:02Z", "views": "99921", "tags": [], "title": "Patching Binaries (with vim, Binary Ninja, Ghidra and radare2)", "description": "A long time ago I made a video about the basics of cracking, but never got around to make a video about actually patching the binary. So here I show you a few methods how to do it!\n\r\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qNLMuls2BBA", "thumbnail": "https://i.ytimg.com/vi/qNLMuls2BBA/hqdefault.jpg", "date": "2019-12-11T11:00:14Z", "views": "32640", "tags": ["pentest", "penetration-test", "penetration testing", "writing report", "pentest report", "reporting", "hacking resource", "learning resources", "hack resources", "hacking industry", "pentest industry", "infosec", "information security"], "title": "Public Penetration Test Reports - Learning Resource", "description": "I think it's good to get an insight into the pentesting industry, by looking at public reports. There is a great repository collecting some. You can see here how different they are, and what is similar.\nGitHub repository: https://github.com/juliocesarfort/public-pentesting-reports"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "YV3jewkUJ54", "thumbnail": "https://i.ytimg.com/vi/YV3jewkUJ54/hqdefault.jpg", "date": "2019-12-10T18:02:37Z", "views": "153737", "tags": ["XNU kernel", "macos hack", "osx hacked", "ios hack", "jailbreak", "sockpuppet", "sock puppet", "use after free", "fuzzing kernel", "kernel fuzzer", "syscall fuzzer", "fuzz testing", "ned williamson", "ipv6 sockets", "protobuf", "asan", "advanced exploitation", "memory corruption", "free malloc"], "title": "Finding iOS Kernel Exploit // SockPuppet Jailbreak - CVE-2019-8605", "description": "Ned Williamson of Google Project Zero explains how he discovered the Sock Puppet vulnerability affecting the XNU Kernel in iOS and macOS. He also shows us what primitives the bug provides and how it can be exploited. This is only the first stage of a Jailbreak, but it's a very valuable kernel bug.\nGoogle Project Zero Blog: https://googleprojectzero.blogspot.com/2019/12/sockpuppet-walkthrough-of-ke"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Lus7aNf2xDg", "thumbnail": "https://i.ytimg.com/vi/Lus7aNf2xDg/hqdefault.jpg", "date": "2019-12-08T11:00:09Z", "views": "221025", "tags": ["capture the flag", "ctf", "hacking ctfs", "security CTF", "learn hacking", "writeups", "writeup", "ctf write-up"], "title": "How To Learn Hacking With CTFs", "description": "In this video I just want to explain how to approach CTFs for learning. It's not about solving challenges and not about winning.\nCTFtime: https://ctftime.org/\nWhat is CTF? An introduction to security Capture The Flag competitions: https://www.youtube.com/watch?v=8ev9ZX9J45A"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3IEAfyQqUKc", "thumbnail": "https://i.ytimg.com/vi/3IEAfyQqUKc/hqdefault.jpg", "date": "2019-12-07T11:00:00Z", "views": "74608", "tags": ["asking questions", "frustrating questions", "how not ask", "hacking question", "how not to", "dr. disrespect", "terrible questions", "question advice", "hacking help", "error", "doesn't work", "I don't know", "provide information"], "title": "WHY YOUR HACKING QUESTIONS ARE FRUSTRATING!!!", "description": "Being the two time Cyber Security Challenge Germany winner I get a lot of questions. Here I'm talking about what frustrates me and how to do it better.\nFYI: Before posting this video, I have sent it to the redditor and asked if it's okay to share. The person thought it's funny and we ended up having a several hour long 1:1 session to solve the challenge  ) win-win!"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "pphfcaGnWSA", "thumbnail": "https://i.ytimg.com/vi/pphfcaGnWSA/hqdefault.jpg", "date": "2019-12-06T11:00:11Z", "views": "36186", "tags": ["gdb", "debugging", "binaries", "debugger", "ghidra", "reverse engineering", "cannot access memory", "insert breakpoint", "PIE", "position independent", "executable", "code", "position-independent", "ASLR", "address-space", "layour randomization", "randomisation", "break", "binary exploitation", "buffer overflows", "set breakpoints"], "title": "Cannot access memory at address // Debugging PIE Binaries affected by ASLR - bin 0x2E", "description": "A typical error in gdb with setting breakpoints when dealing with binaries affected by ASLR is: \"Cannot access memory at address 0x807\". This can be quite frustrating at the beginning, especially if you don't know much about PIE yet. In this video I want to cover a few different ways how you can still debug them with gdb and Ghidra.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TX18KQq67Tg", "thumbnail": "https://i.ytimg.com/vi/TX18KQq67Tg/hqdefault.jpg", "date": "2019-12-05T11:00:05Z", "views": "189228", "tags": ["ethical hacking", "os", "operating system", "operating-system", "kali linux", "ubuntu", "windows 10", "osx", "macos", "phone", "tablet", "laptop", "desktop pc", "pc for hacking", "hacking tools", "getting started", "best hacking os", "hacking with windows"], "title": "Best Operating Systems for Hacking?!", "description": "What operating system do hackers use for ethical hacking, pentesting, ...?\nGynvael's Windows Setup: https://www.youtube.com/watch?v=OHGysGcRFFI\nGynvael's English Channel: https://www.youtube.com/user/GynvaelEN\nDigital Ocean*: https://m.do.co/c/826f195e2288"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "CgGha_zLqlo", "thumbnail": "https://i.ytimg.com/vi/CgGha_zLqlo/hqdefault.jpg", "date": "2019-12-04T11:00:04Z", "views": "54244", "tags": ["statically linked", "statically-linked", "reverse engineering", "linux", "elf binaries", "static linking", "dynamic linking", "flirt signatures", "ida pro", "ghidra", "apply signature", "libc sigs"], "title": "Reversing Statically-Linked Binaries with Function Signatures - bin 0x2D", "description": "Some Linux binaries are statically linked and it's more difficult to work with it. In this video we learn about FLIRT function signatures and use a Ghidra plugin to apply them. This will help us reverse engineer the binary.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "N1US3c6CpSw", "thumbnail": "https://i.ytimg.com/vi/N1US3c6CpSw/hqdefault.jpg", "date": "2019-12-03T19:37:34Z", "views": "51733", "tags": ["stripped binary", "gdb", "debugging", "strip symbols", "missing symbols", "can't find main()", "__libc_start_main", "finding main", "break on main", "gcc strip binary", "stipped binaries", "memory corruption", "reverse engineering", "binary exploitation"], "title": "Finding main() in Stripped Binary - bin 0x2C", "description": "Stripped binaries miss the symbol information of functions and variables. Debugging such a binary is a little bit more tricky, but there is a simple method to find the main() function of the program.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VCwiZ2dh17Q", "thumbnail": "https://i.ytimg.com/vi/VCwiZ2dh17Q/hqdefault.jpg", "date": "2019-12-02T11:00:06Z", "views": "144490", "tags": ["secret hacker forum", "darknet", "hacker chat", "irc", "twitter", "security researcher", "learn hacking", "best resource hacking", "hackforum", "insider information", "secret knowledge", "giftschrank", "forbidden knowledge", "skilled hackers", "security conferences", "hacking discussions"], "title": "SECRET HACKER FORUM - The Place Where We Talk and Learn", "description": "Today I will share the secret underground forum where we chat and exchange information about hacking. Here you can learn new skills and listen to the best hackers in the world talk. You should signup too.\nLink to secret forum: https://twitter.com/\nMy account: https://twitter.com/LiveOverflow\n1337List (currently not available): https://twitter.com/1337list"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "re4teYmSoXA", "thumbnail": "https://i.ytimg.com/vi/re4teYmSoXA/hqdefault.jpg", "date": "2019-12-01T11:00:09Z", "views": "55265", "tags": ["haxember", "binary exploitation", "hexember", "hacking advent", "advent calendar", "debugging shellcode", "shellstorm", "linux shellcode", "memory corruption", "sigtrap", "segfault", "trap debugger", "debugging", "error", "trace breakpoint", "gdb", "linux", "ubuntu", "buffer overflow", "overwrite return", "jump to shellcode"], "title": "Exploit Fails? Debug Your Shellcode - bin 0x2B", "description": "I often get questions about not working exploits. Sometimes the problem is the shellcode. In this video we look at different ways to debug the shellcode and find the issue.\nHaxember 2019 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzTvVyL_8H-DJBf8VT3uiu2"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "-wGtxJ8opa8", "thumbnail": "https://i.ytimg.com/vi/-wGtxJ8opa8/hqdefault.jpg", "date": "2019-11-27T19:58:30Z", "views": "129036", "tags": ["suid", "setuid", "user id", "linux permissions", "bash", "zero-day", "zeroday", "0day", "0-day", "pwn", "pwnable", "capture the flag", "google ctf", "ctf challenge", "writeup", "walkthrough", "ubuntu", "cve"], "title": "Zero-day vulnerability in Bash - Suidbash Google CTF Finals 2019 (pwn)", "description": "An actual 0-day in /bin/bash due to a bug in the privilege dropping feature. It was discovered by Ian Pudney and turned into a CTF challenge for the Google CTF 2019 Finals.\nCVE-2019-18276"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Xd_egp8WeKE", "thumbnail": "https://i.ytimg.com/vi/Xd_egp8WeKE/hqdefault.jpg", "date": "2019-10-30T10:40:27Z", "views": "93605", "tags": ["pwn adventure 3", "game hacking", "reverse engineering", "c++ programming", "c programming", "dll", "windows dll", "getasynckeystate", "allocconsole", "createThread", "dll injection", "cheat engine", "flying", "pointer path", "pointer paths", "variable", "offset", "pwn3", "pwning"], "title": "Reading Player Position with DLL Injection - Pwn Adventure 3", "description": "Another PwnAdventure episode. We are very close to a fly hack! But this time I got some help with creating a .dll for a DLL injection. And then we can use the pointer paths we have found last video, to read the player position from the Pwn Adventure 3 game process.\n\ud83c\udf34 PwnAdventure Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "E-P9USG6kLs", "thumbnail": "https://i.ytimg.com/vi/E-P9USG6kLs/hqdefault.jpg", "date": "2019-10-01T17:03:48Z", "views": "178533", "tags": ["google", "cloud shell", "bug bounty", "bounty hunter", "hacker", "hacking", "security issue", "vulnerability", "docker escape", "kubernetes", "kubelet", "vrp", "wtm"], "title": "Google Paid Me to Talk About a Security Issue!", "description": "Conversation with a bug bounty hunter about a vulnerability found in Google Cloud Shell.\nThis video is sponsored by Google (Vulnerability Rewards Program)\n\u2193 Check the links\nGoogle VRP: https://www.google.com/about/appsecurity/reward-program/\nCloud Shell PoC exploit (fixed): https://github.com/offensi/LiveOverflow-cloudshell-poc\nCloud Shell docker \"escape\": https://github.com/offensi/LiveOverflow-c"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "yAl_6qg6ZnA", "thumbnail": "https://i.ytimg.com/vi/yAl_6qg6ZnA/hqdefault.jpg", "date": "2019-09-13T18:14:57Z", "views": "93751", "tags": ["pwn adventure 3", "pwnadventure", "gaming", "fly hack", "cheat engine", "pointer scan", "nops", "replace with nops", "memory view", "player position", "player coordinates", "camera position", "modify memory", "find address"], "title": "Finding Player and Camera Position for Fly Hack - Pwn Adventure 3", "description": "We continue doing some Cheat Engine work to find the player's position and camera position. This will help us to implement a fly hack in a future episode.\nblog: https://liveoverflow.com/player-and-camera-position-for-fly-hack-pwn-adventure-3-2/\nplaylist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "elI6vZR6HGE", "thumbnail": "https://i.ytimg.com/vi/elI6vZR6HGE/hqdefault.jpg", "date": "2019-08-20T19:05:32Z", "views": "117338", "tags": ["speedrunner", "speedrunning", "speed run", "timesplit", "time splitter", "pointer scan", "pointer path", "cheat engine", "CE"], "title": "How Speedrunners Use Game Hacking Tools", "description": "We continue our journey in Windows Game hacking with Pwn Adventure 3, by looking at Pointer Scans from Cheat Engine. And surprisingly the same techniques are being used by speedrunners to implement automatic time splitters.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG\nPwn Adventure 3: https://www.pwnadventure.com/\nglurmo's speedrun: https://www.youtube.com/w"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Pst-4NwY2is", "thumbnail": "https://i.ytimg.com/vi/Pst-4NwY2is/hqdefault.jpg", "date": "2019-08-04T11:37:09Z", "views": "297497", "tags": ["pwn3", "pwn adventure", "windows game hacking", "guided hacking", "cheat engine", "cheatengine", "cheating", "mmo", "ghidra", "nsa", "reverse engineering", "pointer scan", "game hacks", "gaming", "windows tools", "linux"], "title": "Windows Game Hacking with Ghidra and Cheat Engine", "description": "We are going to learn basic game hacking on Windows with Cheat Engine and Ghidra.\nPwn Adventure 3 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG\nblog: https://liveoverflow.com/getting-started-with-windows-game-hacking-pwn-adventure-3/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "nI8Q1bqT8QU", "thumbnail": "https://i.ytimg.com/vi/nI8Q1bqT8QU/hqdefault.jpg", "date": "2019-07-28T11:37:16Z", "views": "486834", "tags": ["googlectf", "minetest", "mesecons", "minecraft clone", "capture the flag", "google", "recruiting", "event", "ctf", "boolean algebra", "smt solver", "z3", "netlist", "verilog", "q3k", "pwn adventure 3", "pwnadventure", "data format", "file parsing", "python pillow", "pygame"], "title": "Minetest Circuit Challenge - Google CTF 2019 Qualifier", "description": "Solving the Minetest Hardware Challenge from the Google CTF 2019 Qualifier.\n* Google CTF: https://capturetheflag.withgoogle.com\n* Solution Script: https://gist.github.com/LiveOverflow/1480ee7e1ffead942063c638d5b66804\n* blog: https://liveoverflow.com/minetest/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3c6nC0wdU-Q", "thumbnail": "https://i.ytimg.com/vi/3c6nC0wdU-Q/hqdefault.jpg", "date": "2019-07-14T11:37:19Z", "views": "22019", "tags": ["browser exploitation", "browser exploit", "jit compiler", "addrof", "exploit primitive", "fakeobj", "phrack", "saselo", "niklasb", "linus", "linus henze", "butterfly", "jscell", "jsvalue", "jsc", "lldb", "javascript", "java script", "unboxed", "boxed", "js values", "cell header", "oop", "object oriented", "classes and objects", "c++", "advanced exploitation", "osx", "linux", "windows", "browser hacks", "arbitrary read", "arbitrary write"], "title": "Preparing for Stage 2 of a WebKit exploit", "description": "Part 7: In this video we use the stage 1 fakeobj() and addrof() primitives, to craft malicious objects that allow us to implement arbitrary memory read and write.\nsaelo's phrack paper: http://www.phrack.org/papers/attacking_javascript_engines.html\nniklasb's exploit: https://github.com/niklasb/sploits/blob/master/safari/regexp-uxss.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LIdZ2oPyB1Y", "thumbnail": "https://i.ytimg.com/vi/LIdZ2oPyB1Y/hqdefault.jpg", "date": "2019-07-04T20:26:05Z", "views": "105388", "tags": ["policy", "demonitization", "wifi hacking", "blackhat", "black hat", "white hat", "hacks", "null-byte", "null byte", "hacking youtube channel", "ethical hacking", "unethical hacking", "game hacking", "community guidelines", "yt policies", "strike", "limited ads", "advertisement", "algorithm", "youtube business", "risk analysis", "ban risk"], "title": "YouTube BANNING Hacking Videos - Hot Take", "description": "Bonus Video: https://www.youtube.com/watch?v=PJJKvupvU4Q\n00:00 - Intro\n01:02 - Context Background Story\n02:09 - About Monetization\n05:47 - YouTube Hacking Policy\n09:44 - What are Ethical Hacking Videos?\n17:04 - Gathering More Data on Actions\n18:15 - Conclusion\n22:03 - Outro"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "dhaLk-XO890", "thumbnail": "https://i.ytimg.com/vi/dhaLk-XO890/hqdefault.jpg", "date": "2019-06-30T11:37:08Z", "views": "23867", "tags": ["webkit", "javascript", "javascriptcore", "webkitcore", "double", "unboxed", "boxed", "jsvalue", "jscell", "fakeobj", "addrof", "regex", "arraybuffer", "int32", "integer to double", "double to integer", "memory corruption", "jit compiler", "jit bug", "browser bug", "security research", "browser hacking", "asan", "addresssanitizer"], "title": "Revisiting JavaScriptCore Internals: boxed vs. unboxed", "description": "Part 6: There are still many things I haven't explained yet. So in this video we go over the boxed vs. unboxed values, how to convert Integer addresses to Doubles and why our bug is a memory corruption.\nblog: https://liveoverflow.com/revisiting-javascriptcore-internals-boxed-vs-unboxed-browser-0x06/\ntest.js: https://gist.github.com/LiveOverflow/71bcf3f364c9719998bf159923310019\nThe Exploit:https://"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "vwlG2l0ANuc", "thumbnail": "https://i.ytimg.com/vi/vwlG2l0ANuc/hqdefault.jpg", "date": "2019-06-23T11:37:04Z", "views": "33797", "tags": ["webkit", "phrack", "browser exploitation", "saelo", "javascriptcore", "webkitcore", "addrof", "fakeobj", "exploit primitive", "memory corruption", "address leak", "jscellheader", "jscell", "jsvalue", "double", "pointer", "objects", "jsobject", "safari"], "title": "The fakeobj() Primitive: Turning an Address Leak into a Memory Corruption", "description": "Part5: In this video we turn the bug used in addrof() to corrupt the memory of internal JavaScriptCore Objects which can help us to compromise the engine.\nThe Exploit: https://github.com/LinusHenze/WebKit-RegEx-Exploit\nSaelo's exploit: https://github.com/saelo/cve-2018-4233/blob/master/pwn.js\nSaelo's phrack paper: http://www.phrack.org/papers/attacking_javascript_engines.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "IjyDsVOIx8Y", "thumbnail": "https://i.ytimg.com/vi/IjyDsVOIx8Y/hqdefault.jpg", "date": "2019-06-16T11:37:08Z", "views": "37570", "tags": ["browser exploitation", "webkit", "addrof", "fakeobj", "array", "jsc", "javascriptcore", "safari", "0day", "1day", "pwn3own", "advanced exploits"], "title": "WebKit RegExp Exploit addrof() walk-through", "description": "Part 4: We finally look at the actual exploit code. We start by understanding the addrof() primitive used to leak the address of a JavaScript object in memory.\ntest.js: https://gist.github.com/LiveOverflow/ee5fb772334ec985094f77c91be60492\nCrash investigation: https://webkit.org/blog/6411/javascriptcore-csi-a-crash-site-investigation-story/\nThe Exploit: https://github.com/LinusHenze/WebKit-RegEx-Ex"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "45wMEIIPsPA", "thumbnail": "https://i.ytimg.com/vi/45wMEIIPsPA/hqdefault.jpg", "date": "2019-06-09T11:37:30Z", "views": "39714", "tags": ["browser", "just-in-time compiler", "jit", "jitted", "osr", "cps", "ftl", "dfg", "baseline", "javascript vm", "bytecode", "assembler", "x86", "x86_64", "browser exploitation", "webkit", "javascriptcore", "jsc", "FTL", "llvm", "b3", "compiling", "compilers", "lldb", "browser internals", "safari", "chrome"], "title": "Just-in-time Compiler in JavaScriptCore (WebKit)", "description": "Part 3: Introducing the JavaScript interpreter, DFG JIT and FTL JIT from WebKit in this third part. To do that we use the debug version of JSC again and use environment variables to print useful debug output.\nCrash investigation: https://webkit.org/blog/6411/javascriptcore-csi-a-crash-site-investigation-story/\nZDI: https://www.thezdi.com/blog/2018/4/12/inverting-your-assumptions-a-guide-to-jit-com"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KVpHouVMTgY", "thumbnail": "https://i.ytimg.com/vi/KVpHouVMTgY/hqdefault.jpg", "date": "2019-06-02T11:37:07Z", "views": "50053", "tags": ["browser exploitation", "js value", "webkit", "chrome", "safari", "osx", "lldb", "jsobject", "jscell", "jsc", "javascriptcore", "butterfly", "array", "properties", "javascript", "object", "js", "jit", "compiler"], "title": "The Butterfly of JSObject", "description": "Part 2: Let's have a look at how JavaScriptCore implements JavaScript Objects and values like integers and floats. We can use lldb to look into the memory.\nPhrack: http://phrack.org/papers/attacking_javascript_engines.html\nThe Linus: https://twitter.com/linushenze\nThe Exploit: https://github.com/LinusHenze/WebKit-RegEx-Exploit\nThe Fix: https://bugs.webkit.org/show_bug.cgi?id=191731"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "yJewXMwj38s", "thumbnail": "https://i.ytimg.com/vi/yJewXMwj38s/hqdefault.jpg", "date": "2019-05-26T11:38:18Z", "views": "65958", "tags": ["browser exploitation", "exploits", "webkit", "javascriptcore", "webcore", "javascript", "svn", "git", "regexp", "regex", "side effects", "jailbreak", "playstation", "nintendo switch", "security research", "saelo", "linus henze", "webkit.org", "safari", "macos", "osx", "linux", "researcher", "vulnerability", "remote code execution", "0day", "zero day", "1day", "zero-day", "shellcode", "jit", "just in time", "just-in-time", "compiler", "bug", "bugs", "js"], "title": "Hacking Browsers - Setup and Debug JavaScriptCore / WebKit", "description": "Part 1: We are going to try out Linus's exploit and setup a vulnerable WebKit version including debug symbols.\nThe Linus: https://twitter.com/linushenze\nThe Exploit: https://github.com/LinusHenze/WebKit-RegEx-Exploit\nThe Vulnerable Commit: 3af5ce129e6636350a887d01237a65c2fce77823 \nThe Fix: https://bugs.webkit.org/show_bug.cgi?id=191731\nsaelo's german presentation: https://www.youtube.com/watch?v=1"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "5tEdSoZ3mmE", "thumbnail": "https://i.ytimg.com/vi/5tEdSoZ3mmE/hqdefault.jpg", "date": "2019-05-19T11:37:14Z", "views": "95259", "tags": ["browser exploitation", "jit", "webkit", "v8", "javascriptcore", "jsc", "spidermonkey", "chakra", "saelo", "javascript engine", "advanced exploitation", "memory corruption", "jit compiler", "heap overflow", "dom", "chrome", "safari", "edge", "internet explorer", "playstation 4", "jailbreak", "nintendo switch"], "title": "New Series: Getting Into Browser Exploitation - browser 0x00", "description": "The start of a new series. We will try to learn some basics about Browser Exploitation.\nblog: https://liveoverflow.com/getting-into-browser-exploitation-new-series-introduction-browser-0x00/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3MAqlEMITzw", "thumbnail": "https://i.ytimg.com/vi/3MAqlEMITzw/hqdefault.jpg", "date": "2019-05-12T12:00:29Z", "views": "140931", "tags": ["script kiddie", "code kiddie", "script-kiddy", "etymology", "hacker history", "history of hacking", "phrack", "r00t", "l0pht", "textfiles", "zines", "ezines", "bbs", "yabbs", "sirsyko", "kmem", "90s", "magazine", "irc", "hacker group", "hacking groups"], "title": "The Origin of Script Kiddie - Hacker Etymology", "description": "Where does the term \"script kiddie\" come from? Who said it first? Let's do some hacker history research!\nblog: https://liveoverflow.com/the-origin-of-script-kiddie-hacker-etymology/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LrLJuyAdoAg", "thumbnail": "https://i.ytimg.com/vi/LrLJuyAdoAg/hqdefault.jpg", "date": "2019-04-21T11:38:17Z", "views": "135438", "tags": ["ssrf", "crlf", "newline", "injection", "server-side", "request forgery", "redis", "gitlab", "flaglab", "gitlab import", "github", "git", "webshell", "rce", "code execution", "ctf", "capture the flag", "writeup", "write-up", "11.4.7", "redis to ssrf", "shell worker", "broker", "exploit redis", "docker", "setup"], "title": "GitLab 11.4.7 Remote Code Execution - Real World CTF 2018", "description": "Video write-up about the Real World CTF challenge \"flaglab\" that involved exploiting a gitlab 1day. Actually two CVEs are combined to achieve full remote code execution:\nCVE-2018-19571 (SSRF) + CVE-2018-19585 (CRLF) = RCE"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "yq_P3dzGiK4", "thumbnail": "https://i.ytimg.com/vi/yq_P3dzGiK4/hqdefault.jpg", "date": "2019-04-14T09:51:20Z", "views": "67016", "tags": ["xss", "gareth heyes", "insertscript", "xss vector", "browser fuzzing", "innerhtml", "javascript", "cross-site scripting", "parsing", "parser", "html parser", "security research", "alert(1)", "onerror", "masato"], "title": "Fuzzing Browsers for weird XSS Vectors", "description": "We have a look at another interesting XSS vector due to weird Firefox parsing, and then explore how researchers find this stuff.\nGareth's tweet: https://twitter.com/garethheyes/status/1112661895067156481\ninsertScript's vector: http://shazzer.co.uk/vector/lt-eating-char"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gVrdE6g_fa8", "thumbnail": "https://i.ytimg.com/vi/gVrdE6g_fa8/hqdefault.jpg", "date": "2019-04-07T10:37:50Z", "views": "156963", "tags": ["xss", "cross-site scripting", "masato", "google", "bug bounty", "security researcher", "research", "it security", "hacking", "vulnerability", "parser", "DOM parser", "HTML"], "title": "How did Masato find the Google Search XSS?", "description": "We will go over a few puzzle pieces and discuss XSS research... and we find evidence of a XSS conspiracy!!11!!!1! \ud83d\ude31\nfuzzing: https://gist.github.com/LiveOverflow/dd3d09d17c8fc0460c7e9a337b501331"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "lG7U3fuNw3A", "thumbnail": "https://i.ytimg.com/vi/lG7U3fuNw3A/hqdefault.jpg", "date": "2019-03-31T11:57:21Z", "views": "675872", "tags": ["xss", "cross-site scripting", "html", "sanitization", "encoding", "browser", "masato", "cure53", "google", "gws", "google search", "parser differential", "javascript", "mxss", "mutation xss", "dom xss", "template", "div", "parsing", "context", "javascript disabled", "noscript", "script", "regex", "html parser", "dompurify"], "title": "XSS on Google Search - Sanitizing HTML in The Client?", "description": "An actual XSS on google.com by Masato Kinugawa. It abuses a parsing differential between a JavaScript enabled and disabled context.\nThe fix: https://github.com/google/closure-library/commit/c79ab48e8e962fee57e68739c00e16b9934c0ffa"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "zaQVNM3or7k", "thumbnail": "https://i.ytimg.com/vi/zaQVNM3or7k/hqdefault.jpg", "date": "2019-03-24T10:30:02Z", "views": "73144", "tags": ["jop", "rop", "return oriented programming", "len sassaman", "weird machine", "weird machines", "sergey bratus", "ret2libc", "ropping", "exploitation", "rop chain", "binary hacking", "meredith patterson"], "title": "Weird Return-Oriented Programming Tutorial - bin 0x2A", "description": "There are a lot of tutorials on ROP out there, so I try to explain the concept in a different way. Maybe that's a bad idea and a lot more confusing. But if you didn't understand it yet, or you already know ROP, then this could be interesting.\nWhat Hacker Research Taught Me: https://www.youtube.com/watch?v=Dd9UtHalRDs\nScience of Insecurity: https://www.youtube.com/watch?v=3kEfedtQVOY\nA Patch for Po"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8Dcj19KGKWM", "thumbnail": "https://i.ytimg.com/vi/8Dcj19KGKWM/hqdefault.jpg", "date": "2019-03-17T12:04:23Z", "views": "53251", "tags": ["return-oriented programming", "rop", "return oriented programming", "jop", "weird machine", "weird machines", "sergey bratus", "len sassaman", "meredith patterson", "buffer overflow", "exploitation", "theory", "academia", "ret2libc", "rop chain", "rop gadgets", "ropping", "binary hacking"], "title": "Introducing Weird Machines: ROP Differently Explaining part 1 - bin 0x29", "description": "Let's introduce the concept of a weird machine in order to understand ROP differently. It's maybe a bad tutorial.\nWhat Hacker Research Taught Me: https://www.youtube.com/watch?v=Dd9UtHalRDs\nScience of Insecurity: https://www.youtube.com/watch?v=3kEfedtQVOY\nA Patch for Postel\u2019s\nRobustness Principle: http://langsec.org/papers/postel-patch.pdf\nExploit Programming\nFrom Buffer Overflows to \u201cWeird Machi"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "WP-EnGhIYEc", "thumbnail": "https://i.ytimg.com/vi/WP-EnGhIYEc/hqdefault.jpg", "date": "2019-03-10T13:52:59Z", "views": "56512", "tags": ["smart contract", "solidity", "ethereum", "evm", "blockchain", "smartcontract", "backdoor", "backdooring", "vulnerability", "evil contract", "malicious contract", "bytecode", "ethereum vm", "virtual machine", "solidity constructor", "ether", "eth", "remix", "debug", "debugger"], "title": "Ethereum Smart Contract Backdoored Using Malicious Constructor", "description": "In this video we go over how smart contracts written in solidity are deployed, and how the Acoraida Monica contract was backdoored.\nAcoraida Monica - Real World CTF\nPart 1: https://www.youtube.com/watch?v=ozqOlUVKL1s\nPart 2: https://www.youtube.com/watch?v=RfL3FcnVbJg"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2H45HheGkKM", "thumbnail": "https://i.ytimg.com/vi/2H45HheGkKM/hqdefault.jpg", "date": "2019-03-03T12:19:38Z", "views": "43346", "tags": ["f00dbabe", "foodbabe", "bootloader", "firmware update", "arm", "hardware wallet", "crypto currency", "apdu", "usb", "update verification", "bypass", "bitfi", "ledger", "trezor", "keepkey", "wallet.fail", "wallet fail", "chip", "stm32", "gdb", "swd", "jtag", "hardware security", "reverse engineering", "ida pro"], "title": "Rediscovering the f00dbabe Firmware Update Issue - Hardware Wallet Research #7", "description": "We finally figure out how to create a firmware update, but we run into an annoying check. But based on what we have learned so far, we can find a bypass - rediscovering the f00dbabe issue.\nresearch: https://wallet.fail"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "5cvpGSSUZI0", "thumbnail": "https://i.ytimg.com/vi/5cvpGSSUZI0/hqdefault.jpg", "date": "2019-02-24T11:47:31Z", "views": "246580", "tags": ["browser malware", "virus", "trojan", "dll injection", "malicious dll", "windows events", "drop files", "anti virus", "ollydbg", "javascript", "injected javascript", "secret password", "firefox", "internet explorer", "ie", "x32dbg", "flare-on", "flareon", "vm virtual machine", "virustotal"], "title": "Analysing a Firefox Malware browserassist.dll - FLARE-On 2018", "description": "This is another challenge of the FLARE-On 2018 CTF. This challenge is about analysing the functionality of a Firefox malware, but I got really lucky :D\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "866olNIzbrk", "thumbnail": "https://i.ytimg.com/vi/866olNIzbrk/hqdefault.jpg", "date": "2019-02-17T10:29:54Z", "views": "76692", "tags": ["security vulnerability", "vulns", "vulnerability", "vulnerable", "security issue", "severity", "critical", "exploit", "bug", "security audit", "professional hacker", "hackers", "account takeover", "session cookies", "smart contract", "ethereum", "blockchain", "triage team", "bug bounty", "bug bounties", "CVEs", "exploit-db", "sandbox escape", "cryptography", "get started security", "hacker", "cert", "reports", "reporting", "pentest report"], "title": "What is a Security Vulnerability?", "description": "When is a vulnerability actually a vulnerability? I can't answer this question easily, and thus we look at a few examples in this video.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LntSN7JsR_A", "thumbnail": "https://i.ytimg.com/vi/LntSN7JsR_A/hqdefault.jpg", "date": "2019-02-11T20:07:02Z", "views": "17823", "tags": ["live coding", "learn hacking", "buffer overflow", "heap overflow", "33c3ctf", "33c3", "heap feng shui", "gamedev", "challenge", "competition", "gynvael", "winter game dev", "game development"], "title": "Games & Results: Gynvael's Winter GameDev Challenge 2018/19", "description": "We are doing a live stream where we go over the GameDev challenge and announce the winners.\nchallenge details: https://gynvael.coldwind.pl/?id=697\nthe games: http://gwgc2018.gynvael.tv/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TLWBeKicsa0", "thumbnail": "https://i.ytimg.com/vi/TLWBeKicsa0/hqdefault.jpg", "date": "2019-02-10T16:57:45Z", "views": "30812", "tags": ["apdu", "smart card", "ledger nano s", "ledger", "hardware wallet", "crypto wallet", "cryptocurrency", "cold storage", "bitcoin", "ether", "wallet", "brain wallet", "paper wallet", "arm", "switch-case", "endless loop", "usb communication", "stm32", "thumb code", "reverse engineering", "reversing", "iot", "internet of things", "embedded device", "embedded security", "ida pro", "ram", "rom", "firmware"], "title": "APDU Communication between Device and Host - Hardware Wallet Research #6", "description": "We are looking at the protocol between the device and host PC. With the old source code it's pretty easy to find the loop that handles APDU messages.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "yJbnsMKkRUs", "thumbnail": "https://i.ytimg.com/vi/yJbnsMKkRUs/hqdefault.jpg", "date": "2019-02-01T11:55:28Z", "views": "47576", "tags": ["arm firmware", "cortex-m0", "button press", "gpio", "gpios", "button read", "interrup", "gdb", "swd", "jtag", "ledger nano s", "hardware security", "hardware research", "reverse engineering", "bootloader", "main()", "ida", "xref", "security research", "avr", "arduino", "iot", "internet of things", "hacking", "reversing"], "title": "Identify Bootloader main() and find Button Press Handler - Hardware Wallet Research #5", "description": "Now that we know where the firmware starts, we want to find how button presses are handled and where it might handle the APDU commands.\nresearch: https://wallet.fail\nAVR Firmware: https://www.youtube.com/watch?v=hyoPAOTrUMc\nZetaTwo: https://www.youtube.com/user/ZetaTwo"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "V6ZySLopflk", "thumbnail": "https://i.ytimg.com/vi/V6ZySLopflk/hqdefault.jpg", "date": "2019-01-25T17:51:11Z", "views": "63485", "tags": ["ledger nano s", "hardware security", "hardware research", "arm", "vector table", "interrupt table", "entry-point", "setup ida", "reverse engineering", "debugging", "gdb", "arm architecture", "cortex-m0", "arm cortex", "segments", "gpio", "memory map", "mapping", "address", "memory address", "iot", "internet of things", "programming", "coding", "stm32", "stm-32", "microcontroller"], "title": "Setup and Find Entry-point in ARM Firmware - Hardware Wallet Research #4", "description": "We are using IDA to setup segments for the ARM hardware and then find the entry-point through static and dynamic analysis.\nGPIO: https://web.archive.org/web/20160613024918/http://hertaville.com/2012/07/28/stm32f0-gpio-tutorial-part-1/\nresearch: https://wallet.fail"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "HcrQy0C-hEA", "thumbnail": "https://i.ytimg.com/vi/HcrQy0C-hEA/hqdefault.jpg", "date": "2019-01-21T18:43:31Z", "views": "105470", "tags": ["35c3ctf", "35c3", "ccc", "chaos computer club", "chaos communication congress", "xs-search", "xssearch", "cross-site search", "ctf", "capture the flag", "google chrome", "browser bug", "client-side security", "xss auditor", "filemanager", "web security", "gareth heyes", "c3ctf"], "title": "XS-Search abusing the Chrome XSS Auditor - filemanager 35c3ctf", "description": "Intranet Portscanning: https://portswigger.net/blog/exposing-intranets-with-reliable-browser-based-port-scanning\nMaking-of: https://www.youtube.com/watch?v=VI5OLNHf_Sc"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "EpA25bCHHtk", "thumbnail": "https://i.ytimg.com/vi/EpA25bCHHtk/hqdefault.jpg", "date": "2019-01-18T18:03:26Z", "views": "118843", "tags": ["ledger nano s", "hardware wallet", "bitfi", "trezor", "keepkey", "crypto", "cryptocurrency", "paper wallet", "manuals", "stm32", "secure ship", "arm", "st", "stm32f0", "smt32f04k", "reverse engineering", "security research", "ledger", "gdb", "st-link", "nucleo board", "arm nucleo", "swd", "jtag", "debugging", "debug", "gdb-arm", "arm gnu eabi"], "title": "Remote Debugging ARM Chip with SWD/JTAG - Hardware Wallet Research #3", "description": "Using ARM SWD with a development board to debug the chip with GDB.\nresearch: https://wallet.fail"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KGmyDiLrqSo", "thumbnail": "https://i.ytimg.com/vi/KGmyDiLrqSo/hqdefault.jpg", "date": "2019-01-11T17:56:04Z", "views": "57003", "tags": ["ledger nano s", "hardware wallet", "bitfi", "trezor", "keepkey", "crypto", "cryptocurrency", "paper wallet", "manuals", "stm32", "secure ship", "arm", "st", "stm32f0", "smt32f04k", "reverse engineering", "security research", "ledger"], "title": "Looking at the PCB & Chips - Hardware Wallet Research #2", "description": "We start the research by looking at the chips, documentations and manuals.\nresearch: https://wallet.fail"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "zXR96jprNcY", "thumbnail": "https://i.ytimg.com/vi/zXR96jprNcY/hqdefault.jpg", "date": "2019-01-07T12:50:33Z", "views": "18328", "tags": ["patreon", "youtube", "support", "support liveoverflow", "patreon liveoverflow", "youtube membership", "pledge", "perk", "paid course"], "title": "Support LiveOverflow: Patreon & YouTube Membership", "description": "Would you kindly?\nPatreon: https://www.patreon.com/join/LiveOverflow\nYouTube Membership: https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w/join"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "MoGzPQhwW9s", "thumbnail": "https://i.ytimg.com/vi/MoGzPQhwW9s/hqdefault.jpg", "date": "2019-01-04T18:40:24Z", "views": "66473", "tags": ["hardware wallet", "crypto", "cryptocurrency", "crypto currency", "bitcoin", "ethereum", "tokens", "wallet", "paper wallet", "backups", "ledger", "bitfi", "trezor", "keepkey", "security", "reverse engineering", "architecture", "transactions", "arm", "threat models", "threat modeling"], "title": "Threat Models - Hardware Wallet Research #1", "description": "Why should we write our private key on a paper if the hardware wallet is so perfect?\nresearch: https://wallet.fail"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "M0D999KcyHo", "thumbnail": "https://i.ytimg.com/vi/M0D999KcyHo/hqdefault.jpg", "date": "2019-01-01T16:45:58Z", "views": "27412", "tags": ["game dev", "gynvael gamedec", "challenge", "game development", "wasm", "rust", "javascript", "browser", "competition", "chrome", "winter challenge", "prizes", "winner", "game design", "game engine", "gaming", "developer", "programmer", "coding", "programming"], "title": "Gynvael's Winter GameDev Challenge 2018/19", "description": "Come and build an unrealistic hacker simulator for Gynvael's Winter GameDev Challenge 2018/19\nRules & FAQ & Constraints: https://gynvael.coldwind.pl/?lang=en&id=697\nGynvael's Channel: https://www.youtube.com/channel/UCCkVMojdBWS-JtH7TliWkVg"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "nNBktKw9Is4", "thumbnail": "https://i.ytimg.com/vi/nNBktKw9Is4/hqdefault.jpg", "date": "2018-12-28T21:57:23Z", "views": "259252", "tags": ["nano s", "ledger", "ledger nano s", "cryptocurrency", "cyrpto", "bitcoin", "ether", "ethereum", "monero", "wallet", "hardware wallet", "crypto wallet", "hacking wallet", "hack wallet", "private key", "recovery seed", "ledger.fr", "F00DBABE", "foodbabe", "bootloader", "stm31", "stm32", "stm32f04", "malware", "malicious code", "flash", "memory map", "mapped memory", "nvm", "apdu", "secure element", "mcu", "ledger blue"], "title": "Hardware Wallet Hack: Ledger Nano S - f00dbabe", "description": "It was found that the Ledger Nano S bootloader can be tricked into flashing and executing untrusted firmware.\nResearch Site: https://wallet.fail/\nTwitter: https://twitter.com/walletfail\nThomas Roth: https://twitter.com/stacksmashing\noriginal wallet.fail talk: https://www.youtube.com/watch?v=Y1OBIGslgGM"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RfL3FcnVbJg", "thumbnail": "https://i.ytimg.com/vi/RfL3FcnVbJg/hqdefault.jpg", "date": "2018-12-25T15:33:33Z", "views": "54524", "tags": ["smart contract", "smartcontract", "ethereum smart contracts", "solidity", "compiler", "backdoor", "reverse engineering", "eth", "ether", "msg.sender", "msg.value", "delegatecall", "assembly", "geth", "evm", "ethereum vm", "virtual machine", "bytecode", "constructor", "JOP", "ROP", "jump oriented programming", "integer overflow", "acoraida Monica", "liveoverflow ctf", "rwctf", "real world ctf"], "title": "Jump Oriented Programming: Ethereum Smart Contract #2 - Real World CTF 2018", "description": "In part 2 we identify a backdoor and find the gadgets to do JOP in a ethereum smart contract.\nChallenge Files + Solution: https://gist.github.com/LiveOverflow/21c8a505ca176e5bb20bc94eb23acdf1\nRemix: http://remix.ethereum.org\nEVM Opcodes: https://github.com/trailofbits/evm-opcodes\nEthereum plugin for Binary Ninja: https://github.com/trailofbits/ethersplay"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ozqOlUVKL1s", "thumbnail": "https://i.ytimg.com/vi/ozqOlUVKL1s/hqdefault.jpg", "date": "2018-12-21T18:18:49Z", "views": "84406", "tags": ["smart contract", "smartcontract", "ethereum", "ether", "eth", "jumpdest", "delegatecall", "solidity", "compiler", "geth", "remix", "evm", "bytecode", "constructor", "modifier", "code", "smart contracts", "develop", "write solidity", "develop smart contract", "security", "smart contract security", "code review", "solidity code review", "liveoverflow ctf", "acoraida monica", "real world ctf", "rwctf"], "title": "Ethereum Smart Contract Hacking - Real World CTF 2018", "description": "I thought I know ethereum smart contract security, but this challenge punched me in the face. This was crazy. In the first episode I introduce the challenge and talk about various ideas I had.\npart 2: https://www.youtube.com/watch?v=RfL3FcnVbJg"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2S_TXaGYD8E", "thumbnail": "https://i.ytimg.com/vi/2S_TXaGYD8E/hqdefault.jpg", "date": "2018-12-14T17:14:53Z", "views": "1492287", "tags": ["real world ctf", "realworldctf", "zhengzhou", "china", "zhengzhou university", "capture the flag", "capture-the-flag", "exploits", "vulnerabilities", "exploiting", "exploitation", "demo", "rce", "poc", "pop calc", "calculator", "vm escape", "browser exploit", "vlog", "hacking", "chinese hacker"], "title": "Going to Chinese Hacking Competition - Real World CTF Finals", "description": "Hacking Competition in Zhengzhou China. Our team qualified for the Real World CTF finals in China organised by Chaitin Tech, which was a really awesome CTF. In this video I want to share my experience and thoughts about the event.\nOfficial Video: https://www.youtube.com/watch?v=cYVoJWNVngE\nReal World CTF: https://realworldctf.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0i7wOfyJsW8", "thumbnail": "https://i.ytimg.com/vi/0i7wOfyJsW8/hqdefault.jpg", "date": "2018-12-07T18:50:30Z", "views": "76988", "tags": ["osmocom", "calypso", "motorola", "c118", "c123", "nokia", "network monitor", "osmocombb", "serial cable", "reverse engineering", "baseband", "application processor", "cpu", "baseband driver", "qualcom"], "title": "OsmocomBB: Open Source GSM Implementation - Motorola Calypso Chip", "description": "Calypso Chip: https://osmocom.org/projects/baseband/wiki/HardwareCalypso\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "L3PPWVPg2WI", "thumbnail": "https://i.ytimg.com/vi/L3PPWVPg2WI/hqdefault.jpg", "date": "2018-11-30T18:15:01Z", "views": "169712", "tags": ["nintendo switch", "rcm vulnerability", "switch exploit", "reverse engineering", "bootrom", "fail0verflow", "andy", "g33katwork", "glitching the switch", "boot rom", "tegra x1", "development board", "boot loader", "bpmp", "ccplex", "nvtboot", "irom", "recovery mode", "rm mode", "boot configuration", "booting", "homebrew", "fpga", "fault injection", "glitching", "usb messages", "usb transfers", "buffer overflow", "stack overflow", "memcpy"], "title": "Nintendo Switch (NVIDIA Tegra X1) - BootROM Vulnerability", "description": "A video about the discovery of the BootROM bug, based on the talk given by Andy \"Glitching The Switch\". We talk about how the Switch boots, how the hardware coould be attacked, how a vulnerability in the switch was found and what exactly it does.\nGlitching The Switch Talk: https://media.ccc.de/v/c4.openchaos.2018.06.glitching-the-switch\nAndy: https://twitter.com/G33KatWork"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "DM1tPmxGY7Y", "thumbnail": "https://i.ytimg.com/vi/DM1tPmxGY7Y/hqdefault.jpg", "date": "2018-11-23T20:17:22Z", "views": "90391", "tags": ["e2ee", "end to end encryption", "end-to-end encryption", "e2e encryption", "pgp", "gpg", "mail", "email", "webapp", "browser", "proton mail", "secure email", "encrypted email", "pgp extension", "assymetric crypto", "public key", "private key", "mitm", "man in the middle", "nadim kobeissi"], "title": "End-to-End Encryption in the Browser Impossible? - ProtonMail", "description": "A recent paper about ProtonMail's E2EE makes us wonder if the technology simply doesn't allow us to implement such solutions.\nAn Analysis of the ProtonMail Cryptographic Architecture - Nadim Kobeissi https://eprint.iacr.org/2018/1121"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "eQFbG6CwwdI", "thumbnail": "https://i.ytimg.com/vi/eQFbG6CwwdI/hqdefault.jpg", "date": "2018-11-16T19:31:25Z", "views": "170616", "tags": ["XSS", "cross site scripting", "charlatans", "misleading", "brutelogic", "ashar javed", "alert(1)", "eval()", "onclick", "WAF bypass", "safari", "chrome", "gareth heyes", "browser bugs", "security vulnerability", "client side", "cross-site-scripting", "XSS tool", "bruteforce", "obfuscation", "security research", "vulnerability research", "researcher"], "title": "Identifying Good Research to actually Learn Something - Cross-site Scripting", "description": "How to get good at XSS? There are a lot of charlatans out their overhyping by posting misleading content. It's infuriating because a lot of the actual research is less flashy and thus more hidden. Maybe I'm a bit too pessemistic in this video, but I think it's a concrete example we can use talk about it.\nXSS Introduction: https://www.youtube.com/watch?v=8GwVBpTgR2c&index=4&list=PLhixgUqwRTjx2BmNF5"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "UeAKTjx_eKA", "thumbnail": "https://i.ytimg.com/vi/UeAKTjx_eKA/hqdefault.jpg", "date": "2018-11-09T17:38:15Z", "views": "7329766", "tags": ["raspberry pi", "raspberry pi zero", "raspbi", "raspbian", "boot partition", "fdisk", "waitz", "ucsd", "waitz app", "cellege library", "student", "computer science", "sd card image", "mounting file", "loopback device", "reverse engineering", "embedded device", "linux", "jd-gui", "python", "credentials", "mqtt", "wifi", "tshark", "tcpdump", "bluemon", "bluetooth", "hidden devices", "penetration testing", "mitm", "man in the middle", "pentester", "red teaming", "read team", "wifi hack"], "title": "Student Finds Hidden Devices in the College Library - Are they nefarious?", "description": "A reddit user finds raspberry pi zeros hidden behind trash cans, vending machines and other places in the college library. We reverse engineer them and determine if they are malicious."}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "x-TT3z8ouhQ", "thumbnail": "https://i.ytimg.com/vi/x-TT3z8ouhQ/hqdefault.jpg", "date": "2018-11-02T18:45:37Z", "views": "115421", "tags": ["LoadResource", "FindResourceW", "windows binary", "ida pro", "hopper app", "binary ninja", "hopper disassembler", "disassembly", "reverse engineering", "secret password", "obfuscation", "flare-on", "flareon", "fire eye", "PE file format", "LEGO", "everything is awesome", "pngs", "live overflow"], "title": "Analysing a Collection of Windows Binaries and Embedded Resources - FLARE-On 2018", "description": "In this video we look at another FLARE-On 2018 challenge. This one is weird as we have to somehow automate the analysis of a big collection of binaries. We also learn something about embedded resources.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "B41GbyB7H5U", "thumbnail": "https://i.ytimg.com/vi/B41GbyB7H5U/hqdefault.jpg", "date": "2018-10-26T15:58:30Z", "views": "217643", "tags": ["ilspy", "dnspy", "ida pro", "flare-on", "flareon", "flareon2018", "fire eye", "reverse engineering", "reversing", "windows", ".net", "dotnet", "c#", "ultimate minesweeper", "ultimateminesweeper.exe", "ctf", "capture the flag", "reverse-engineering", "crypto", "random", "seed", "random seed", "keygen", "key verification", "valloc", "obfuscation", "xor encryption"], "title": "Basic Windows Reversing and Attacking Weak Crypto - FLARE-On 2018", "description": "This challenge was part of the FLARE-On 2018 CTF. In this video we reverse engineer a basic windows .exe to find out how to win the game. At first we tried to attack the weak crypto but failed. At the end it turns out I had a bug in my code :(\nFlare-On: https://www.flare-on.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0uejy9aCNbI", "thumbnail": "https://i.ytimg.com/vi/0uejy9aCNbI/hqdefault.jpg", "date": "2018-10-19T17:13:15Z", "views": "339141", "tags": ["orange tsai", "uxss", "universal xss", "cross site scripting", "hacking", "ethical hacking", "ssrf", "server-side request", "forgery", "injection", "cross-site", "cross origin", "chrome", "chromium", "apple", "google", "bug", "bug bounty", "reward", "award", "critical issue", "vulnerability", "report", "write-up", "writeup", "cross-site scripting example", "liveoverflow ctf", "cross origin resource sharing explained", "webkit", "cross site scripting attack example"], "title": "HOW FRCKN' HARD IS IT TO UNDERSTAND A URL?! - uXSS CVE-2018-6128", "description": "URLs are surprisingly hard to read.\nChrome Bug: https://bugs.chromium.org/p/chromium/issues/detail?id=841105\nOrange Tsai: https://twitter.com/orange_8361\nA New Era of SSRF - Exploiting URL Parser in Trending Programming Languages! - CODE BLUE: https://www.youtube.com/watch?v=2MslLrPinm0\nSlides: https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trend"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "IuxBfHnP5S0", "thumbnail": "https://i.ytimg.com/vi/IuxBfHnP5S0/hqdefault.jpg", "date": "2018-10-12T21:45:54Z", "views": "142812", "tags": ["nokia", "motorola", "gsm", "osmocom", "mobile security", "telecommunication", "telsec", "lte", "umts", "edge", "gprs", "sysmocom", "basestation", "enode", "node b", "rach", "ccch", "sdcc", "tdma", "frequency", "imsi catcher", "timsi", "lte band", "gsm call flow", "umts call flow", "3310", "wireshark", "cell tower", "celltower", "time-division", "lte vs gsm", "1800 mhz"], "title": "GSM Mobile Network Intro - Nokia Network Monitor", "description": "Let's start with the GSM network. We can use the Nokia Network Monitor to learn about channels and frequencies.\nNokia Network Monitor: https://en.wikipedia.org/wiki/Nokia_network_monitor\nVadim Yanitskiy: https://twitter.com/axilirator\nBasestation Map: https://www.cellmapper.net/map"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "iJFnYBJJiuQ", "thumbnail": "https://i.ytimg.com/vi/iJFnYBJJiuQ/hqdefault.jpg", "date": "2018-10-05T17:31:32Z", "views": "1221269", "tags": ["osmocom", "simtrace", "simtracer", "sim card", "simcard", "java card", "smart card", "smartcard", "intercept", "mitm", "usb", "wireshark", "GSM SIM", "GSM", "IMSI", "USSD", "VERIFY", "CHV", "PIN", "motorola", "nokia", "telsec", "mobile security", "mobile", "phone", "mobilephone", "smartphone", "basestation", "base station", "baseband", "enodeb", "enode b", "node", "ss7", "telecommuncation security", "cell phone", "mobile phone"], "title": "How do SIM Cards work? - SIMtrace", "description": "In this video we use SIMtrace to intercept the communication between the phone and SIM card to understand how that works. This is part 1 in a series introducing mobile security.\nVadim Yanitskiy: https://twitter.com/axilirator\nOsmocom: https://osmocom.org/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bMPAXsgWNAc", "thumbnail": "https://i.ytimg.com/vi/bMPAXsgWNAc/hqdefault.jpg", "date": "2018-09-28T16:25:18Z", "views": "97773", "tags": ["browser bug", "web security", "css", "cascading stylesheet", "style", "stylesheet", "sop", "same origin policy", "same-origin", "cross origin", "cors", "tangled web", "lcamtuf", "scarybeasts", "chris evans", "filedescriptor", "google", "chromium", "chrome", "firefox", "ie", "internet explorer", "opera", "2009", "2014", "2017", "pepe vila", "cgvwzq", "browser security", "client side security", "xss", "steal data", "css keylogger", "css keylog", "beef", "utf-16", "utf16", "utf-8", "utf8", "bugs"], "title": "The Curse of Cross-Origin Stylesheets - Web Security Research", "description": "In 2017 a cool bug was reported by a researcher, which lead me down a rabbit hole to a 2014 and even 2009 bug. This provides interesting insight into how web security research looks like.\ncgvwzq's Bug (2017): https://bugs.chromium.org/p/chromium/issues/detail?id=788936\nfiledescriptor's Bug (2014): https://bugs.chromium.org/p/chromium/issues/detail?id=419383\nscarybeasts' Bug (2009): https://bugs.ch"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RXgp4cDbiq4", "thumbnail": "https://i.ytimg.com/vi/RXgp4cDbiq4/hqdefault.jpg", "date": "2018-09-21T18:43:28Z", "views": "174561", "tags": ["defcon ctf", "ctf", "def con", "defcon26", "dc26", "oooverflow", "oooeditor", "sauercloud", "krautstrike", "sauer cloud", "defcon ctf finals", "ctf finals", "2018", "las vegas", "lv", "attack and defense", "a&d", "attack&defense", "attack and defence"], "title": "DEF CON CTF 2018 Finals", "description": "Vlog about the Attack and Defense DEF CON 2018 CTF Finals in Las Vegas.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "B8saYocsI-U", "thumbnail": "https://i.ytimg.com/vi/B8saYocsI-U/hqdefault.jpg", "date": "2018-09-14T16:35:00Z", "views": "53173", "tags": ["las vegas", "def con", "defcon", "dc26", "dc 26", "def con ctf", "defcon ctf", "blackhat", "black hat", "hackers", "casino", "vlog", "conference", "conf", "zerog", "google", "rapid7", "party", "luxor"], "title": "First time in Las Vegas for BlackHat, DEF CON and more...", "description": "Vlog about my first time in Las Vegas to participate in the DEF CON CTF Finals. In this first part I just share my experience at the various conferences and events. And in the next part I will talk about the DEF CON CTF itself.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6htg9MGMOYE", "thumbnail": "https://i.ytimg.com/vi/6htg9MGMOYE/hqdefault.jpg", "date": "2018-09-07T15:54:06Z", "views": "34375", "tags": ["pwn adventure", "game hacking", "hack games", "c++", "pvp", "ctf", "capture the flag", "capture-the-flag", "binary ninja", "vector35", "portal 2", "portal2", "credits", "song", "music", "pwncoins", "last flag", "last challenge", "overachiever", "pwa3", "pwnie island", "hax"], "title": "The Last Flag (Overachiever) - Pwn Adventure 3", "description": "Part 20: The End.\nOriginal Credits video: https://youtu.be/X3fubzKSMCE"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2pqHsW3yNlA", "thumbnail": "https://i.ytimg.com/vi/2pqHsW3yNlA/hqdefault.jpg", "date": "2018-09-04T14:52:18Z", "views": "39153", "tags": ["reverse engineering", "reversing", "keygen", "assembler", "key verification", "verify key", "javascript", "chiptune", "keygenme", "pwn adventure", "pwn3", "pwn adventure 3", "pwnadventure", "game hacking", "game hacks", "mmo hacks", "mmorpg", "dlc", "key", "unlock code"], "title": "RSA Implemented in JavaScript (Keygen part 5) - Pwn Adventure 3", "description": "Part 19: I implemented the KeyGen in JavaScript based on the algorithms we reversed from the assembler code. The used the dlc unlock code to solve the last challenge - Pirate's Treasure.\nKeygen: http://old.liveoverflow.com/poc/keygen.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "dcR1dkZJ7iU", "thumbnail": "https://i.ytimg.com/vi/dcR1dkZJ7iU/hqdefault.jpg", "date": "2018-08-31T18:50:12Z", "views": "47585", "tags": ["rsa", "assembler", "reverse engineering", "reversing", "modular", "modulo", "modulus", "exponentiation", "large integers", "bigints", "bigint", "big integer", "algorithm", "squaring", "multiplication", "mod", "exponent", "game hacking", "dlc key", "unlock key", "game hacks", "hacking", "hacker", "mmo", "key verification", "verify key", "keygen", "keygenme"], "title": "RSA Implemented in Assembler (Keygen part 4) - Pwn Adventure 3", "description": "Part 18: We are looking at how RSA is implemented in assembler for arbitrary large integers. Specifically modular exponentiation.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "WgRAYOXBVxs", "thumbnail": "https://i.ytimg.com/vi/WgRAYOXBVxs/hqdefault.jpg", "date": "2018-08-24T20:44:19Z", "views": "55743", "tags": ["pwn adventure 3", "pwnadventure", "keygen", "key verification", "rsa", "verifykey", "keyverify", "crypto", "reversing", "reverse engineering", "assembler", "binary ninja", "binja", "algorithm", "for-loop", "for loop", "game hacking", "game hacks", "dlc", "unlock code", "key code", "dlc key", "pirate's treasure", "pwnie island"], "title": "Understanding the Key Verification Algorithm (Keygen part 3) - Pwn Adventure 3", "description": "Part 17: This video might be a bit more boring reversing, and I even failed to recognise the implemented algorithm.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "JDXU2shkNSE", "thumbnail": "https://i.ytimg.com/vi/JDXU2shkNSE/hqdefault.jpg", "date": "2018-08-17T17:11:04Z", "views": "73104", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "base64", "base32", "encoding", "custom encoding", "keygen", "verifykey", "keyverify", "keyverification", "keu generator", "key reversing", "unlock code", "dlc code"], "title": "Reversing Custom Encoding (Keygen part 2) - Pwn Adventure 3", "description": "Part 16: We reverse engineer more of the VerifyKey function and find a custom Base32 encoding.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8ieAh19vrYc", "thumbnail": "https://i.ytimg.com/vi/8ieAh19vrYc/hqdefault.jpg", "date": "2018-08-11T08:33:22Z", "views": "111976", "tags": ["keygen", "keygenme", "dlc", "unlock code", "key generator", "key verification", "key validation", "verifykey", "keyverify", "Keyverifier", "BinaryNinja", "Binary Ninja", "IDA", "IDA pro", "reversing", "reverse engineering", "reverseengineering", "reveng", "buffer", "alphabet", "checksum", "simple checksum", "chksum", "check sum", "loop", "for-loop", "c for loop", "c++ for loop"], "title": "Reversing Input Validation (Keygen part 1) - Pwn Adventure 3", "description": "Part 15: We start reversing VerifyKey for the \"Pirate's Treasure\" challenge. This will take us several videos. In this first part we look at the input validation.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "L8sH8VM2Bd0", "thumbnail": "https://i.ytimg.com/vi/L8sH8VM2Bd0/hqdefault.jpg", "date": "2018-08-03T22:42:47Z", "views": "74529", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "machine learning", "weka", "neural network", "nn", "tensorflow", "brute force", "inject packets", "logic puzzle", "blocky", "blocky's revenge"], "title": "Failing at Machine Learning (Blocky part 2) - Pwn Adventure 3", "description": "Part 14: Totally failed at building a neural network or using other machine learning algorithms and in the end just used bruteforce.\nBlocky's Revenge part 1: https://www.youtube.com/watch?v=PQPO5Z4lVTU"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "PQPO5Z4lVTU", "thumbnail": "https://i.ytimg.com/vi/PQPO5Z4lVTU/hqdefault.jpg", "date": "2018-07-27T18:56:31Z", "views": "71963", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "blocky", "blocky's revenge", "logic puzzle", "32bit", "packets", "network proxy", "reverse packets"], "title": "Analyzing the Blocky Logic Puzzle  - Pwn Adventure 3", "description": "Part 13: We start looking into another challenge, Blocky's Revenge. I failed to reverse engineer this in the client, but had some success with the network packets.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "9NYleo0r4Eg", "thumbnail": "https://i.ytimg.com/vi/9NYleo0r4Eg/hqdefault.jpg", "date": "2018-07-20T17:34:21Z", "views": "32920", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "integer overflow", "signed", "unsigned", "binary data", "ascii", "overflow", "underflow", "assembler"], "title": "\u2020: Signed and Unsigned Integers - Integer Overflows - Pwn Adventure 3", "description": "Part 12.2: Binary data can be interpreted in different ways. This is a bonus video along the integer overflow we exploit to provide a bit more context.\nMain Video: https://www.youtube.com/watch?v=XrE-RfAYrzs"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "XrE-RfAYrzs", "thumbnail": "https://i.ytimg.com/vi/XrE-RfAYrzs/hqdefault.jpg", "date": "2018-07-20T17:30:24Z", "views": "92610", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "magmarok", "fire and ice", "dungeon", "boss", "integer overflow", "healing", "underflow"], "title": "Exploiting an Integer Overflow (Fire and Ice) - Pwn Adventure 3", "description": "Part 12: Killing the boss Magmarok in the Fire & Ice Dungeon with an integer overflow.\nBonus Video Part 12.2: https://www.youtube.com/watch?v=9NYleo0r4Eg"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "_ePSezu33vw", "thumbnail": "https://i.ytimg.com/vi/_ePSezu33vw/hqdefault.jpg", "date": "2018-07-13T23:44:37Z", "views": "91825", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "autoloot", "looting", "farming", "inject packets", "tcp proxy", "python", "socket", "socket programming", "network programming", "packet analysis", "analyzing traffic"], "title": "Implementing Autoloot with the Proxy - Pwn Adventure 3", "description": "Part 11: We reverse engineer more network packets and then also add functionality to inject packets. With that we build a remote autoloot for easy farming.\n\ud83c\udf34 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TG_FVzBijrk", "thumbnail": "https://i.ytimg.com/vi/TG_FVzBijrk/hqdefault.jpg", "date": "2018-07-06T17:27:31Z", "views": "127415", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "game traffic", "traffic analysis", "protocol reversing", "mmorpg protocol", "game protocol", "packet analysis", "custom protocol", "message format", "python", "tcp proxy", "tcp packets", "socket python"], "title": "Analyzing the Game Network Protocol - Pwn Adventure 3", "description": "Part 10: With our TCP Proxy we can now parse the packets and analyse the protocol.\nParser on GitHub: https://github.com/LiveOverflow/PwnAdventure3/blob/master/tools/proxy/parser_part10.py"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "J2XS3m2Ctuc", "thumbnail": "https://i.ytimg.com/vi/J2XS3m2Ctuc/hqdefault.jpg", "date": "2018-06-29T14:38:43Z", "views": "20967", "tags": ["john hammond", "google ctf", "googlectf", "ctf", "capture the flag", "capture-the-flag", "ctf writeup", "ctf video writeup", "write-up", "tutorial", "crackme", "anti-debugging", "anti debugging", "anti debug", "keygen", "js safe 2.0", "crack me", "obfuscation", "obfuscated", "javascript", "js", "java script", "chrome", "developer tools", "reverse engineering", "algorithm"], "title": "\u2020: Some things I got wrong with JS Safe 2.0 - Google CTF 2018", "description": "I got some stuff very wrong, so I really felt like making a proper update video to explain it.\nmain video: https://www.youtube.com/watch?v=8yWUaqEcXr4"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8yWUaqEcXr4", "thumbnail": "https://i.ytimg.com/vi/8yWUaqEcXr4/hqdefault.jpg", "date": "2018-06-28T15:33:36Z", "views": "487680", "tags": ["john hammond", "google ctf", "googlectf", "ctf", "capture the flag", "capture-the-flag", "ctf writeup", "ctf video writeup", "write-up", "tutorial", "crackme", "anti-debugging", "anti debugging", "anti debug", "keygen", "js safe 2.0", "crack me", "obfuscation", "obfuscated", "javascript", "js", "java script", "chrome", "developer tools", "reverse engineering", "algorithm"], "title": "Solving a JavaScript crackme: JS SAFE 2.0 (web) - Google CTF 2018", "description": "Solving a crackme implemented in JavaScript that attempts to obfuscate the algorithm through some anti-debugging.\nSolution Script / HTML: https://gist.github.com/LiveOverflow/bbdffe3777ce0f008b452e0a789cef65\nJohn Hammond: https://www.youtube.com/user/RootOfTheNull"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "iApNzWZG-10", "thumbnail": "https://i.ytimg.com/vi/iApNzWZG-10/hqdefault.jpg", "date": "2018-06-22T18:37:15Z", "views": "139729", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "game traffic", "traffic analysis", "python", "sockets", "tcp packets", "network programming", "socket", "listen", "connect", "port", "tcp", "proxy", "game proxy", "tcp proxy"], "title": "Developing a TCP Network Proxy - Pwn Adventure 3", "description": "Part 9:  To analyse the game traffic, we are developing a simple proof of concept TCP network proxy. Then we can start to reverse engineer the protocol.\nGitHub: https://github.com/LiveOverflow/PwnAdventure3/tree/master/tools/proxy"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "it5kqkE-KAo", "thumbnail": "https://i.ytimg.com/vi/it5kqkE-KAo/hqdefault.jpg", "date": "2018-06-15T17:36:05Z", "views": "63599", "tags": ["pwn adventure 3", "pwn adventure", "pwnie island", "game hacking", "game hacks", "mmorpg", "mmo", "multiplayer game", "hacks", "hack mmo", "tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "golden eggs", "hidden eggs", "lost eggs", "find hidden", "teleporting", "find objects", "coordinates", "game coordinates", "find coords", "floating point", "binary ninja", "binja", "binaryninja", "c++", "c++ objects"], "title": "Find the hidden Golden Eggs - Pwn Adventure 3", "description": "Part 8: We are combining what we learned to find the hidden Golden Eggs. But the last egg has a little twist to it, so we had to reverse engineer a bit more.\nGitHub: https://github.com/LiveOverflow/PwnAdventure3\nFile LD_PRELOAD: https://github.com/LiveOverflow/PwnAdventure3/blob/master/tools/linux/part8_eggs.cpp"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Ry_yb5Oipq0", "thumbnail": "https://i.ytimg.com/vi/Ry_yb5Oipq0/hqdefault.jpg", "date": "2018-06-10T20:00:32Z", "views": "147366", "tags": ["zip files", "zip archive", "zip", "tar", "tar.gz", ".zip", ".tar", "exploiting zip", "path traversal", "path-traversal", "symlink", "symbolic link", "zipslip", "zip slip", "zip-slip", "zipperdown", "phrack", "zip attacks", "vulnerable", "vulnerability", "snyk", "snyk team", "snyk security", "pangu lab", "pangu team", "pangu", "disclosure", "pull request", "gynvael", "ange", "ange albertini", "funky fileformats", "file format", "archives"], "title": "Critical .zip vulnerabilities? - Zip Slip and ZipperDown", "description": "What is going on with .zip files. What is this new critical vulnerability that seems to affect everything? ... old is new again.\nResources:\n- ZipperDown: https://zipperdown.org/\n- Zip Slip: https://snyk.io/research/zip-slip-vulnerability\n- Zip Specification: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n- The Complete Guide to Hacking WWIV: http://phrack.org/issues/34/5.html#article"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "E7e_-sqOo1M", "thumbnail": "https://i.ytimg.com/vi/E7e_-sqOo1M/hqdefault.jpg", "date": "2018-06-08T20:24:48Z", "views": "69923", "tags": ["mmorpg", "mmo", "hacks", "hacking", "mmo hacking", "mmorpg game hack", "game hacking", "game gacks", "teleporting", "teleport", "hovering", "flying", "setposition", "pwn adventure 3", "pwn adventure", "pwnie island", "multiplayer game", "hack mmo", "tutorial", "game hacking tutorial", "reverse engineering", "debugging", "linux gaming", "linux games", "hacking games", "c++", "c programming", "header file", "LD_PRELOAD", "ldpreload"], "title": "Teleporting and Hovering (Unbearable Revenge) - Pwn Adventure 3", "description": "Part 7: We use chat messages to implement teleport commands and try to get access to more chests. But it's not that easy and we have to implement hovering.\nGitHub Teleport: https://github.com/LiveOverflow/PwnAdventure3/blob/master/tools/linux/part7_teleport.cpp"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VzZi2AGAsOY", "thumbnail": "https://i.ytimg.com/vi/VzZi2AGAsOY/hqdefault.jpg", "date": "2018-06-01T17:20:44Z", "views": "62331", "tags": ["flying", "mmo hacking", "game hacking", "ld_preload", "ld preload", "preloading", "dlsym", ".so", "library", "linux", "mmo server", "flying hack", "fly hack", "hovering", "mmorpg", "c++", "c programming", "reverse engineering", "hooking", "game hacks", "gdb"], "title": "Flying and our first Flag! (Cow King) - Pwn Adventure 3", "description": "Part 6: We continue with our LD_PRELOAD method and implement flying. We also discover our first secret where we get our first flag!\nChallenge: Until the Cows Come Home"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "W7MC05_JN68", "thumbnail": "https://i.ytimg.com/vi/W7MC05_JN68/hqdefault.jpg", "date": "2018-05-25T17:42:38Z", "views": "80571", "tags": ["LD_PRELOAD", "c++", "gcc", "gdb", "hooking", "hook function", "function hook", "hooks", "hooking framework", "dlsym", "ld preload", "classes", "class", "hacking game", "game hacks", "mmo", "mmorpg", "vulnerability", "cheats", "cheating", "walking speed", "speedhack", "health hack", "invulnerable"], "title": "Hooking on Linux with LD_PRELOAD - Pwn Adventure 3", "description": "Part 5: Finally our first hack! We use the LD_PRELOAD feature to overwrite functions of the dynamic library libGameLogic.so. This allows us to change a lot of behaviour in the client.\nGitHub: https://github.com/LiveOverflow/PwnAdventure3/tree/master/tools/linux/part5_walking_speed.cpp"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8wz2CM0483o", "thumbnail": "https://i.ytimg.com/vi/8wz2CM0483o/hqdefault.jpg", "date": "2018-05-18T17:42:41Z", "views": "96207", "tags": ["gdb", "ptype", "print", "recover classes", "debug information", "pdb", "structs", "class", "c++ class", "reverse engineer", "reverse engineering", "reversing", "so", "library", "pwn adventure 3", "pwn adventure", "pwnadventure", "pwnie", "pwnie island", "binary ninja", "binaryninja", "ida", "ida pro", "idapro", "debugger", "debugging", "breakpoint", "game world", "gameworld", "global object", "global variable"], "title": "Recover Game Classes with gdb - Pwn Adventure 3", "description": "Part 4: We start reverse engineering! Luckily the game comes with not-stripped binaries which means all the class names are included. We can use the debug information to dump class definitions with gdb. This will be incredible useful when we create our first hack next video!\nlibGameLogic.h: https://github.com/LiveOverflow/PwnAdventure3/blob/master/tools/linux/libGameLogic.h"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "pzM4o6qxssk", "thumbnail": "https://i.ytimg.com/vi/pzM4o6qxssk/hqdefault.jpg", "date": "2018-05-11T17:22:26Z", "views": "105880", "tags": ["pwn adventure", "pwnadventure", "pa3", "recon", "reconnaissance", "game hacking", "game client", "mmo", "mmorpg", "hack games", "reverse engineering", "reversing", "mono", "c#", "c++", "library", "dll", "so", "dylib", "mac", "windows", "linux", "wireshark", "pdb", "fiel hash", "diff", "unique files", "pak", "game engine", "protocol"], "title": "Information Gathering / Recon - Pwn Adventure 3", "description": "Part 3: We start to get technical by gathering some information. This is a crucial step in order to get a better understanding about the game in order to hack it.\nfind_unique.py: https://github.com/LiveOverflow/PwnAdventure3/blob/master/tools/find_unique.py"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VkXZXwQP5FM", "thumbnail": "https://i.ytimg.com/vi/VkXZXwQP5FM/hqdefault.jpg", "date": "2018-05-04T20:28:51Z", "views": "80281", "tags": ["pwnadventure 3", "pwnadventure3", "pwn adventure", "pwnadventure", "part 2", "setup server", "private server", "priv server", "create private server", "docker", "dockercompose", "docker compose", "github", "setup", "ubuntu", "host", "mmo", "mmorpg", "game hacking", "hacks", "game hacks", "linux game", "gaming", "linux gaming", "docker-compose", "intel nuc"], "title": "Setup Private Server with Docker - Pwn Adventure 3", "description": "Part 2: Before we can start with the hacks we have to setup a private server. I used this project to learn more about Docker myself and share my result so you can set it up easily.\nSetup Server Instructions: https://github.com/LiveOverflow/PwnAdventure3"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "y6Uzinz3DRU", "thumbnail": "https://i.ytimg.com/vi/y6Uzinz3DRU/hqdefault.jpg", "date": "2018-04-20T15:54:08Z", "views": "127804", "tags": ["popunder", "pop-under", "popunderjs", "popup", "pop-up", "popup blocker", "pop-up blocker", "blocking popups", "block popunder", "ads", "advertiser", "library", "malicious javascript", "hide javasript", "js", "java script", "javascript", "living standard", "chromium", "chrome", "google", "custom build", "ninja build", "chrome 65", "chrome 66", "chrome 68", "dev build", "developer build", "debug build", "developer tools", "pop under"], "title": "Custom Chromium Build to Reverse Engineer Pop-Under Trick", "description": "I wanted to compile a custom Chromium 68 build to totally ignore the obfuscated JavaScript. That was a cool experience, but in the end not necessary - the trick was super simple and works on Mac, Windows and Linux.\nChromium Issue 833148: https://bugs.chromium.org/p/chromium/issues/detail?id=833148"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ZaOtY4i5w_U", "thumbnail": "https://i.ytimg.com/vi/ZaOtY4i5w_U/hqdefault.jpg", "date": "2018-04-13T22:57:21Z", "views": "41366", "tags": ["sources", "sinks", "sources\\u0026sinks", "code review", "codereview", "security audit", "code audit", "security code review", "sink", "source", "jquery", "domxss", "xss", "php", "dangerous function", "dangerous functions", "eval", "exec", "system"], "title": "Sources and Sinks - Code Review Basics", "description": "A very basic concept of security code audits is the sources/sinks. Everybody develops an intuition for it, but I still wanted to talk about it, because it would have helped me when I started out.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2TofunAI6fU", "thumbnail": "https://i.ytimg.com/vi/2TofunAI6fU/hqdefault.jpg", "date": "2018-04-06T17:45:15Z", "views": "3122816", "tags": ["step-by-step", "step by ste", "guide", "tutorial", "hacking guide", "hacker guide", "how to become a hacker", "secret hacking tips", "hacking tipps", "secret guide", "anonymous", "mr robot", "learn hacking", "introduction", "ultimate guide", "ultimative guide", "start to hack"], "title": "The Secret step-by-step Guide to learn Hacking (for real)", "description": "totally clickbait. but also not clickbait. I don't know where to start hacking, there is no guide to learn this stuff. But I hope you still have a plan now!"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ujaBCDaPUm0", "thumbnail": "https://i.ytimg.com/vi/ujaBCDaPUm0/hqdefault.jpg", "date": "2018-03-31T23:14:14Z", "views": "29670", "tags": ["pen-testing", "pentesting", "pen tester", "pentester", "penetration testing", "penspinning", "pen spinning", "thumb around", "TA", "thumbaround", "tutorial"], "title": "Red vs. Blue: Pen-Testing Introduction", "description": "This is the best trick to get started with pen-testing!\nA day in the life of a pen-tester: https://www.youtube.com/watch?v=2LOtBpA7W_M"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Jpaq0QkepgA", "thumbnail": "https://i.ytimg.com/vi/Jpaq0QkepgA/hqdefault.jpg", "date": "2018-03-30T21:05:40Z", "views": "42416", "tags": ["patterns", "ey!", "base64", "memory patterns", "addresses", "identifying ascii", "ascii", "short", "tips and tricks", "texts", "auditing code", "code audits", "efficiency", "complex systems", "itentify patterns", "common patterns"], "title": "ey! Look for patterns", "description": "In order to understand complex systems quickly, you need to identify reoccurring patterns in order to focus on important parts.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kMu1J8QdxE8", "thumbnail": "https://i.ytimg.com/vi/kMu1J8QdxE8/hqdefault.jpg", "date": "2018-03-23T20:02:35Z", "views": "27609", "tags": ["fuzzing", "fuzzer", "smart fuzzing", "afl", "radamsa", "fuzzers", "case generator", "fuzz", "aoh", "vulnerability"], "title": "Fuzzing with radamsa - Short", "description": "Radamsa is a test case generator for robustness testing, a.k.a. a fuzzer. And it does it super well. Perfect for rapid prototyping.\nradamsa: https://github.com/aoh/radamsa"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "EOlddNofKxo", "thumbnail": "https://i.ytimg.com/vi/EOlddNofKxo/hqdefault.jpg", "date": "2018-03-16T19:17:36Z", "views": "39670", "tags": ["gf(2)", "finite field", "Galois field", "finite-field", "GF", "Z2", "software_update", "34c3", "34c3ctf", "xor", "vectors", "linear independence", "it security", "math hacking", "math hacks", "mathematics in security", "security math", "linear dependence", "3d", "2d", "vector", "independent vector", "matrix", "system of equtions"], "title": "Linear independence and GF(2) - 34C3 CTF software_update (crypto) part 2/2", "description": "In this video we only focus on the mathematical solution for software_update from the 34c3 CTF.\nsage script:\nhttps://gist.github.com/LiveOverflow/104adacc8af7895a4c14cea4a5236ecc"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Vgdhlh6evjI", "thumbnail": "https://i.ytimg.com/vi/Vgdhlh6evjI/hqdefault.jpg", "date": "2018-03-09T18:17:13Z", "views": "51138", "tags": ["firmware update", "code audit", "code review", "crypto", "ctf", "challenge", "capture the flag", "software_update", "cryptography", "hashing", "signature", "rsa based", "34c3ctf", "34c3 ctf", "python code", "security audit", "whitebox", "bug hunting", "public key", "private key", "signature check", "signature verification", "updater", "invalid signature", "pycrypto", "sha", "xor", "xoring", "pkcs1", "pkcs1_pss"], "title": "Python code audit of a firmware update - 34C3 CTF software_update (crypto) part 1/2", "description": "This challenge from the 34C3 CTF implemented a software update in python. In part 1/2 we try to understand the code and think about possible attacks.\nsoftware_update: https://archive.aachen.ccc.de/34c3ctf.ccc.ac/challenges/index.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "lE6ke7pqCNY", "thumbnail": "https://i.ytimg.com/vi/lE6ke7pqCNY/hqdefault.jpg", "date": "2018-03-02T18:25:33Z", "views": "83553", "tags": ["readme", "32c3", "34c3", "32c3ctf", "34c3ctf", "readme_revenge", "readme revenge", "leak memory", "memory leak", "argv", "printf", "customize printf", "format string", "%s", "function table", "__printf_function_table", "tuwat", "pwn", "pwnable", "ctf", "ctftime", "c3 ctf", "c3", "gdb", "pwndbg", "dynamic loaded", "ldd", "debugging", "exploit", "python script", "linux", "exploit development", "capture the flag", "capture-the-flag"], "title": "Global variable Buffer Overflow to leak memory - 34C3 CTF readme_revenge (pwn)", "description": "Two years ago I failed to solve the readme challenge at the 32c3ctf. Since then I have learned a lot and I got another chance!\nreadme 32c3ctf: https://www.youtube.com/watch?v=wLsckMfScOg\nreadme_revenge: https://archive.aachen.ccc.de/34c3ctf.ccc.ac/challenges/index.html\nWhat is CTF? https://www.youtube.com/watch?v=8ev9ZX9J45A\nWhy you should play CTFs: https://www.youtube.com/watch?v=rfjV8XukxO8"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "oJ6t7AImTdE", "thumbnail": "https://i.ytimg.com/vi/oJ6t7AImTdE/hqdefault.jpg", "date": "2018-02-23T19:39:56Z", "views": "310699", "tags": ["css keylogger", "css attack", "css hacks", "attribute selector", "abusing", "exploiting", "exploit css", "abuse css", "style", "style tag", "abuse html style", "html style", "steal password", "steal data", ".mario", "scriptlessattack", "css injection", "html injection", "js injection", "javascript injection", "xss", "sirdarckcat", "garethheyes", "thornmaker", "Blue-Hat", "security research", "html tricks", "css hacking", "stylesheet", "style-sheet"], "title": "CSS Keylogger - old is new again", "description": "This is \"well known\" research that resurfaces every other year. Let me tell you a story how I have heard about this in 2012 and putting it into perspective.\nResearch \"Scriptless Attacks \u2013\nStealing the Pie Without Touching the Sill\" (2012):\n + Paper: https://www.nds.rub.de/media/emma/veroeffentlichungen/2012/08/16/scriptlessAttacks-ccs2012.pdf\n + Slides: https://www.slideshare.net/x00mario/stealing"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "AMMOErxtahk", "thumbnail": "https://i.ytimg.com/vi/AMMOErxtahk/hqdefault.jpg", "date": "2018-02-16T17:48:38Z", "views": "516040", "tags": ["lack of motivation", "stop wasting time", "time management", "hacking games", "game hacking", "clickerheroes", "clicker heroes", "clicker heroes 2", "hacking clicker heroes", "clicker heros", "how to learn hacking", "hacking mobile game", "save game hack", "savegame hack", "waste time", "timewaste", "playing games depressed", "take a break", "combine gaming hacking"], "title": "STOP WASTING YOUR TIME AND LEARN MORE HACKING!", "description": "This is what my brain tells me a lot. But sometimes we just need a break. And it's OK to take a break - however long it has to be. And in this video I'm sharing how I try to deal with these negative thoughts and lack of motivation.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "aRDGI7UVSuI", "thumbnail": "https://i.ytimg.com/vi/aRDGI7UVSuI/hqdefault.jpg", "date": "2018-02-10T14:36:37Z", "views": "221634", "tags": ["guild wars 2", "guildwars 2", "gw2", "trading bot", "gw2 trading", "gw2 tradingbot", "tradingbot", "data analysis", "tracking bot", "reverse engineering", "scripting botting", "mmorpg game design", "anti-cheat", "anti-bot", "anti cheat", "anti bot", "trade bots", "trading"], "title": "MMORPG Bot part 2 - Some thoughts on the data", "description": "In this part I'm thinking about the effects of bots on MMORPGs and then look at the collected data.\nThe Data: https://imgur.com/a/X8Syu\nPart 1: https://www.youtube.com/watch?v=irhcfHBkfe0\nPlay Guild Wars 2: https://www.guildwars2.com/register"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "irhcfHBkfe0", "thumbnail": "https://i.ytimg.com/vi/irhcfHBkfe0/hqdefault.jpg", "date": "2018-02-09T21:21:25Z", "views": "645931", "tags": ["gw2", "gw2trading", "gw2 trading bot", "trading bot", "tradingbot", "guild wars 2", "guildwars2", "guildwars 2", "tradingpost", "trading post", "API", "gw2 api", "tradingpost api", "botting", "mmorpg bot", "mmorpg", "reverse engineering", "hxd", "hex editor", "fiddler", "replay http request", "edit http request", "IDA pro", "ida free", ".net", ".net reflector", "memory dump", "dump memory", "analyse dump", "analyze ram"], "title": "MMORPG Bot Reverse Engineering and Tracking", "description": "A friend told me that a GW2 trading bot implemented a dumb API. We are going to find and use it to track the bot.\nPlay Guild Wars 2:\nhttps://account.arena.net/register\nFiddler: https://www.telerik.com/fiddler\n.NET Reflector: https://www.red-gate.com/products/dotnet-development/reflector/\nHxD: https://mh-nexus.de/en/hxd/\nIDA Free: https://www.hex-rays.com/products/ida/support/download_freeware.shtm"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "fJMnH0kCAak", "thumbnail": "https://i.ytimg.com/vi/fJMnH0kCAak/hqdefault.jpg", "date": "2018-02-02T20:58:59Z", "views": "30406", "tags": ["heap0", "exploit-exercises", "exploit-exercises.com", "protostar", "heap exploit", "heap overflow", "function pointer", "functionpointer", "stdout", "stdout buffer", "standard out", "io buffer", "libc buffer", "glibc buffer", "output buffering", "malloc", "buffer on heap"], "title": "heap0 exploit speedrun & weird ASCII string on the Heap - bin 0x28", "description": "The heap0 example is not affected by DEP or ASLR on Ubuntu 16.04, so it's super easy. But we use the opportunity to investigate another weird string that we found on the heap.\nheap0: http://liveoverflow.com/binary_hacking/protostar/heap0.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "MpeaSNERwQA", "thumbnail": "https://i.ytimg.com/vi/MpeaSNERwQA/hqdefault.jpg", "date": "2018-01-27T02:47:18Z", "views": "479649", "tags": ["php", "php hmac", "hmac", "vulnerability", "bug", "critical", "severe", "fail", "php bug", "php exploit", "web hacking", "php hacking", "php website", "php challenge", "ctf", "game hacking", "hacking process", "step by step", "tutorial", "hacks", "hack", "php reversing", "nonce", "sha256", "hash_hmac", "exec", "system", "code exec", "remote exploit"], "title": "Let\u2019s play a game: what is the deadly bug here?", "description": "This short php code contains a critical vulnerability. In this video I will explain in detail what I think while analysing it.\nOriginal source of challenge: https://www.securify.nl/en/blog/SFY20180101/spot-the-bug-challenge-2018-warm-up.html\nLink to tweet: https://twitter.com/xxByte/status/951499972582703104"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gKHaKoPJN08", "thumbnail": "https://i.ytimg.com/vi/gKHaKoPJN08/hqdefault.jpg", "date": "2018-01-19T20:16:07Z", "views": "21703", "tags": ["troopers", "troopers conference", "troopers17", "troopers 17", "troopers 2017", "german security conference", "heidelberg", "security conf", "troopersconf", "trooperscon", "badge wizard", "brian", "conference badge", "security conference", "troopers 2018", "troopers18", "security conf badge", "badges", "nokia 3310", "nokia3310", "nokia hacking", "phone hacks"], "title": "TROOPERS 17 Badge ft. BadgeWizard", "description": "An interview with BadgeWizard showing off the TROOPERS 17 Badge with a Nokia 3310.\nhttps://www.troopers.de/\nhttps://twitter.com/BadgeWizard"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "hyoPAOTrUMc", "thumbnail": "https://i.ytimg.com/vi/hyoPAOTrUMc/hqdefault.jpg", "date": "2018-01-12T19:34:34Z", "views": "21175", "tags": ["AVR", "reverse engineering", "Zeta Two", "rhme2", "rhme3", "riscure", "Ida pro", "atmega328p", "atmega 328", "reversing", "reverseengineering", "find main", "indeintify uart", "serial", "assembler", "embedded device", "iot"], "title": "Identifying UART and main() in an AVR firmware (ft. Zeta Two) part 1 - rhme2", "description": "Part 1 of reverse engineering another AVR firmware. Zeta Two shows us how to get started with reversing the code for the ATmega328P (AVR) chip. This was a challenge from the rhme2 competition. In this video we identify some I/O functions and the main() function.\nrhme2: https://rhme.riscure.com/2/challenges\nZeta Two: https://twitter.com/zetatwo"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "hprXxJHQVfQ", "thumbnail": "https://i.ytimg.com/vi/hprXxJHQVfQ/hqdefault.jpg", "date": "2018-01-05T20:23:04Z", "views": "31793", "tags": ["regular expression", "regex", "automaton", "finite state automaton", "finite state machine", "debuggex", "debug regex", "bypass regex", "short", "quick tipp", "tech quickie", "regex tutorial", "finite-state", "fsa", "fsm", "input validation"], "title": "Regular expression as Finite-state machine - Short", "description": "A short introduction to regular expressions and how you can visualise them. It's very helpful when auditing input validation.\nDebuggex: https://www.debuggex.com"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "zoyK33-IcD4", "thumbnail": "https://i.ytimg.com/vi/zoyK33-IcD4/hqdefault.jpg", "date": "2017-12-30T00:37:51Z", "views": "27579", "tags": ["Troopers", "troopers conference", "troopers17", "troopers18", "troopers 2017", "troopers 2018", "packetwars", "troopers packetwars", "packet wars", "conference ctf", "ctf", "capture the flag", "iphone", "iphone hacking"], "title": "TROOPERS 17 - PacketWars solved with an iPhone", "description": "We only had a phone and solved challenges with online tools before the teams did it.\nSolved with Online OCR and WebArchive"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Xml4Gx3huag", "thumbnail": "https://i.ytimg.com/vi/Xml4Gx3huag/hqdefault.jpg", "date": "2017-12-22T18:51:17Z", "views": "268480", "tags": ["Google BigQuey", "BigQuery", "Github dataset", "bigquery github", "bitcoin", "wallet leak", "bitcoin wallets", "bitcoins on github", "bitcoin wallet github", "bitcoin wallets leak", "public dataset", "big data", "bigdata", "query", "sql"], "title": "Searching for Bitcoins in GitHub repositories with Google BigQuery", "description": "People leak stuff on github all the time. ssh private keys, national ID scans, ... Maybe we can find some Bitcoin private keys and get rich!?\nGoogle BigQuery: https://cloud.google.com/bigquery/\nGitHub BigQuery Dataset: https://cloud.google.com/bigquery/public-data/github"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "_lO_rwaK_pY", "thumbnail": "https://i.ytimg.com/vi/_lO_rwaK_pY/hqdefault.jpg", "date": "2017-12-15T23:30:48Z", "views": "15368", "tags": ["format4", "exploit-exercises.com", "protostar", "format string exploit", "64bit vs 32bit", "64bit exploit", "32bit exploit", "format string vulnerability", "vuln", "exploit"], "title": "Adapting the 32bit exploit to 64bit for format4 - bin 0x27", "description": "In this video we build an exploit for format4 on a modern Ubuntu. This means that we have to adapt it to 64bit.\nformat4: http://liveoverflow.com/binary_hacking/protostar/format4.html\nprevious episode: https://www.youtube.com/watch?v=t1LH9D5cuK4"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "PNuAzR_ZCbo", "thumbnail": "https://i.ytimg.com/vi/PNuAzR_ZCbo/hqdefault.jpg", "date": "2017-12-09T01:10:32Z", "views": "52797", "tags": ["mobile app security", "appsec", "android", "ios", "android security", "fud", "fear uncertainty doubt", "vincent haupert", "n26", "number26", "banking apps", "mobile banking app", "banking app security", "bank hacking", "dns hijack", "ssl mitm", "tls mitm", "man in the middle"], "title": "Some thoughts on Mobile App Security - is it FUD?", "description": "Is lack of certificate pinning a severe vulnerability? Is this just fearmongering done for fame? Or is it a valid security issue? In this video I lay out my opinion about it and I'm looking for your input.\nlink to reddit thread: https://www.reddit.com/r/LiveOverflow/comments/7ijj3g/some_thoughts_on_mobile_app_security_is_it_fud/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Kc6_PpdbcCw", "thumbnail": "https://i.ytimg.com/vi/Kc6_PpdbcCw/hqdefault.jpg", "date": "2017-12-01T20:45:33Z", "views": "11194", "tags": ["format2", "exploit-exercises", "protostar", "format string vulnerability", "format string", "printf", "sprintf", "%n", "%hn", "modern exploitation", "linux exploit"], "title": "format2 on a modern Ubuntu - bin 0x26", "description": "This level turns out to be fairly easy when compiled on a modern Ubuntu. Finally :D\nformat2: https://exploit.education/protostar/format-two/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "AahpiYxKR2c", "thumbnail": "https://i.ytimg.com/vi/AahpiYxKR2c/hqdefault.jpg", "date": "2017-11-24T20:48:01Z", "views": "14848", "tags": ["format0", "protostar", "exploit-exercises", "exploit-exercises.com/protostar", "stack grooming", "memory grooming", "groom data", "offset", "buffer overflow", "__stack_chk_fail", "stack cookie", "stack canary", "format string", "printf vulnerability", "format string vuln", "formatstring", "%n", "%hn", "%hhn"], "title": "Stack grooming and 100% reliable exploit for format0 - bin 0x25", "description": "Last week I thought this level couldn't be exploited. It turns out there is a way!\nwcbowling's comment: https://www.reddit.com/r/LiveOverflow/comments/7dmrx8/playing_around_with_a_format_string_vulnerability/dq02kos/\nasciinema: https://asciinema.org/a/148133"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "CyazDp-Kkr0", "thumbnail": "https://i.ytimg.com/vi/CyazDp-Kkr0/hqdefault.jpg", "date": "2017-11-17T18:02:14Z", "views": "34841", "tags": ["format string exploit", "format string", "32bit", "64bit", "aslr", "formatstring", "C format string", "sprintf", "printf", "stack", "stack overflow", "buffer overflow", "bufferoverflow", "stackoverflow"], "title": "Playing around with a Format String vulnerability and ASLR. format0 - bin 0x24", "description": "This is about format0 from https://exploit-exercises.com/protostar/ compiled on a modern Ubuntu system.\nformat0: http://liveoverflow.com/binary_hacking/protostar/format0.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "hRei9xXRAGE", "thumbnail": "https://i.ytimg.com/vi/hRei9xXRAGE/hqdefault.jpg", "date": "2017-11-10T19:33:40Z", "views": "8052", "tags": ["ffmpeg", "CVE-2016-10191", "rtmp protocol", "paul cher", "exploit development", "heap overflow", "real-life exploit", "video exploit", "buffer overflow", "GOT", "arbitrary write"], "title": "RTMP Heap Overflow CVE-2016-10191 - Exploiting FFmpeg ft. Paul Cher", "description": "Paul shows us another exploit for FFmpeg. The vulnerability is located in the RTMP protocol. While working with the binary format of the protocol requires a lot of work, the exploit itself is very easy.\nVulnerable Version: https://github.com/FFmpeg/FFmpeg/tree/d903b4e3ad4a81b3dd79f12c2f3b9cb16e511173\nPaul on Twitter: https://twitter.com/__paulch\nLiveOverflow Podcast: http://liveoverflow.libsyn.com"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Lpt7WIqXOgM", "thumbnail": "https://i.ytimg.com/vi/Lpt7WIqXOgM/hqdefault.jpg", "date": "2017-11-04T23:52:13Z", "views": "8352", "tags": ["heap overflow", "heap exploit", "ffmpeg", "paul cher", "real-life exploit", "reallife exploit"], "title": "Analysis of CVE-2016-10190 - Exploiting FFmpeg ft. Paul Cher", "description": "Deeper look at CVE-2016-10190. A Heap overflow caused by a negative HTTP chunksize.\nVulnerable Version: https://github.com/FFmpeg/FFmpeg/tree/d903b4e3ad4a81b3dd79f12c2f3b9cb16e511173\nPaul on Twitter: https://twitter.com/__paulch\nLiveOverflow Podcast: http://liveoverflow.libsyn.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "drPyKgt1MMg", "thumbnail": "https://i.ytimg.com/vi/drPyKgt1MMg/hqdefault.jpg", "date": "2017-10-27T20:29:54Z", "views": "17120", "tags": ["ffmpeg", "fuzzing", "afl", "heap overflow", "asan", "heap exploit", "paul cher", "emil", "phdays", "blackhat", "exploit development", "ffmpeg exploit", "ffmpeg fuzzing", "fuzzing network", "http protocol", "chunksize"], "title": "First look at a simple PoC crash - Exploiting FFmpeg ft. Paul Cher", "description": "This is the first part of exploiting ffmpeg. A huge thank you to Paul Cher for the excellent work on recording the process and sharing his research. I merely edited it together.\nVulnerable Version: https://github.com/FFmpeg/FFmpeg/tree/d903b4e3ad4a81b3dd79f12c2f3b9cb16e511173\nPaul on Twitter: https://twitter.com/__paulch\nLiveOverflow Podcast: http://liveoverflow.libsyn.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "fOgJswt7nAc", "thumbnail": "https://i.ytimg.com/vi/fOgJswt7nAc/hqdefault.jpg", "date": "2017-10-17T20:44:19Z", "views": "91074", "tags": ["KRACK", "key reinstallation attack", "nonce reuse", "WPA2", "wifi cracking", "CCMP", "TKIP", "PTK", "pairwise key", "encryption", "shared key", "wifi password", "decrypt wifi", "decrypt wpa2", "wifi attack", "hack wifi"], "title": "KRACK - Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2", "description": "KRACK: https://www.krackattacks.com\nRead the paper! https://papers.mathyvanhoef.com/ccs2017.pdf\nSome interesting discussion about the formal protocol verification: https://blog.cryptographyengineering.com/2017/10/16/falling-through-the-kracks/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TpdDq56KH1I", "thumbnail": "https://i.ytimg.com/vi/TpdDq56KH1I/hqdefault.jpg", "date": "2017-10-13T19:48:13Z", "views": "80514", "tags": ["z3", "sat solver", "javascript obfuscation", "deobfuscate javascript", "fsec2017", "fsec 2017", "varazdin", "zagreb", "croatia", "infosec", "liveoverflow talk"], "title": "Using z3 to find a password and reverse obfuscated JavaScript - Fsec2017 CTF", "description": "Recently I attended fsec 2017 in croatia. And there was a cool CTF challenge I solved during the conference that I wanted to share.\nscript: https://gist.github.com/LiveOverflow/11bde6352f52be33864f1fd657e7cde1"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "7KS3XHP35QY", "thumbnail": "https://i.ytimg.com/vi/7KS3XHP35QY/hqdefault.jpg", "date": "2017-10-06T18:12:19Z", "views": "10845", "tags": ["AES", "whitebox", "white box", "whitebox crypto", "rhme3", "side-channel", "sidechannel", "cryptography", "breaking AES", "hack AES", "crypto attack", "crypto analysis", "SCA"], "title": "Software Side-Channel attack on AES - White Box Unboxing 4/4 - RHme3 Qualifier", "description": "Solving the AES whitebox crypto challenge without even touching crypto or AES.\nThe tools: https://github.com/SideChannelMarvels"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "k2MPmbchvaM", "thumbnail": "https://i.ytimg.com/vi/k2MPmbchvaM/hqdefault.jpg", "date": "2017-09-22T20:53:06Z", "views": "10635", "tags": ["rhme3", "rhme", "riscure embedded ctf", "riscure", "embedded hardware ctf", "aes encryption", "whitebox", "white box", "crypto", "cryptography", "binary ninja", "gdbinit", "debugtrace"], "title": "TL DR it's AES... - White Box Unboxing 2/4 - RHme3 Qualifier", "description": "Long story short, we reverse more and more of the binary and with some hints we realize, it's AES afterall.\nChallenge: https://github.com/Riscure/Rhme-2017/tree/master/prequalifications/White%20Box%20Unboxing"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0exSe-PAhns", "thumbnail": "https://i.ytimg.com/vi/0exSe-PAhns/hqdefault.jpg", "date": "2017-09-08T18:43:51Z", "views": "9431", "tags": ["fastbins", "dlmalloc", "heap", "malloc", "free", "heap corruption", "UAF", "use-after-free"], "title": "\u2020: Use-after-free with fast bins", "description": "part 1/2: https://www.youtube.com/watch?v=sJPhsE_XeKI\npart 2/2: https://www.youtube.com/watch?v=ANIoQXAoyr0\nreferences:\nhttps://sourceware.org/glibc/wiki/MallocInternals \nhttps://heap-exploitation.dhavalkapil.com/diving_into_glibc_heap/bins_chunks.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ANIoQXAoyr0", "thumbnail": "https://i.ytimg.com/vi/ANIoQXAoyr0/hqdefault.jpg", "date": "2017-09-08T18:39:34Z", "views": "16580", "tags": ["rhme3", "exploitation", "use-after-free", "use after free", "UAF", "GOT", "global offset table", "GOT PLT", "overwrite address", "libc base", "leak address", "arbitrary write"], "title": "Use-after-free and overwrite entry in GOT - Exploitation part 2/2 - RHme3 Qualifier", "description": "Part 2 of solving the exploitation challenge from RHme3. In the last video we found the bug and now we create the exploit.\npart 1: https://www.youtube.com/watch?v=sJPhsE_XeKI"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sJPhsE_XeKI", "thumbnail": "https://i.ytimg.com/vi/sJPhsE_XeKI/hqdefault.jpg", "date": "2017-09-01T18:07:09Z", "views": "18994", "tags": ["gdbinit", "ltrace", "strace", "gdb", "debugging", "exploit", "use-after-free", "use after free", "linux exploitation", "daemon", "deamon", "server", "tcp server", "netcat", "rhme3", "riscure", "hardware ctf", "ctf tutorial", "pwning", "heap exploitation"], "title": "Exploring pwnable with ltrace and gdbinit script - Exploitation part 1/2 - RHme3 Qualifier", "description": "Exploitation challenge from the RHme3 qualification round. We use ltrace to understand what the binary does and then use gdbinit to create custom logging.\nhttps://github.com/Riscure/Rhme-2017"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ylfyezRhA5s", "thumbnail": "https://i.ytimg.com/vi/ylfyezRhA5s/hqdefault.jpg", "date": "2017-08-25T18:20:50Z", "views": "293626", "tags": ["time", "system time", "bypass licensing", "hack mobile game", "time manipulation", "expired certificate", "ntp", "ntp security", "autokey", "network time protocol", "nist", "shared keys", "ntp mitm", "spoof ntp", "local time", "invalid time", "fast forward", "timezones", "development", "programming", "mobile games"], "title": "Don't trust time", "description": "Clickbait title. Just a bit of brain food. Games, licenses and many other things depend on a good time source. But where does the time come from and should you trust it? \n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qRmQAZqVNxA", "thumbnail": "https://i.ytimg.com/vi/qRmQAZqVNxA/hqdefault.jpg", "date": "2017-08-20T23:44:19Z", "views": "5228", "tags": ["rhme3", "riscure embedded ctf", "embedded hardware", "ctf", "riscure", "argus", "embedded hardware ctf", "hardware securty", "hardware hacking"], "title": "Reminder: sign up for RHme3 hardware CTF - loopback 0x04", "description": "Just a quick friendly reminder. The registration closes on August 28 at 12:00 CET.\nRHme3: https://rhme.riscure.com/3/news\nrhme2 Playlist: https://www.youtube.com/playlist?list=PLhixgUqwRTjwNaT40TqIIagv3b4_bfB7M"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qtFA-TLGd3o", "thumbnail": "https://i.ytimg.com/vi/qtFA-TLGd3o/hqdefault.jpg", "date": "2017-08-18T18:03:11Z", "views": "15806", "tags": ["making-of", "making of", "making off", "draw video overlay", "hacking video", "how to hacking video", "behind the scene", "ctf video write-up", "video writeup", "video editing photoshop", "adobe premiere", "wacom", "graphics tablet"], "title": "Making-of LiveOverflow Videos 2017", "description": "A video from behind-the-scenes, showing what goes into making a LiveOverflow episode.\nMaking-of in 2016: https://www.youtube.com/watch?v=sm_cgvnzJ5M"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "PPzRcZLNCPY", "thumbnail": "https://i.ytimg.com/vi/PPzRcZLNCPY/hqdefault.jpg", "date": "2017-08-11T16:44:08Z", "views": "81418", "tags": ["pop-under", "popunder", "popup", "ads", "advertisement", "pop ads", "chrome", "google chrome", "windows", "mac", "59", "60", "61", "62", "version 60", "chromium", "reversing", "reverse engineering", "obfuscated js", "obfuscated javascript", "java script", "performance tab", "performance monitor", "dom logger", "dom log", "alex", "insertscript", "popup blocker", "window.open", "bypass popupblocker", "mousedown", "mouseuip"], "title": "Reverse Engineering PopUnder Trick for Chrome", "description": "Reversing obfuscated JavaScript of a pop-under technique for Google Chrome version 60 on Windows.\nChrome 60 Mac: https://bugs.chromium.org/p/chromium/issues/detail?id=752630\nChrome 60 Windows: https://bugs.chromium.org/p/chromium/issues/detail?id=752824"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8UqHCrGdxOM", "thumbnail": "https://i.ytimg.com/vi/8UqHCrGdxOM/hqdefault.jpg", "date": "2017-08-04T15:08:48Z", "views": "142722", "tags": ["popunder", "pop-under", "Chrome 59", "Google Chrome", "popup", "advertisement", "popup blocker", "ads", "ad network", "popunderjs", "popunderjs.com", "code.ptcong.com", "obfuscated code", "reverse engineering", "javascript", "js", "obfuscated js", "javascript obfuscation", "focus", "blur", "popup tricks", "popunder ads"], "title": "Reverse Engineering Obfuscated JavaScript", "description": "In this video we figure out how to do a PopUnder in Chrome version 59, by using a trick. Hopefully Chrome fixes this, because I resent this kind of advertisement.\nPoC: https://liveoverflow.com/poc/popunder.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "WWJTsKaJT_g", "thumbnail": "https://i.ytimg.com/vi/WWJTsKaJT_g/hqdefault.jpg", "date": "2017-07-28T16:43:01Z", "views": "380983", "tags": ["injection", "vulnerability", "online delivery", "hack delivery", "burger delivery hack", "online order", "sql injection", "easy injection", "cross site scripting", "XSS", "SQLi", "database injection", "vulnerability class", "hacking story", "social engineering", "social engineering story"], "title": "Injection Vulnerabilities - or: How I got a free Burger", "description": "One night I ordered food and I accidentally injected a Burger into the order. The delivery guy confused a comment as another item on the order list and made it. Even though no price was attached to it.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KGzHcqJV-QM", "thumbnail": "https://i.ytimg.com/vi/KGzHcqJV-QM/hqdefault.jpg", "date": "2017-07-21T16:17:44Z", "views": "28046", "tags": ["stack cookie", "stack canary", "stack guard", "bruteforce", "brute force", "brute forcing", "C program", "forkpty", "fork", "pty", "pseudoterminal", "pipe", "pipes", "exec", "execv", "deafeat cookie", "stack buffer overflow", "buffer overflow", "exploit-exercises", "exploit-exercises.com", "protostar", "32bit", "64bit", "stack0"], "title": "Bruteforce 32bit Stack Cookie. stack0: part 3 - bin 0x23", "description": "Bruteforcing stack canary, stack guard, stack cookie with a C program.\nbrute_cookie.c: https://github.com/LiveOverflow/liveoverflow_youtube/blob/master/0x21_0x23_modern_stack0/brute_cookie.c\nDigitalOcean (referral):* https://m.do.co/c/826f195e2288"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "MMm0I2Dj51A", "thumbnail": "https://i.ytimg.com/vi/MMm0I2Dj51A/hqdefault.jpg", "date": "2017-07-14T13:45:32Z", "views": "31031", "tags": ["stack0", "protostar", "modern exploitation", "modern linux", "modern buffer overflow", "buffer overflow", "stack cookie", "gdb", "peda", "stack canary", "stack guard", "overflow esp", "bypass aslr", "stack aslr", "exploit mitigation", "control return pointer"], "title": "Identifying another exploit mitigation and find bypass. stack0: part 2 - bin 0x22", "description": "In part 2 we have a closer look at stack0 on a modern system. We are trying to plan an exploit that works in case we can guess the stack cookie. We have to be a bit creative here.\nstack0: https://liveoverflow.com/binary_hacking/protostar/stack0.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "4HxUmbOcN6Y", "thumbnail": "https://i.ytimg.com/vi/4HxUmbOcN6Y/hqdefault.jpg", "date": "2017-07-07T16:12:09Z", "views": "92180", "tags": ["stack0", "protostar", "exploit-exercises", "exploit exercises", "exploit-exercises.com", "modern exploitation", "stack cookie", "stack canary", "stack guard", "segment register", "buffer overflow", "exploit mitigation", "bypass cookie", "cookies", "gdb", "peda", "digitalocean", "leak stack cookie", "32bit", "64bit", "bruteforce stack cookie"], "title": "Buffer overflow on a modern system impossible? stack0: part 1 - bin 0x21", "description": "We have a look at stack level 0 from exploit-exercises.com/Protostar and compile it on a current Ubuntu, to see if it's still exploitable.\nstack0: https://liveoverflow.com/binary_hacking/protostar/stack0.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "za_9hrq-ZuA", "thumbnail": "https://i.ytimg.com/vi/za_9hrq-ZuA/hqdefault.jpg", "date": "2017-06-30T16:08:13Z", "views": "74310", "tags": ["gql", "google query language", "gql injection", "binary search", "binary search algorithm", "blind gql", "blind sql", "sql injection", "google graph language", "google ctf", "googlectf", "gee clue elle", "a7", "OWASP A7", "owasp", "a7 controversy"], "title": "Blind GQL injection and optimised binary search - A7 ~ Gee cue elle (misc) Google CTF 2017", "description": "This was considered a hard challenge. After finding and analysing the source code we found a GQL injection. Unfortuantely there is a system in place that will ban you for too many requests. So we use a modified binary search algorithm to finish in time.\ngql.py: https://gist.github.com/LiveOverflow/16f0e4ff0ca9b0b993c25e14759de731"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0TPXvpaiYWc", "thumbnail": "https://i.ytimg.com/vi/0TPXvpaiYWc/hqdefault.jpg", "date": "2017-06-23T15:51:20Z", "views": "69957", "tags": ["ctf", "google ctf", "file inclusion", "LFI", "local file inclusion", "vulnerability", "OWASP LFI", "mindreader", "misc challenge", "ctf challenge", "writeup", "write-up"], "title": "Failing easy local file inclusion challenge - mindreader (misc) Google CTF 2017", "description": "At first I was not able to solve the mindreader challenge and then I got spoiled. I have a critical look at my approach and figured out two major mistakes I made.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6Pf3pY3GxBM", "thumbnail": "https://i.ytimg.com/vi/6Pf3pY3GxBM/hqdefault.jpg", "date": "2017-06-16T21:03:55Z", "views": "98508", "tags": ["rhme2", "rhme", "riscure", "embedded hardware", "hardware ctf", "fault injection", "glitch attach", "hardware glitch", "power glitch", "vcc glitch", "voltage glitch", "faultinjection", "hardware fi", "fpga tutorial", "verilog tutorial", "fpga and arduino"], "title": "Hardware Power Glitch Attack (Fault Injection) - rhme2 Fiesta (FI 100)", "description": "We perform a fault injection on an arduino board to break out of a endless loop. We drop the power for a very short amount of time so the microprocessor calculates something wrong. Skip to 0:56 if you don't want to see my cringy acting.\nThe full verilog code: https://gist.github.com/LiveOverflow/cad0e905691ab5a8a2474d483a604d67"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RGknqvbhFCY", "thumbnail": "https://i.ytimg.com/vi/RGknqvbhFCY/hqdefault.jpg", "date": "2017-06-09T16:21:19Z", "views": "48520", "tags": ["2fa", "prng", "pseudo random", "entropy", "arduino random", "seed", "insecure seed", "defeat random seed", "mersenne twister", "untwister", "recover PRNG", "readAnalog", "bad randomness", "rhme2", "embedded ctf", "embedded hardware", "two factor authentication"], "title": "Defeat 2FA token because of bad randomness - rhme2 Twistword (Misc 400)", "description": "Generating random numbers on computers is not easy. And while the intended solution was really hard, the challenge had a problem with the random number generation, which allowed me to solve it.\nClarification from Andres Moreno (riscure) on the challenge:\n\"The \"official\" challenge solution involved reading the tiny Mersenne twister (tinyMT) paper, writing some equations, and using a solver. The tin"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "FktI4qSjzaE", "thumbnail": "https://i.ytimg.com/vi/FktI4qSjzaE/hqdefault.jpg", "date": "2017-06-02T17:19:54Z", "views": "102517", "tags": ["chipwhisperer", "CW", "newae", "DPA tutorial", "CPA tutorial", "differential power analysis", "correlation power analysis", "side channel analysis", "sca", "DPA", "power analysis", "side-channel", "rigol probe", "Chip whisperer", "tutorial", "breaking AES", "breaking RSA", "crypto attack", "cryptography", "hardware aes"], "title": "Breaking AES with ChipWhisperer - Piece of scake (Side Channel Analysis 100)", "description": "Terrible DPA explanation and sharing my experience solving the side channel analysis challenge \"piece of scake\" from the rhme2 CTF.\nA real DPA tutorial by Colin O'Flynn: https://www.youtube.com/watch?v=OlX-p4AGhWs\nThe ChipWhisperer AES tutorial: http://www.newae.com/sidechannel/cwdocs/tutorial.html\nChipWhsiperer: http://newae.com/tools/chipwhisperer/\nThe DPA paper: https://www.rambus.com/introduct"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bFfyROX7V0s", "thumbnail": "https://i.ytimg.com/vi/bFfyROX7V0s/hqdefault.jpg", "date": "2017-05-26T18:37:52Z", "views": "45203", "tags": ["power analysis", "side-channel", "sidechannel", "side channel", "hardware attack", "hardware pentest", "pentesting", "arduino nano", "sca", "simple sca", "simple power analysis", "shunt resistor", "lift pin", "desolder pin", "desolder chip", "invasive attack", "non-invasive", "hardware", "hardware security", "break rsa", "rsa power analysis", "oscilloscope", "rigol", "ground loop", "groundloop", "gound loops", "short circuit", "magic smoke", "blow up diode"], "title": "RSA Power Analysis Side-Channel Attack - rhme2", "description": "Preparing an arduino nano board to perform a power analysis side channel attack and explaining how that can be used to break RSA. Also proof I can't count.\nRSA video: https://www.youtube.com/watch?v=sYCzu04ftaY\nrhme2 by riscure: http://rhme.riscure.com/home\nOscilloscope: Rigol DS2072A\nSoldering Station: Weller WD1"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "-UcCMjQab4w", "thumbnail": "https://i.ytimg.com/vi/-UcCMjQab4w/hqdefault.jpg", "date": "2017-05-19T23:10:07Z", "views": "67393", "tags": ["playstation 3", "ps3", "ecdsa", "Elliptic Curve", "Elliptic Curve Crypto", "Elliptic Curve Algorithm", "ECDSA", "192r1", "p-192r1", "curve point", "reversing ecdsa", "recover private key", "hacking ecdsa", "ecc", "breaking crypto", "advanced crypto", "cryptography", "crypto algorithm", "math"], "title": "Breaking ECDSA (Elliptic Curve Cryptography) - rhme2 Secure Filesystem v1.92r1 (crypto 150)", "description": "We are going to recover a ECDSA private key from bad signatures. Same issue the Playstation 3 had that allowed it to be hacked.\n\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KhyudJNNeow", "thumbnail": "https://i.ytimg.com/vi/KhyudJNNeow/hqdefault.jpg", "date": "2017-05-12T17:00:42Z", "views": "46258", "tags": ["riscure", "rhme2", "rhme", "embedded hardware ctf", "whack the mole", "whac the mole", "reversing protocol", "arduino reverse engineering", "reverse engineer protocol", "arduino protocol", "rigol oscilloscope", "rigol osci", "count peaks", "arduino peak detection"], "title": "Reversing an unkown digital protocol with an Arduino - rhme2 Whac the mole (misc 200)", "description": "Whack the mole was a fun little challenge that was not so much about security, but to figure out how the game works, and then play it and win.\nFiles for the challenge: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "SstD1O4_kwc", "thumbnail": "https://i.ytimg.com/vi/SstD1O4_kwc/hqdefault.jpg", "date": "2017-05-05T18:37:30Z", "views": "24971", "tags": ["buffer overflow", "control address", "overflow buffer", "avr buffer overflow", "arduino buffer overflow", "rhme2", "step by step", "exploit buffer overflow", "bof tutorial", "exploitation theory", "mind map", "what hacker think", "think like hacker", "white board exploit", "exploit planning", "hacking plan"], "title": "Blind Buffer Overflow exploitation to leak secret data - rhme2 Animals (pwn 200)", "description": "We overflow a buffer and slowly figure out that we can control memory addresses to leak other data.\nThe challenge files: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "53zkBvL4ZB4", "thumbnail": "https://i.ytimg.com/vi/53zkBvL4ZB4/hqdefault.jpg", "date": "2017-05-02T11:16:17Z", "views": "194939", "tags": ["stackoverflow", "stackeschange", "how to ask", "technical question", "programmer question", "hacking question", "stupid question", "dumb question", "ask me", "ama", "amaa"], "title": "How (not) to ask a technical question", "description": "I try to answer every question I get. Unfortunately a lot of them are extremely low effort and waste my time. I love to help, but please put some work into your question.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "fRgNtGXDMlY", "thumbnail": "https://i.ytimg.com/vi/fRgNtGXDMlY/hqdefault.jpg", "date": "2017-04-28T14:50:45Z", "views": "17119", "tags": ["rhme2", "rhme", "riscure", "embedded hardware ctf", "hacking embedded devices", "hacking iot", "exploiting avr", "format string exploit", "%s", "%x", "hack arduino", "hacking avr", "frmt string", "printf exploit", "printf vulnerability", "format string security", "avr exploit", "leak memory", "leak binary", "leak ram", "exploit leak memory", "leak data", "exploit leak data", "capture the flag"], "title": "Format string exploit on an arduino - rhme2 Casino (pwn 150)", "description": "Solving the casino challenge of rhme2 abusing a format string vulnerability.\nchallenge sources: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sYCzu04ftaY", "thumbnail": "https://i.ytimg.com/vi/sYCzu04ftaY/hqdefault.jpg", "date": "2017-04-21T15:15:53Z", "views": "106835", "tags": ["crypto", "cryptography", "RSA", "breaking RSA", "breaking signature", "forge rsa signature", "recover private key", "hack private key", "rsa private key", "rsa public key", "public private key", "asymmetric cryptography", "how does rsa work", "how to break rsa", "how to encrypt rsa", "how to sign rsa", "rsa mistakes", "rsa security", "greatest common divisor", "gcd", "euclids algorithm", "gcd rsa", "break cipher", "rsa hacking"], "title": "Recover RSA private key from public keys - rhme2 Key Server (crypto 200)", "description": "Using the greatest common divisor (GCD) to factorize the public modulo into the secret primes, so we can forge a RSA signature.\nSource for the rhme2 challenges: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "01EX0mjya5A", "thumbnail": "https://i.ytimg.com/vi/01EX0mjya5A/hqdefault.jpg", "date": "2017-04-14T14:49:26Z", "views": "18208", "tags": ["stack cookie", "buffer overflow mitigation", "rhme2", "rhme", "riscure", "embedded hardware ctf", "IoT hacking", "pyserial", "python serial", "stack voerflow", "buffer overflow", "embedded device", "hacking device", "hacking IoT", "hack IoT", "bruteforce", "brute force stack cookie", "what is a stack cookie?", "smash the stack"], "title": "Defeat a stack cookie with bruteforce - rhme2 Photo manager (pwn 100)", "description": "Solving \"Photo Manager\" from the riscure embedded hardware CTF by bypass a buffer overflow mitigation through bruteforcing a stack cookie.\nThe challenges for your own arduino: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "RcBnhbOqDps", "thumbnail": "https://i.ytimg.com/vi/RcBnhbOqDps/hqdefault.jpg", "date": "2017-04-07T15:51:59Z", "views": "56020", "tags": ["electronic lock", "lock security", "attacking lock", "arduino lock", "pin entry", "hack pin", "lock vulnerability", "hardware attack", "hardware hacking", "hack electronic lock", "hack pin pad", "hack door lock", "arduino hack"], "title": "Attacking an Electronic Combination Lock (ft. Electronics Idiot)", "description": "A video collaboration with Electronics Idiot to show how an electronic lock could be implemented and how it can be attacked.\nElectronics Idiot channel: https://www.youtube.com/channel/UCbczzZetyWR3-Uj5o-YYFMg\nHow to build this lock: https://www.youtube.com/watch?v=7HeT4wvgz7w"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2LOtBpA7W_M", "thumbnail": "https://i.ytimg.com/vi/2LOtBpA7W_M/hqdefault.jpg", "date": "2017-03-31T19:13:06Z", "views": "125113", "tags": ["pen-tester", "pentester", "pen tester", "pen testing", "pentesting", "job", "penetration tester", "penspinning", "pen spinning", "career", "job advice", "study pen testing", "pen tricks", "penetrationtesting", "penetrationtester", "penetration testing"], "title": "A day in the life of a pen-tester", "description": "This is a typical day as a pen-tester. As a professional pen-tester I wanted to share how this work really looks like and what kind of skills are required.\nIn memory of bonkura \u2764\ufe0f\n(1st April) Pen tester. Get it?"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "zk3JdMOQPc8", "thumbnail": "https://i.ytimg.com/vi/zk3JdMOQPc8/hqdefault.jpg", "date": "2017-03-24T18:01:39Z", "views": "59131", "tags": ["avr", "reverse engineering", "rhme", "rhme2", "riscure", "embedded hardware", "ctf", "capture the flag", "hacking ctf", "security ctf", "reversing", "arduino", "arduino nano", "reversing arduino", "reverse engineering arduino", "serial", "uart"], "title": "Solving AVR reverse engineering challenge with radare2 - rhme2 Jumpy (reversing 100)", "description": "We are using radare2 together with avr-gdb and simavr to reverse engineer the challenge \"Jumpy\" which implemets a password checking algorithm.\n(?s)lds r24[a-Z, 0-9 \\.$^]+\\n[a-Z, 0-9 \\.$^\u2502]+\\n[a-Z, 0-9 \\.$^\u2502]+\\n[a-Z, 0-9 \\.$^\u2502]+lds r24"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "D0VKuZuuvW8", "thumbnail": "https://i.ytimg.com/vi/D0VKuZuuvW8/hqdefault.jpg", "date": "2017-03-17T23:59:21Z", "views": "43165", "tags": ["ATmega328p", "ATmega328", "ATmega32", "memory map", "memory mapped I/O", "USART", "UART", "serial", "SRAM", "UDR0", "memory mapping", "harvard architecture", "von neumann architecture", "harvard vs von neumann", "avr", "risc", "cisc", "risc vs cisc", "atmel mega", "rhme", "rhme2", "reverse engineering", "reversing", "IoT", "hacking IoT", "reverse engineering IoT", "embedded device", "hack embedded device", "hack IoT", "how to reverse engineer", "arduino nano"], "title": "Start reverse engineering AVR - Memory Map and I/O Registers - rhme2 Reverse Engineering", "description": "We are looking at the datasheet of the ATmega328p and learn about harvard architecture and how serial communication on an assembler level looks like.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "xkdPjbaLngE", "thumbnail": "https://i.ytimg.com/vi/xkdPjbaLngE/hqdefault.jpg", "date": "2017-03-13T00:09:09Z", "views": "310978", "tags": ["CVE-2016-4657", "Nintendo switch", "iOS", "jailbreak", "webkit bug", "webkit exploit", "webkit jailbreak", "pegasus", "trident", "NSO group", "qwertyoruiop", "qwertyoruiopz", "switchdev", "homebrew", "chrome exploit", "safari exploit", "modern exploitation", "javascript explot", "jbme", "jailbreak me", "9.3.X", "jailbreak 9.3", "iOS 9.3", "switch 2.0", "arbitrary read", "rwx", "rce", "hacking switch", "switch hacked", "exploit", "heap corruption"], "title": "What do Nintendo Switch and iOS 9.3 have in common? CVE-2016-4657 walk-through", "description": "Using the webkit bug CVE-2016-4657 to start hacking the Nintedno Switch. I have taken the first part from qwerty's iOS 9.3 jailbreak and adapt it to the Nintendo Switch. We craft a Uint32Array to get a arbitrary read/write primitive.\nDemo at 16:19"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6QQ4kgDWQ9w", "thumbnail": "https://i.ytimg.com/vi/6QQ4kgDWQ9w/hqdefault.jpg", "date": "2017-03-10T20:44:24Z", "views": "33429", "tags": ["sha1", "sha", "length extension", "hash length extension", "hashpump", "hashpumpy", "python hashpump", "secure filesystem", "rhme2", "riscure", "rhme", "embedded hardware", "embedded hardware hacking", "hardware ctf", "IoT hacking"], "title": "SHA1 length extension attack on the Secure Filesystem - rhme2 Secure Filesystem (crypto 100)", "description": "The first challenge I solved for the embedded hardware CTF by riscure. It implements a Secure Filesystem which prevents you from readeing files without knowing the correct token for a file.\nLoad the challenge on your own board: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TM-cuV9Nd1E", "thumbnail": "https://i.ytimg.com/vi/TM-cuV9Nd1E/hqdefault.jpg", "date": "2017-03-05T11:13:08Z", "views": "31654", "tags": ["uart", "serial", "usb to serial", "saleae logic", "logic analyzer", "digital logic analyser", "logic analyser", "serial decoding", "decode uart", "embedded device hacking", "riscure ctf", "rhme", "rhme2", "embedded hardware ctf", "hardware capture-the-flag", "reverse engineering hardware", "reverse engineer serial", "find serial", "serial console", "find uart", "connect to serial"], "title": "Using UART / Serial to interact with an embedded device - rhme2 Setup", "description": "Explaining what serial is, debugging it with a Saleae Logic Analyzer and figuring out how to talk to the board.\nFiles for the challenges: https://github.com/Riscure/Rhme-2016"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "FI4serDzE4w", "thumbnail": "https://i.ytimg.com/vi/FI4serDzE4w/hqdefault.jpg", "date": "2017-03-03T17:00:52Z", "views": "5889", "tags": ["loopback", "riscure", "embedded ahrdware ctf", "hacking iOT", "iot ctf", "hacking avr", "hardware hacking", "troopers", "troopers conference", "troopers17", "rhme", "rhme2", "riscure hardware"], "title": "riscure embedded hardware CTF is over - loopback 0x03", "description": "Challenge files: https://github.com/Riscure/Rhme-2016\n\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "akCce7vSSfw", "thumbnail": "https://i.ytimg.com/vi/akCce7vSSfw/hqdefault.jpg", "date": "2017-02-25T13:09:54Z", "views": "49217", "tags": ["binary exploitation", "developing intuition", "theoretical hacking", "theory of exploitation"], "title": "Developing an intuition for binary exploitation - bin 0x20", "description": "Just some thoughts on binary exploitation. Not sure if it makes sense :D\njoin the discussion: https://www.reddit.com/r/LiveOverflow/comments/5w400v/developing_an_intuition_for_binary_exploitation/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "YbFwKQGJPhw", "thumbnail": "https://i.ytimg.com/vi/YbFwKQGJPhw/hqdefault.jpg", "date": "2017-02-17T18:20:24Z", "views": "28982", "tags": ["i.onik", "wifi-cloud", "wifi cloud hub", "wifi router", "iot hacking", "how to hack iot", "cross site request forgery", "default root password", "wifi backdoor", "device backdoor", "hacking wifi router"], "title": "Showing various security issue of the Wifi-Cloud Hub", "description": "Showing off some examples and different ways this device can be hacked. Including a \"backdoor\".\n@dissect0r: https://twitter.com/dissect0r/status/822073775822950401"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6D1LnMj0Yt0", "thumbnail": "https://i.ytimg.com/vi/6D1LnMj0Yt0/hqdefault.jpg", "date": "2017-02-03T16:47:59Z", "views": "113036", "tags": ["bash injection", "33c3", "33c3ctf", "33c3 ctf", "video writeup", "security ctf", "capture the flag", "hacking ctf", "bash eval", "eval injection", "eval without letters", "eval without numbers", "only special chars", "misc", "towers of hanoi", "hanoi towers", "special hanoi version", "solving hanoi", "bash script injection", "bash script eval", "bash function", "bash shell", "shell injection"], "title": "Bash injection without letters or numbers - 33c3ctf hohoho (misc 350)", "description": "This challange was an amazing team effort. There were multiple steps necessary for the solution and different people contributed. The final big challenge was a bash eval injection, but without using any letters or numbers.\n\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "PKbxK2JH23Y", "thumbnail": "https://i.ytimg.com/vi/PKbxK2JH23Y/hqdefault.jpg", "date": "2017-01-20T19:15:09Z", "views": "35933", "tags": ["SSRF", "php include", "php nullbyte", "bypass ip check", "ssrf localhost", "leak php code", "php exploit", "curl dns rebind", "dns rebinding", "curl setopt", "php curl exploit", "php base64 filter", "php wrapper exploit", "list0r", "33c3", "33c3ctf", "33c3 ctf", "web challenge", "cpature the flag", "web hacking", "website hacking", "list web app", "web app hacking", "web app php exploit", "hack php", "server side", "request forgery", "dnsrebind"], "title": "PHP include and bypass SSRF protection with two DNS A records - 33c3ctf list0r (web 400)", "description": "Easy solution of list0r web challenge from the 33c3ctf thanks to unintended bugs in the challenge.\nJoin the discussion: https://www.reddit.com/r/LiveOverflow/comments/5p5yci/php_include_and_bypass_ssrf_protection_with_two/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "XuzuFUGuQv0", "thumbnail": "https://i.ytimg.com/vi/XuzuFUGuQv0/hqdefault.jpg", "date": "2017-01-13T13:28:10Z", "views": "45810", "tags": ["format string", "formatstring", "format exploit", "format vulnerability", "format string exploit", "leak libc", "leak address", "dump arbitrary memory", "find libc", "libc database", "niklasb", "eat sleep pwn repeat", "33c3", "33c3ctf", "ESPR", "pwnable challenge", "exploitation challenge", "remote code execution", "dump remote binary", "video writeup", "ctf write-up", "capture-the-flag", "security ctf", "33c3 ctf"], "title": "Format String to dump binary and gain RCE - 33c3ctf ESPR (pwn 150)", "description": "Solving Eat Sleep Pwn Repeat (ESPR - 150 pwn) challenge from the 33c3ctf. Dumping the binary through a format string vulnerability, leaking libc addresses in the global offset table, finding the matching libc and overwriting printf@got with system() to get RCE.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "iKXd9zW1OuI", "thumbnail": "https://i.ytimg.com/vi/iKXd9zW1OuI/hqdefault.jpg", "date": "2017-01-06T14:44:26Z", "views": "145749", "tags": ["LANGSEC", "exploitation", "halvar flake", "0day", "weird machines", "how to become penetration tester", "penetration testing", "pentesting", "science of insecurity", "define hacking", "what is hacking", "principles of hacking", "concepts of hacking", "what is an exploit"], "title": "How to learn hacking? ft. Rubber Ducky", "description": "A more philosophical video about what it means to learn about hacking and exploitation. Using the Rubber Ducky as a scapegoat to make a point against learning tools vs. principals.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Lj2YRCXCBv8", "thumbnail": "https://i.ytimg.com/vi/Lj2YRCXCBv8/hqdefault.jpg", "date": "2016-12-30T18:13:18Z", "views": "45204", "tags": ["software exploitation", "rooting server", "root exploit", "exploiting dirty cow", "gain root access", "hacking pwnerrank.com", "pwnerrank", "pwner rank", "root", "dirty cow", "dirty.cow", "dirtycow", "CVE-2016-5195", "privilege escalation", "capture the flag", "ctf", "dirtyc0w", "dirtycow example", "root exploit example", "linux root", "hacking root account", "hack"], "title": "Rooting a CTF server to get all the flags with Dirty COW - CVE-2016-5195", "description": "Had a little bit of fun using dirtycow local root exploit on a server from pwnerrank.com.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "xCEJfTfhtQc", "thumbnail": "https://i.ytimg.com/vi/xCEJfTfhtQc/hqdefault.jpg", "date": "2016-12-28T01:20:52Z", "views": "29397", "tags": ["channel trailer", "intro", "introduction", "how to start hacking"], "title": "LiveOverflow Channel Trailer", "description": "Short overview on what kind of content you can find here.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "u_U6F2Kkbb0", "thumbnail": "https://i.ytimg.com/vi/u_U6F2Kkbb0/hqdefault.jpg", "date": "2016-12-23T20:29:00Z", "views": "45677", "tags": ["rhme2", "rhme", "riscure", "embedded hardware", "CTF", "hardware CTF", "hardware capture the flag", "capture-the-flag", "avrdude osx", "arduino osx", "arduino driver", "serial driver", "dev tty", "soldering pins", "solder arduino"], "title": "Riscure Embedded Hardware CTF setup and introduction - rhme2 Soldering", "description": "Soldering the arduino board, installing drivers for OSX and flash challenges with avrdude. The CTF will run until the end of February, the other videos will come after that.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "MBz5C9Wa6KM", "thumbnail": "https://i.ytimg.com/vi/MBz5C9Wa6KM/hqdefault.jpg", "date": "2016-12-16T16:01:53Z", "views": "21592", "tags": ["software exploitation", "format string", "syslog exploit", "syslog", "/var/log/syslog", "format string exploit", "printf exploit", "format string vulnerability", "remote printf exploit", "remote network exploit", "exploit written in python", "hacking with python"], "title": "Remote format string exploit in syslog() - bin 0x1E", "description": "Solving final1 from exploit.education with a format string vulnerability because of syslog().\nfinal1: https://exploit.education/protostar/final-one/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "_shKdU7mGxs", "thumbnail": "https://i.ytimg.com/vi/_shKdU7mGxs/hqdefault.jpg", "date": "2016-12-09T17:01:43Z", "views": "29277", "tags": ["software exploitation", "segfault", "sigint", "sigill", "sigsegv", "core dumps", "core_pattern", "core dumped", "gdb core dumps", "how to analyse a core dump", "buffer overflow core dump", "linux signals", "remote exploit", "exploit-exercises.com", "protostar final0", "exploit exercises"], "title": "Linux signals and core dumps - bin 0x1C", "description": "Exploring exploit-exercises protostar final0 level, triggering a buffer overflow and analysing core dumps generated by a segfault signal.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "26zpUDFw5JM", "thumbnail": "https://i.ytimg.com/vi/26zpUDFw5JM/hqdefault.jpg", "date": "2016-12-06T18:16:26Z", "views": "3921", "tags": ["Q&A", "10k subscribers", "10000 subscribers", "milestone", "celebration", "vlog"], "title": "Celebrating 10.000 subscribers with a small Q&A - loopback 0x02", "description": "Thank you all for your support!\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "d6BU8DWxb3c", "thumbnail": "https://i.ytimg.com/vi/d6BU8DWxb3c/hqdefault.jpg", "date": "2016-12-02T16:02:23Z", "views": "23822", "tags": ["software exploitation", "import socket", "python sockets", "socket programming python", "python tcp socket tutorial", "python networking tutorial", "python tcp", "python network client", "socket module", "how to write a tcp client in python", "network programming tutorial", "network security", "integer overflow", "integer overflows", "exploit exercises"], "title": "Socket programming in python and Integer Overflow - bin 0x1B", "description": "Solving network level 1 with socket programming in python.\nprotostar/net1: https://exploit.education/protostar/net-one/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0EHo0HsTKJw", "thumbnail": "https://i.ytimg.com/vi/0EHo0HsTKJw/hqdefault.jpg", "date": "2016-11-29T16:10:05Z", "views": "32356", "tags": ["software exploitation", "TCP/IP", "TCP protocol", "netcat tcp", "socket wireshark", "loopback", "localhost", "ethernet layer", "TCP layer", "IP layer", "networking in c tutorial", "c networking tutorial", "linux networking", "linux tcp socket", "ip protocol", "network basics", "computer network basics", "netcat and wireshark"], "title": "TCP Protocol introduction - bin 0x1A", "description": "Before we continue with the network challenges, let's first introduce the TCP protocol properly. Using netcat and wireshark to understand it.\nHTTP Protocol episode: https://www.youtube.com/watch?v=C_gZb-rNcVQ"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "2CL-AAcgyuo", "thumbnail": "https://i.ytimg.com/vi/2CL-AAcgyuo/hqdefault.jpg", "date": "2016-11-25T17:07:22Z", "views": "27065", "tags": ["software exploitation", "exploit-exercises.com", "exploit exercises", "protostar", "net0", "networking", "socket in c", "network hacking", "netstat", "netcat", "network challenge", "network ctf", "ctf challenge", "network security", "daemon process", "oprhan process", "parent child process", "clone process"], "title": "First steps into networking with net0 from exploit.education protostar - bin 0x19", "description": "We will learn how to daemonize a process and see how a server handles connections\nnet0: https://exploit.education/protostar/net-zero/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sMla6_4Z-CQ", "thumbnail": "https://i.ytimg.com/vi/sMla6_4Z-CQ/hqdefault.jpg", "date": "2016-11-22T16:18:22Z", "views": "28315", "tags": ["software exploitation", "Brucon CTF", "hashpump", "hash length extension", "md5 hack", "access.log", "blind sql injection log", "bsqli", "Brucon", "BRUCON 2016", "Brucon 0x8", "LiveCTF", "live CTF", "cryptography attack", "crypto workshop"], "title": "MD5 Length Extension and Blind SQL Injection - BruCON CTF part 3", "description": "Last video from the BRUCON CTF 2016. Covering \"Breaking the crypto\", \"Log Analysis BSQLi\" and \"Crypto\". Topics covered: hash length extension attack, hashpump, blind sql injection, webserver access.log\nFilippo: https://twitter.com/FiloSottile\ncryptography.training: https://github.com/cryptography-training"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "sm_cgvnzJ5M", "thumbnail": "https://i.ytimg.com/vi/sm_cgvnzJ5M/hqdefault.jpg", "date": "2016-11-18T18:35:39Z", "views": "9918", "tags": ["software exploitation", "how to create videos", "write video script", "video editing", "graphics tablet video editing", "making of liveoverflow", "hacking videos", "making-of liveoverflow"], "title": "Making-of LiveOverflow videos", "description": "A video from behind-the-scenes, showing what goes into making a LiveOverflow episode.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "HWhzH--89UQ", "thumbnail": "https://i.ytimg.com/vi/HWhzH--89UQ/hqdefault.jpg", "date": "2016-11-15T16:57:39Z", "views": "31894", "tags": ["software exploitation", "dlmalloc unlink", "once upon a free", "malloc exploit", "unlink macro", "unlink exploit", "how to unlink exploit", "heap overflow tutorial", "how to write an exploit", "how to create an exploit", "what is a heap exploit", "heap metadata exploit", "\u00b4smash the heap for fun and profit"], "title": "The Heap: dlmalloc unlink() exploit - bin 0x18", "description": "An introduction on how to abuse Heap metadata to redirect program execution. dlmalloc unlink() heap exploit to redirect code execution.\nheap3: https://exploit.education/protostar/heap-three/\nOnce upon a free() - phrack: http://phrack.org/issues/57/9.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3EB4g4_6ZjI", "thumbnail": "https://i.ytimg.com/vi/3EB4g4_6ZjI/hqdefault.jpg", "date": "2016-11-11T15:52:20Z", "views": "13514", "tags": ["software exploitation", "BruCON", "BruCon CTF", "brucon 0x08", "brucon 0x8", "individual ctf", "security ctf", "ctf write-up", "ctf walkthrough", "int80", "int0x80", "dualcore"], "title": "int0x80 from DualCore lent me his lockpicking set and I'm a horse - BruCON CTF part 2", "description": "Failed challenge that exposed real security issues with an anonymous mail service, and solving \"Lockpicking\" and \"Restricted Access\" from the BruCON CTF 2016.\nDualCore - All the Things: https://www.youtube.com/watch?v=FoUWHfh733Y"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "bqaZBeZ4zf0", "thumbnail": "https://i.ytimg.com/vi/bqaZBeZ4zf0/hqdefault.jpg", "date": "2016-11-08T16:31:44Z", "views": "28061", "tags": ["software exploitation", "BruCON 2016", "BruCON 0x08", "BruCON 0x8", "BruCON CTF", "BruCON capture the flag", "ctf.brucon.org"], "title": "Simple reversing challenge and gaming the system - BruCON CTF part 1", "description": "BruCON CTF video write-up: Not all packets, Reverse Beer, Virtual Lockpick\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "gL45bjQvZSU", "thumbnail": "https://i.ytimg.com/vi/gL45bjQvZSU/hqdefault.jpg", "date": "2016-11-04T17:26:38Z", "views": "53835", "tags": ["software exploitation", "dlmalloc exploit", "unlink exploit", "once upon a free", "malloc exploit", "heap exploitation", "dlmalloc tutorial", "unlink macro"], "title": "The Heap: Once upon a free() - bin 0x17", "description": "An introduction on how to abuse Heap metadata to redirect program execution.\nheap3: https://exploit.education/protostar/heap-three/\nOnce upon a free() - phrack: http://phrack.org/issues/57/9.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Yfsmc0b8o78", "thumbnail": "https://i.ytimg.com/vi/Yfsmc0b8o78/hqdefault.jpg", "date": "2016-11-01T16:37:53Z", "views": "37852", "tags": ["how to hack", "confused deputy", "norman hardy", "what is the confused deputy", "or why capabilities might have been invented", "browser security", "cross site request forgery", "hacker mindset", "hacker story", "the confused deputy"], "title": "The Browser is a very Confused Deputy - web 0x05", "description": "Reading from the famous paper \"The Confused Deputy\" by Norm Hardy and make a connection to modern web vulnerabilities like XSS and CSRF.\nThe Confused Deputy: https://www.cis.upenn.edu/~KeyKOS/ConfusedDeputy.html"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ZHghwsTRyzQ", "thumbnail": "https://i.ytimg.com/vi/ZHghwsTRyzQ/hqdefault.jpg", "date": "2016-10-28T16:39:11Z", "views": "79039", "tags": ["infosec", "use-after-free", "use after free", "heap exploit", "heap overflow", "double free", "how does a heap exploit work", "what is use-after-free", "what is use after free", "use-after-free vulnerability", "exploit use-after-free"], "title": "The Heap: How do use-after-free exploits work? - bin 0x16", "description": "Solving heap2 from exploit.education to learn about heap use-after-free (UAF) exploits \nheap2: https://exploit.education/protostar/heap-two/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8ev9ZX9J45A", "thumbnail": "https://i.ytimg.com/vi/8ev9ZX9J45A/hqdefault.jpg", "date": "2016-10-25T13:35:01Z", "views": "436642", "tags": ["software exploitation", "what is ctf?", "what is capture the flag?", "capture the flag competition", "security ctf", "hacking ctf", "defcon ctf", "what is hacking ctf?", "ctftime.org", "ctftime", "how to learn hacking", "how to play ctf"], "title": "What is CTF? An introduction to security Capture The Flag competitions", "description": "CTFs are one of the best ways to get into hacking. They require a lot of work and dedication, but are highly rewarding and teach you a lot. Here is a quick introduction on how to get started with CTFs.\nCTFtime: https://ctftime.org/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kEsshExn7aE", "thumbnail": "https://i.ytimg.com/vi/kEsshExn7aE/hqdefault.jpg", "date": "2016-10-21T17:12:44Z", "views": "229117", "tags": ["software exploitation", "dirtyc0w", "dirtycow", "root exploit", "linux privilege escalation", "race condition exploit", "dirty cow exploit", "madcow", "CVE-2016-5195", "dirtycow.ninja", "how to exploit", "how to hack linux", "0day exploit", "0day linux exploit", "0day root exploit", "how to root linux", "hack root account", "race condition", "dirtyc0w.c"], "title": "Explaining Dirty COW local root exploit - CVE-2016-5195", "description": "Video walkthrough the dirtyc0w privilege escalation exploit. Exploiting a Kernel race-condition.\nsite: http://dirtycow.ninja/\nPatch: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619\nPage Table Entry: https://www.kernel.org/doc/gorman/html/understand/understand006.html \nMadvise code: https://github.com/torvalds/linux/blob/5924bbecd0"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qMEJ11jhlAc", "thumbnail": "https://i.ytimg.com/vi/qMEJ11jhlAc/hqdefault.jpg", "date": "2016-10-18T14:28:59Z", "views": "2272", "tags": ["software exploitation", "riscure", "embedded hardware ctf", "hardware hacking", "hacker vlog", "hacking vlog"], "title": "Channel is growing and Riscure hardware CTF starting soon - loopback 0x01", "description": "State of the channel and updates Oct. 2016\nRiscure embedded hardware CTF: http://rhme.riscure.com/index.php\nCyberspace Camp: https://www.youtube.com/channel/UCCm0tSE3YMifM93QjqsWRJA\nMicah: https://www.youtube.com/channel/UCaEgw3321ct_PE4PJvdhXEQ"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "JFIGpRh76XY", "thumbnail": "https://i.ytimg.com/vi/JFIGpRh76XY/hqdefault.jpg", "date": "2016-10-14T15:39:41Z", "views": "13022", "tags": ["software exploitation", "angularjs sandbox bypass", "what is a sandbox bypass", "sandbox bypass 1.5.8", "angularjs sandbox", "how to bypass javascript sandbox", "bypassing javascript sandbox", "expression sandbox", "sandbox bypass 1.5.7"], "title": "Sandbox bypass for the latest AngularJS version 1.5.8 - XSS with AngularJS 0x4", "description": "The current AngularJS version is still vulnerable to this bypass. We just had to modify the latest fixed bypass to break the incomplete fix in 1.5.7\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6cYZJLcC6Eo", "thumbnail": "https://i.ytimg.com/vi/6cYZJLcC6Eo/hqdefault.jpg", "date": "2016-10-11T15:48:48Z", "views": "25963", "tags": ["digitalocean", "digital ocean", "format string", "printf", "regular expressions", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "ctf walkthrough", "internetwache", "ctf recording", "security ctf", "security capture the flag", "exploitation challenge", "how to exploit"], "title": "Live Hacking - Internetwache CTF 2016 - exp50, exp70, exp80", "description": "Commented walkthrough of the security CTF Internetwache 2016. Exploitation challenges.\nGet DigitalOcean (referral):* https://m.do.co/c/826f195e2288"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "y69uIxU0eI8", "thumbnail": "https://i.ytimg.com/vi/y69uIxU0eI8/hqdefault.jpg", "date": "2016-10-06T09:05:39Z", "views": "25721", "tags": ["how to reverse engineer", "radare2", "r2pipe", "scripting radare2", "import r2pipe", "tumctf", "reverse engineering with radare2"], "title": "Scripting radare2 with python for dynamic analysis - TUMCTF 2016 Zwiebel part 2", "description": "In part 1 we reverse engineered the algorithm, now we implement a radare2 script in python to recover the flag and defeat the encrypted code. \nThe code zwiebel.py: https://gist.github.com/LiveOverflow/3bd87ba4ffc48bda07d82eb4223911fa"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "LOrSbtNXBtg", "thumbnail": "https://i.ytimg.com/vi/LOrSbtNXBtg/hqdefault.jpg", "date": "2016-10-04T14:39:51Z", "views": "39166", "tags": ["binaryninja", "binary ninja", "radare2", "binary ninja tutorial", "reverse engineering", "how to reverse engineer a program", "tumctf", "ctf challenge", "anti-debugging", "ptrace anti debug"], "title": "Reverse Engineering with Binary Ninja and gdb a key checking algorithm - TUMCTF 2016 Zwiebel part 1", "description": "Part 1 is about understanding the algorithm with binary.ninja and gdb. Zwiebel is a reversing CTF challenge with encrypted self-modifying code. \n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "TfJrU95q1J4", "thumbnail": "https://i.ytimg.com/vi/TfJrU95q1J4/hqdefault.jpg", "date": "2016-09-30T15:24:37Z", "views": "93440", "tags": ["infosec", "heap overflow", "how to exploit the heap", "how to exploit malloc", "heap vulnerabilities", "heap overflow tutorial", "hands on hacking"], "title": "The Heap: How to exploit a Heap Overflow - bin 0x15", "description": "We are solving heap1 from exploit-exercises.com by exploiting a heap overflow.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "HPDBOhiKaD8", "thumbnail": "https://i.ytimg.com/vi/HPDBOhiKaD8/hqdefault.jpg", "date": "2016-09-27T15:13:26Z", "views": "126022", "tags": ["infosec", "heap overflow", "how does the heap work", "how does malloc work", "what is the heap", "what is malloc", "how to exploit the heap", "how does dynamic memory work"], "title": "The Heap: what does malloc() do? - bin 0x14", "description": "Introducing the heap by looking at what malloc() does.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "KaEj_qZgiKY", "thumbnail": "https://i.ytimg.com/vi/KaEj_qZgiKY/hqdefault.jpg", "date": "2016-09-23T16:49:28Z", "views": "113701", "tags": ["what is csrf", "csrf attack", "post csrf", "json csrf", "what is the same-origin policy", "same origin policy", "cross site request forgery", "csrf tutorial", "cross site request forgery tutorial", "csrf tricks"], "title": "CSRF Introduction and what is the Same-Origin Policy? - web 0x04", "description": "What is cross site request forgery and what does it have to do wwith the same-origin policy. \n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Hium4FVAR5A", "thumbnail": "https://i.ytimg.com/vi/Hium4FVAR5A/hqdefault.jpg", "date": "2016-09-20T04:20:43Z", "views": "10346", "tags": ["xss", "tutorial", "ctf", "angularjs", "javascript", "1.4.7", "bypass", "sandbox", "escape", "sandbox bypass", "cross site scripting", "what is a javscript sandbox", "how a javascript sandbox works", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec"], "title": "New Sandbox Bypass in 1.4.7 - XSS with AngularJS 0x3", "description": "Walkthrough of the sandbox bypass for version 1.4.7 by Gareth Heyes that leads to XSS in AngularJS.\nmario heiderich @0x6d6172696f (https://cure53.de/)\ngareth heyes @garethheyes \nXSS without HTML: Client-Side Template Injection with AngularJS\nhttp://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html\nAn Abusive Relationship with AngularJS\nhttps://vimeo.com/165951806"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6pGEVDderN4", "thumbnail": "https://i.ytimg.com/vi/6pGEVDderN4/hqdefault.jpg", "date": "2016-09-16T16:37:15Z", "views": "8465", "tags": ["1.4.7", "charAt", "prototype", "constructor.prototype", "debug javascript", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "angularjs xss", "sandbox bypass"], "title": "Previous Bypass is now fixed in version 1.4.7 - XSS with AngularJS 0x2", "description": "Testing the old bypass from version 1.0.8 on a new version 1.4.7 where it's fixed, to prepare for a different bypass.\nmario heiderich @0x6d6172696f (https://cure53.de/)\ngareth heyes @garethheyes \nXSS without HTML: Client-Side Template Injection with AngularJS\nhttp://blog.portswigger.net/2016/01/x...\nAn Abusive Relationship with AngularJS\nhttps://vimeo.com/165951806"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8GwVBpTgR2c", "thumbnail": "https://i.ytimg.com/vi/8GwVBpTgR2c/hqdefault.jpg", "date": "2016-09-13T16:16:51Z", "views": "78260", "tags": ["infosec", "advanced cross site scripting", "how to bypass xss auditor", "chrome xss auditor", "xss tricks", "cross-site-scripting", "xss context", "bypass xss protection"], "title": "XSS Contexts and some Chrome XSS Auditor tricks - web 0x03", "description": "Showing off some cross site scripting techniques and looking at the chrome XSS Auditor\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "H3rtbWQAMZ8", "thumbnail": "https://i.ytimg.com/vi/H3rtbWQAMZ8/hqdefault.jpg", "date": "2016-09-09T13:46:28Z", "views": "35821", "tags": ["ethical hacking", "infosec", "saleae", "saleae logic pro", "saleae logic pro 8", "logic pro 8", "hardware reverse engineering", "logic analyzer", "digital logic analyzer", "protocol analyzer", "nec protocol", "ir remote protocol", "reverse engineering ir remote", "how does a remote work", "saleae logic", "saleae analyzer sdk"], "title": "Capturing & Analyzing Packets with Saleae Logic Pro 8 - Reverse Engineering A/C Remote part 2", "description": "Using the Saleae Logic Pro 8 digital analyzer to reverse engineer the packets from my air conditioner remote.\nNECAnalyzer code and captured trace: https://github.com/LiveOverflow/NECAnalyzer\nSaleae Logic Pro 8: https://www.saleae.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "DkL3jaI1cj0", "thumbnail": "https://i.ytimg.com/vi/DkL3jaI1cj0/hqdefault.jpg", "date": "2016-09-06T13:28:22Z", "views": "15153", "tags": ["sandbox bypass", "angularjs", "angular", "ng-app", "cross site scripting", "constructor", "alert(1)", "angularjs xss", "angularjs security", "how to hack angularjs"], "title": "Sandbox Bypass in Version 1.0.8 - XSS with AngularJS 0x1", "description": "Bypassing the AngularJS Sandbox for version 1.0.8 to get XSS.\nmario heiderich @0x6d6172696f (https://cure53.de/)\ngareth heyes @garethheyes \nXSS without HTML: Client-Side Template Injection with AngularJS\nhttp://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html\nAn Abusive Relationship with AngularJS\nhttps://vimeo.com/165951806"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "67Yc8_Bszlk", "thumbnail": "https://i.ytimg.com/vi/67Yc8_Bszlk/hqdefault.jpg", "date": "2016-09-02T15:35:14Z", "views": "38866", "tags": ["ng-app", "sandbox", "sandbox bypass", "cross site scripting", "constructor", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "security ctf", "introduction to angularjs", "angularjs security", "angularjs xss"], "title": "Introducing the AngularJS Javascript Framework - XSS with AngularJS 0x00", "description": "Introduction to AngularJS {{expressions}}. Next videos will be about bypassing AngularJS expressions in v1.0.8 to gain XSS\nTry it out yourself: http://liveoverflow.com/angularjs/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Q2mGcbkX550", "thumbnail": "https://i.ytimg.com/vi/Q2mGcbkX550/hqdefault.jpg", "date": "2016-08-30T16:00:16Z", "views": "131770", "tags": ["infosec", "php tutorial", "php xss", "php cross site scripting", "prevent cross site scripting", "why php sucks", "bad php tutorials", "attacking php website", "how to hack php website", "learn php programming"], "title": "What is PHP and why is XSS so common there? - web 0x02", "description": "We learn about simple php web apps and why it's so common that php applications have XSS issues. It's all about shitty tutorials.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "jTEkUay_YMU", "thumbnail": "https://i.ytimg.com/vi/jTEkUay_YMU/hqdefault.jpg", "date": "2016-08-26T19:48:39Z", "views": "62685", "tags": ["ethical hacking", "infosec", "logic analyzer", "jupyter notebook", "analyzing digital signal", "analysing digital signal", "radio packet", "ctf", "hardware reverse engineering", "reverse engineer rc", "reverese engineer remote", "air conditioner"], "title": "Building Poor Man's Logic Analyzer with an Arduino - Reverse Engineering A/C Remote part 1", "description": "Capturing the packets from my air conditioner remote to reverse engineer the protocol.\nLonger and way better reverse engineering video by EEVblog: https://www.youtube.com/watch?v=BUvFGTxZBG8\nJupyter Notebook: https://jupyter.org/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "C_gZb-rNcVQ", "thumbnail": "https://i.ytimg.com/vi/C_gZb-rNcVQ/hqdefault.jpg", "date": "2016-08-23T16:47:07Z", "views": "86989", "tags": ["infosec", "what is a webserver", "what is the http protocol", "what does http mean", "http request by hand", "http request with netcat"], "title": "The HTTP Protocol: GET /test.html - web 0x01", "description": "We perform a HTTP GET Requesy by hand and learn how a webserver works.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "jmgsgjPn1vs", "thumbnail": "https://i.ytimg.com/vi/jmgsgjPn1vs/hqdefault.jpg", "date": "2016-08-19T15:01:17Z", "views": "134521", "tags": ["infosec", "web development", "fast introduction to html css javascript", "html css javascript", "how to make a website with html css javascript"], "title": "HTML + CSS + JavaScript introduction - web 0x00", "description": "Before we get into security stuff we have to talk a little bit about the basics of web development. A very fast introduction to HTML, CSS and JavaScript.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "t1LH9D5cuK4", "thumbnail": "https://i.ytimg.com/vi/t1LH9D5cuK4/hqdefault.jpg", "date": "2016-08-16T20:30:12Z", "views": "75654", "tags": ["infosec", "global offset table", "what is got", "what is plt", "got.plt", "format string exploit", "format string vulnerability", "exploiting printf"], "title": "Format String Exploit and overwrite the Global Offset Table - bin 0x13", "description": "In this episode we combine the last two videos. Format String + overwriting an entry of the Global Offset Table to solve format4 from exploit.education\nformat4: https://exploit.education/protostar/format-four/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "kUk5pw4w0h4", "thumbnail": "https://i.ytimg.com/vi/kUk5pw4w0h4/hqdefault.jpg", "date": "2016-04-19T14:15:25Z", "views": "74868", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "plt", "got", "procedure linkage table", "global offset table", "section", "segment", "shared library", "libc", "dynamic library", "loader", "linux", "ELF", "binary", "reverse engineering"], "title": "Global Offset Table (GOT) and Procedure Linkage Table (PLT) - bin 0x12", "description": "In this video we will introduce how shared libraries like libc are used by C programs. Specifically we will look at the Global Offset Table and the Procedure Linkage Table.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "0WvrSfcdq1I", "thumbnail": "https://i.ytimg.com/vi/0WvrSfcdq1I/hqdefault.jpg", "date": "2016-04-09T14:09:31Z", "views": "149430", "tags": ["exploitation", "hacker", "tutorial", "ctf", "format", "string", "formatstring", "format string", "printf", "fprintf", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "what is a format string vulnerability", "what is a format string exploit"], "title": "A simple Format String exploit example - bin 0x11", "description": "Solving format1 from exploit-exercises.com with a simple Format String vulnerability, exploited with %n.\nstack layout: https://www.win.tue.nl/~aeb/linux/hh/stack-layout.html\nformat1: https://exploit.education/protostar/format-one/\nCTF format string exploit: https://gist.github.com/LiveOverflow/937b659c9a37be099ddd"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "X_PbKmZfeVo", "thumbnail": "https://i.ytimg.com/vi/X_PbKmZfeVo/hqdefault.jpg", "date": "2016-03-17T00:50:57Z", "views": "17142", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "internetwache", "internetwache ctf", "web", "web50", "web60", "web80", "gehaxelt"], "title": "Live Hacking - Internetwache CTF 2016 - web50, web60, web80", "description": "Commented walkthrough of the security CTF Internetwache 2016. Web Hacking challenges.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "dnHuZLySS6g", "thumbnail": "https://i.ytimg.com/vi/dnHuZLySS6g/hqdefault.jpg", "date": "2016-03-09T16:15:44Z", "views": "13551", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "bkpctf", "boston keyparty", "bostonkey.party", "bostonkeyparty.net", "pwnable", "pwn", "heap exploit", "use after free", "use-after-free", "UAF"], "title": "Leaking Heap and Libc address - BKPCTF cookbook (pwn 6) part 2", "description": "Part 1: reverse engineering the functionality of the cookbook binary with IDA\nPart 2: Leaking heap address and libc base address\nPart 3: Arbitrary write - House of Force\nexploit: https://gist.github.com/LiveOverflow/dadc75ec76a4638ab9ea"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "vXWHmucgZW0", "thumbnail": "https://i.ytimg.com/vi/vXWHmucgZW0/hqdefault.jpg", "date": "2016-02-16T19:49:32Z", "views": "152055", "tags": ["assembler", "disassembler", "disassembly", "gnu debugger", "debugger", "local variables", "reversing", "reverse engineering software", "reverse engineering with gdb", "reverse engineering with radare2", "reverse engineering tutorial", "how to read assembler", "how to reverse engineer"], "title": "Reverse engineering C programs (64bit vs 32bit) - bin 0x10", "description": "Learning how to reverse engineering programs written in C. We do this by comparing x64 and x32 compiled programs.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "m17mV24TgwY", "thumbnail": "https://i.ytimg.com/vi/m17mV24TgwY/hqdefault.jpg", "date": "2016-02-10T21:51:32Z", "views": "91342", "tags": ["ctf", "explot-exercises.com", "exploit-exercises", "stack6", "ret2libc", "rop", "/bin/sh", "gadget", "return to libc", "non executable stack", "non-executable", "nx-bit set"], "title": "Doing ret2libc with a Buffer Overflow because of restricted return pointer - bin 0x0F", "description": "Solving stack6 from exploit-exercises.com with the re2libc technique.\nstack6: https://exploit.education/protostar/stack-six/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "8QzOC8HfOqU", "thumbnail": "https://i.ytimg.com/vi/8QzOC8HfOqU/hqdefault.jpg", "date": "2016-02-03T10:56:18Z", "views": "93363", "tags": ["stack smashing", "smash the stack", "phrack", "gdb", "objdump", "overwrite stack pointer", "overwrite", "exploit-exercises.com", "debugging with gdb", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "how does a buffer overflow work", "what is a buffer overflow"], "title": "Buffer Overflows can Redirect Program Execution - bin 0x0D", "description": "This video shows you how to take over control of a program with a buffer overflow\nstack3: https://exploit.education/protostar/stack-three/\nstack4: https://exploit.education/protostar/stack-four/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "HSlhY4Uy8SA", "thumbnail": "https://i.ytimg.com/vi/HSlhY4Uy8SA/hqdefault.jpg", "date": "2016-02-03T10:54:48Z", "views": "245600", "tags": ["exploit-exercises", "exploit-exercises.com", "gdb", "shellstorm", "bufferoverflow", "debugging", "code execution", "stack overflow", "eip", "rip", "return pointer", "smash the stack", "stack smashing", "stack", "overflowing the return pointer", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec"], "title": "First Exploit! Buffer Overflow with Shellcode - bin 0x0E", "description": "We write our first real exploit to get root access. Solving stack5 from exploit-exercises.com with a simple Buffer Overflow and shellcode.\nRun into some problems (illegal instruction): https://www.reddit.com/r/LiveOverflow/comments/54o705/found_what_i_think_is_a_slight_problem_in_the/\nStack Level 5: https://exploit.education/protostar/stack-five/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "T03idxny9jE", "thumbnail": "https://i.ytimg.com/vi/T03idxny9jE/hqdefault.jpg", "date": "2016-01-30T00:07:58Z", "views": "173194", "tags": ["bufferoverflow", "stackoverflow", "stack overflow", "stacksmashing", "smash the stack for fun and profit", "exploit-exercises.com", "stack layout", "disassemble main", "stack pointer", "base pointer", "instruction pointer", "debugging with gdb", "how to exploit a program"], "title": "First Stack Buffer Overflow to modify Variable - bin 0x0C", "description": "We will write our first Buffer Overflow for the stack0 level of exploit-exercises.com. \nstack0: https://exploit.education/protostar/stack-zero/\nIntel Reference: intel.de/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "Y-4WHf0of6Y", "thumbnail": "https://i.ytimg.com/vi/Y-4WHf0of6Y/hqdefault.jpg", "date": "2016-01-25T23:21:24Z", "views": "123323", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "setuid", "exploit-exercises", "exploit-erxercises.com", "protostar", "VMware", ".iso", "ssh"], "title": "Smashing the Stack for Fun and Profit - setuid, ssh and exploit.education - bin 0x0B", "description": "This video introduces https://exploit.education, how to connect to the VM with ssh and explains what setuid binaries are. \nPhrack: http://phrack.org/issues/49/14.html\nIntel Reference: http://www.intel.de/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf\nPutty: http://www.chiark.greenend.org.uk/~sgtatham/putty/downlo"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "mT1V7IL2FHY", "thumbnail": "https://i.ytimg.com/vi/mT1V7IL2FHY/hqdefault.jpg", "date": "2016-01-22T23:09:19Z", "views": "65409", "tags": ["hexadecimal", "decimal", "binary", "number system", "dozenal", "convert hex", "architecture", "8bit", "8 bit", "32bit", "64bit", "double word", "python struct", "numberphile", "what is a byte", "what is a bit", "why use hexadecimal", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec", "difference between 64bit and 32bit"], "title": "The deal with numbers: hexadecimal, binary and decimals - bin 0x0A", "description": "Why hexadecimal is cool and how we can convert between number systems\nBase 12 - Numberphile: https://www.youtube.com/watch?v=U6xJfP7-HCc"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "fLS99zJDHOc", "thumbnail": "https://i.ytimg.com/vi/fLS99zJDHOc/hqdefault.jpg", "date": "2016-01-15T23:47:55Z", "views": "204498", "tags": ["kernel module", "user space", "kernel space", "ring 0", "low level", "operating system", "what is linux", "kernel source", "what is a syscall", "how do syscall works", "read linux source code", "what does the kernel do", "kernel vs user mode", "user vs kernel", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec"], "title": "Syscalls, Kernel vs. User Mode and Linux Kernel Source Code - bin 0x09", "description": "We will have a look at what syscalls are and what it has to do with the kernel mode an user mode. We do this by exploring a kernel function and trace it down to the assembler level.\njoin the discussion: https://www.reddit.com/r/LiveOverflow/comments/415sxb/0x09_syscalls_kernel_vs_user_mode_and_linux/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "OZvc-c1OLnM", "thumbnail": "https://i.ytimg.com/vi/OZvc-c1OLnM/hqdefault.jpg", "date": "2016-01-12T18:18:04Z", "views": "109436", "tags": ["shellcode", "hacker", "reversing", "reverse-engineering", "cracking", "crackme", "radare2", "gdb", "uncrackable", "stop cracks", "stop hackers", "binary loading", "parser differential", "langsec", "anti debugging", "prevent reverse engineering", "stop reverse engineering"], "title": "Uncrackable Program? Finding a Parser Differential in loading ELF - Part 2/2 - bin 0x08", "description": "Can programs be uncrackable? Let's try to find some anti-debugging tricks.\nhttps://www.sentinelone.com/blog/breaking-and-evading/ \nhttp://blog.ioactive.com/2012/12/striking-back-gdb-and-ida-debuggers.html?m=1 \nPoC||GTFO Journal # 0x00"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "qS4VWL5R_OM", "thumbnail": "https://i.ytimg.com/vi/qS4VWL5R_OM/hqdefault.jpg", "date": "2016-01-08T18:28:41Z", "views": "329278", "tags": ["reverse-engineering", "reverese engineering", "reversing", "unrackable", "protection", "circumvention", "bypass", "patch binary", "radare2", "idapro", "ida pro", "keygenme", "keygenning", "prevent reverse engineering", "how to make a keygen", "how to create a keygen", "how to crack a program", "stop reverse engineering"], "title": "Uncrackable Programs? Key validation with Algorithm and creating a Keygen - Part 1/2 - bin 0x07", "description": "InfoSec clickbait title by BuzzSec! Key validation with Algorithm and creating a Keygen - Part 1/2\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "3NTXFUxcKPc", "thumbnail": "https://i.ytimg.com/vi/3NTXFUxcKPc/hqdefault.jpg", "date": "2016-01-06T02:25:21Z", "views": "324442", "tags": ["shellcode", "radare2", "gdb", "reversing", "reverse engineering", "tools", "decompiler", "disassembler", "strace", "ltrace", "ptrace", "objdump", "hopperapp", "hopper", "radare2 vs ida", "hopper vs ida", "ida vs hopper", "hopperapp vs ida"], "title": "Simple Tools and Techniques for Reversing a binary - bin 0x06", "description": "Exploring and comparing some common tools and techniques for reversing binaries.\nhttps://github.com/radare/radare2"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "wLsckMfScOg", "thumbnail": "https://i.ytimg.com/vi/wLsckMfScOg/hqdefault.jpg", "date": "2015-12-31T13:59:46Z", "views": "20480", "tags": ["shellcode", "32c3ctf", "stack layout", "stack smashing", "sigabort", "sigsegv", "0x41414141", "ELF binary", "32c3", "chaos communication congress", "32c3-ctf", "readme.bin", "pwnable", "pwnable 200", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec"], "title": "Abusing the exception handler to leak flag - 32C3CTF readme (pwnable 200)", "description": "Solving the readme pwnable 200 from the 32c3 ctf. I didn't solve it during the CTF but worked through several writeups and doing some more research. Now that I understood it I recorded solving the challenge again and recorded a commentary for it.\nCORRECTION: I explained the stack canary with the `fs` register wrong. The `fs` register has an address and the stack canary is stored at offset +0x28 fr"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "VroEiMOJPm8", "thumbnail": "https://i.ytimg.com/vi/VroEiMOJPm8/hqdefault.jpg", "date": "2015-12-30T01:38:50Z", "views": "456093", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "Reverse Engineering (Software Genre)", "reversing", "cracking", "crackme", "keygenme", "gdb", "GNU Debugger (Software)", "license", "crack", "patch", "jump", "breakpoint", "control graph", "graph", "execution flow", "hopper", "ida", "idapro", "radare", "radare2", "r2", "Hacker (Interest)", "C (Programming Language)", "Software Cracking"], "title": "Reversing and Cracking first simple Program - bin 0x05", "description": "A very simple reversing challenge for Linux\nGitHub: https://github.com/LiveOverflow/liveoverflow_youtube/tree/master/0x05_simple_crackme_intro_assembler\nhttp://crackmes.de\nhttp://www.hopperapp.com/\nhttps://www.hex-rays.com/products/ida/\nhttps://github.com/radare/radare2"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "6jSKldt7Eqs", "thumbnail": "https://i.ytimg.com/vi/6jSKldt7Eqs/hqdefault.jpg", "date": "2015-12-24T23:04:56Z", "views": "287964", "tags": ["exploitation", "shellcode", "architecture", "x86", "disassembler", "how to read assembler", "how to disassemble", "how to reverse engineer a program", "how a cpu works", "what is assembler", "how to reverse engineer", "what is disassembly"], "title": "How a CPU works and Introduction to Assembler - bin 0x04", "description": "How a CPU works. An introduction to reading assembler instructions. \nhttps://microcorruption.com/"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "ajy1PHWYeyQ", "thumbnail": "https://i.ytimg.com/vi/ajy1PHWYeyQ/hqdefault.jpg", "date": "2015-12-21T23:06:40Z", "views": "144800", "tags": ["shellcode", "python", "programming", "fast introduction to python", "how to learn python", "learn python", "python tutorial", "learn python for hacking", "python vs c", "c vs python"], "title": "Writing a simple Program in Python - bin 0x03", "description": "Just a super quick introduction into python programming.\ncodecademy Python course: https://www.codecademy.com/learn/python"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "JGoUaCmMNpE", "thumbnail": "https://i.ytimg.com/vi/JGoUaCmMNpE/hqdefault.jpg", "date": "2015-12-17T22:09:02Z", "views": "224794", "tags": ["exploitation", "exploit", "xss", "shellcode", "hacker", "tutorial", "ctf", "c programming", "fast introuduction to programming", "learn programming in c", "how to use gcc", "how to write c"], "title": "Writing a simple Program in C", "description": "A fast introduction into programming with C.\n-"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "navuBR4aJSs", "thumbnail": "https://i.ytimg.com/vi/navuBR4aJSs/hqdefault.jpg", "date": "2015-12-14T23:28:32Z", "views": "242321", "tags": ["infosec", "how to install linux", "install linux in a vm", "installing linux for hacking", "linux tutorial", "how to learn linux", "how to use the linux console", "why install linux"], "title": "Introduction to Linux - Installation and the Terminal - bin 0x01", "description": "Installing Ubuntu Linux in a VM and introduction to the command-line.\nUbuntu: http://www.ubuntu.com/download/desktop\nVMWare Player: https://www.vmware.com/products/player\nVirtualBox: https://www.virtualbox.org/\nEverything is a file: https://en.wikipedia.org/wiki/Everything_is_a_file\ndotfiles: https://plus.google.com/+RobPikeTheHuman/posts/R58WgWwN9jp"}
{"channel_id": "UClcE-kVhqyiHCcjYwcpfj9w", "video_id": "iyAyN3GFM7A", "thumbnail": "https://i.ytimg.com/vi/iyAyN3GFM7A/hqdefault.jpg", "date": "2015-12-14T23:27:12Z", "views": "485620", "tags": ["exploitation", "exploit", "shellcode", "ctf", "how to become a hacker", "how to learn hacking", "how to hack", "hacking tutorial", "reverse engineering", "information security", "ethical hacking", "infosec"], "title": "LiveOverflow Channel Introduction and Backstory - bin 0x00", "description": "A little bit of background why I created this channel and what you can expect.\n-"}